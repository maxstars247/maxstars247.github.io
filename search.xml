<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>使用MIX2s接收业余无线电卫星</title>
      <link href="/2025/05/10/shi-yong-mix2s-jie-shou-ye-yu-wu-xian-dian-wei-xing/"/>
      <url>/2025/05/10/shi-yong-mix2s-jie-shou-ye-yu-wu-xian-dian-wei-xing/</url>
      
        <content type="html"><![CDATA[<h2 id="使用MIX2s接收业余无线电卫星"><a href="#使用MIX2s接收业余无线电卫星" class="headerlink" title="使用MIX2s接收业余无线电卫星"></a>使用MIX2s接收业余无线电卫星</h2><p><strong>背景</strong>：由于退役的MIX2s没有什么机会继续工作导致之前很长一段时间内只能用来折腾，玩玩刷机，解开root等无聊的事情</p><p><strong>事实上，官方不维护系统以后，你的手机可能会在2-3年以后退役</strong>：因为软件不为过期的手机服务，而且体积越来越大，需要的性能越来越离谱，导致手机越用越卡。但是软件体验没有丝毫提升，反而被铺天盖地的功能和推送算法消耗掉所有的性能。这种情况下，你只能被迫淘汰你的设备，或者找一些压力小的项目尝试让它工作</p><p><strong>给MIX2s刷win10就是一项有趣的工作之一，它打开了一个新天地，最重要的是</strong>：有了windows平台，它可以连上SDR进行解码，并且使用和windows一样的软件进行实时解码而不需要你再从电台上收音录制后再进行解码</p><p>这是一项非常有趣的工作，你可以体验到比小米14Ultra卫星通话更有趣的卫星接收(由于RTL-SDR只能收不能发，所以不能进行通联)，并且只需要折腾软件环境</p><p><strong>注意</strong>：使用MIX2s接收各种频段的卫星也属于操作电台的过程，请按照相关的法律法规严格执行你的操作过程，否则可能会造成不必要的麻烦。相关条例自行搜索，这里不做赘述。由操作不当造成的不良后果，需要自行承担</p><h3 id="需要的硬件"><a href="#需要的硬件" class="headerlink" title="需要的硬件"></a>需要的硬件</h3><p><strong>简介</strong>：你可能会用到以下的硬件，至于你是否需要功能更丰富的硬件，取决于你的钱包</p><p>1.<strong>刷好win10的mix2s</strong>:</p><p><img src="/2025/05/10/shi-yong-mix2s-jie-shou-ye-yu-wu-xian-dian-wei-xing/IMG_20250510_162849.jpg"></p><p>2.<strong>一个可充电的USB拓展坞+一个干扰小的USB拓展坞</strong>：如果你的拓展坞能同时充电并且干扰较小，你只需要购买一个即可。判断扩展坞是否会干扰接收的方法是将你的扩展坞靠近天线，如果出现了明显的固定卫星，并且高于底噪，你的扩展坞就干扰了天线</p><p>3.<strong>RTL-SDRv3</strong>：你也可以选择RTL-SDRv4，取决于你的需求</p><p><img src="/2025/05/10/shi-yong-mix2s-jie-shou-ye-yu-wu-xian-dian-wei-xing/RTLSDR_Front.jpg"></p><p>4.<strong>一条2-3m长的USB2.0延长线</strong>：这里线的长度需要超过2m，防止因为不同的接收姿势导致线不够长而拖拽你的设备。如果你的天线能固定住手机，例如有两个手机支架，那么你可以不买这个线</p><p>5.<strong>一副能与RTL-SDRv3连接的天线+馈线</strong>：根据你的需要选择即可</p><p>6.<strong>一台用于寻星的手机</strong>：有云台或使用全向天线的可以忽略，没有云台并且使用定向天线的需要使用。这里推荐使用八木+look4sat</p><h3 id="折腾软件"><a href="#折腾软件" class="headerlink" title="折腾软件"></a>折腾软件</h3><p><strong>简介</strong>：你可能会需要以下的教程</p><p><strong>windows刷机教程</strong>：<a href="https://blog.maxstars.xyz/2025/01/28/mix2s-shua-ru-peng-pai-win10/">https://blog.maxstars.xyz/2025/01/28/mix2s-shua-ru-peng-pai-win10/</a></p><p><strong>SDR接收NOAA气象卫星教程</strong>：<a href="https://blog.maxstars.xyz/2025/01/01/shi-yong-sdr-jie-shou-noaa/">https://blog.maxstars.xyz/2025/01/01/shi-yong-sdr-jie-shou-noaa/</a></p><p><strong>注意</strong>：这里的VB-CABLE已经更新了<code>Arm64</code>版，你需要使用最新的<code>Pack45</code>版本</p><p><img src="/2025/05/10/shi-yong-mix2s-jie-shou-ye-yu-wu-xian-dian-wei-xing/image-20250510165848474.png"></p><p>刷好<code>windows</code>后，连接你的设备，根据<code>NOAA</code>来测试你的<code>MIX2s</code>是否能正常接收到<code>NOAA APT</code>卫星：</p><p><img src="/2025/05/10/shi-yong-mix2s-jie-shou-ye-yu-wu-xian-dian-wei-xing/IMG_20241009_225927.jpg"></p><p><strong>接收完毕后还能竖着看图，相当震撼</strong>：</p><p><img src="/2025/05/10/shi-yong-mix2s-jie-shou-ye-yu-wu-xian-dian-wei-xing/IMG_20241009_230421.jpg"></p><p><img src="/2025/05/10/shi-yong-mix2s-jie-shou-ye-yu-wu-xian-dian-wei-xing/IMG_20241009_230628.jpg"></p><p><strong>同理，这套系统能接收Metor-M2 3和Metor-M2 4的LRPT</strong>：只在需要在<code>RTL-SDR</code>安装插件进行录制，再到电脑上的<code>satdump</code>解码即可。由于<code>satdump</code>的图片处理很优秀，我已经放弃使用用另一个软件</p><p><img src="/2025/05/10/shi-yong-mix2s-jie-shou-ye-yu-wu-xian-dian-wei-xing/Image_1738227559975.jpg"></p><p><strong>这套系统同样适用于接收SSTV</strong>：只需要把解码的软件换成<code>MMSSTV</code>即可</p><p>由于<code>ISS</code>的<code>SSTV</code>每次活动都有12张图，这使得每次我都要背着电脑负重爬到楼顶，非常打击我的接收热情。有了MIX2s这套轻巧的设备，我们可以极大减轻运动负担</p><p><img src="/2025/05/10/shi-yong-mix2s-jie-shou-ye-yu-wu-xian-dian-wei-xing/IMG_20250506_211531.jpg"></p><p><strong>这套系统也适用于接收卫星遥测卫星</strong>：只需要把解码软件换成<code>soundmodem</code></p><p><img src="/2025/05/10/shi-yong-mix2s-jie-shou-ye-yu-wu-xian-dian-wei-xing/IMG_20241019_211903.jpg"></p><p>更多接收姿势正在探索中</p>]]></content>
      
      
      <categories>
          
          <category> 业余无线电 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>eNSP重启无法运行问题</title>
      <link href="/2025/05/09/ensp-chong-qi-wu-fa-yun-xing-wen-ti/"/>
      <url>/2025/05/09/ensp-chong-qi-wu-fa-yun-xing-wen-ti/</url>
      
        <content type="html"><![CDATA[<h2 id="eNSP重启无法运行问题"><a href="#eNSP重启无法运行问题" class="headerlink" title="eNSP重启无法运行问题"></a>eNSP重启无法运行问题</h2><p><strong>简介</strong>：最近这几天练习<code>eNSP</code>时，发现重启电脑后就不能正常运行了，在启动<code>AR</code>时会报<code>40</code>错误：</p><p><img src="/2025/05/09/ensp-chong-qi-wu-fa-yun-xing-wen-ti/6e32e71e96d5439e80146b8137940e36.png"></p><p>在启动<code>CE6800</code>时会报虚拟化服务启动失败的错误：</p><p><img src="/2025/05/09/ensp-chong-qi-wu-fa-yun-xing-wen-ti/image-20250509115143240.png"></p><p>如果你出现这两种情况，查找了大部分资料都没有解决，大概率和我一样是<code>virtual box</code>的服务项<code>VboxDRV</code>没有正常启动导致的</p><h3 id="问题特征"><a href="#问题特征" class="headerlink" title="问题特征"></a>问题特征</h3><p><strong>简介</strong>：<code>eNSP</code>出现这个问题，你不必卸载所有基本环境后重新配置。想要进一步确定你的<code>virtualbox</code>有没有问题，你需要打开<code>virtualbox</code>并且启动其中任何一个镜像：</p><p><img src="/2025/05/09/ensp-chong-qi-wu-fa-yun-xing-wen-ti/image-20250509120129654.png"></p><p><strong>双击AR镜像进行启动</strong>：正常情况下你的镜像应该会正确启动</p><p><img src="/2025/05/09/ensp-chong-qi-wu-fa-yun-xing-wen-ti/image-20250509120244699.png"></p><p><strong>重启后你的virtualbox应该不能启动镜像，在eNSP下重新注册设备也不能正常运行，并且会报</strong>：</p><p><img src="/2025/05/09/ensp-chong-qi-wu-fa-yun-xing-wen-ti/image-20250509121332705.png"></p><p><img src="/2025/05/09/ensp-chong-qi-wu-fa-yun-xing-wen-ti/image-20250509121326507.png"></p><p><strong>或者报如下错误</strong>：</p><p><strong>Error relaunching VirtualBox VM process: 5<br>Command line: ‘60eaff78-4bdd-042d-2e72-669728efd737-suplib-3rdchild –comment intelios –startvm 53f35ed5-907b-4e1f-a86b-e971c2f866d0 –no-startvm-errormsgbox “–sup-hardening-log&#x3D;C:\SPB_Data\VirtualBox VMs\WinXP\Logs\VBoxHardening.log” (rc&#x3D;-104)</strong></p><p>Please try reinstalling VirtualBox.</p><p>where: supR3HardenedWinReSpawn what: 5 VERR_INVALID_NAME (-104) -<br>Invalid (malformed) file&#x2F;path name.</p><p><strong>在cmd上查看vboxdrv服务是否启动</strong>：如果你的virtualbox和eNSP都打开了，这个服务项的state仍然是stop状态，那么大概率就是出现和我一样的问题了</p><p><code>sc query vboxdrv</code></p><p><img src="/2025/05/09/ensp-chong-qi-wu-fa-yun-xing-wen-ti/image-20250509122702842.png"></p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p><strong>简介</strong>：这个方案是我在转virtualbox官方论坛时发现的，旧版本的virtualbox被装入win10后有概率会出现这个问题。</p><p><strong>链接</strong>：<a href="https://forums.virtualbox.org/viewtopic.php?f=6&t=82277">https://forums.virtualbox.org/viewtopic.php?f=6&amp;t=82277</a></p><p><strong>这里我将主要的步骤机翻并放出来</strong>：</p><p>由于某种原因，当 VboxDRV.sys 内核驱动程序在系统启动时加载并启动时，出现了一些问题。可能是我的杀毒软件挂载了它，但我还没有测试过。我尝试过禁用（而不是卸载）杀毒软件，但没有任何效果。我找到的解决方案是通过将 VboxDRV 服务的启动类型设置为“按需”来延迟其启动。这样，VboxDRV.sys 会在系统启动时加载但不启动，只在需要时才启动。方便的是，运行 VirtualBox 会触发 VboxDRV 服务启动，到那时启动过程应该已经完成​​，一切正常（打开虚拟机时不会出现上述错误）。</p><p>我发现按以下顺序操作效果最佳：</p><ol><li>完全卸载当前安装的所有 VirtualBox</li><li>重启计算机</li><li>安装最新版本的 VirtualBox</li><li>安装完成后不要重启计算机</li><li>打开注册表编辑器。“开始”&gt;“运行”&gt;“regedit”</li><li>转到：HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\VBoxDrv</li><li>编辑名为 Start 的键。将其值从 1 更改为 3</li><li>关闭注册表编辑器并重启电脑。重启后，VirtualBox 应该就能正常使用了。</li></ol><p>重启后，您可以通过打开命令提示符 &gt; 输入 sc query vboxdrv &gt; 在“STATE”下显示“STOPPED”来确认 VBoxDrv 是否在启动时启动。</p><p><strong>在执行完毕上面的操作后，启动virtualbox，你的VBoxDrv状态应该还是stop的</strong>：</p><p><img src="/2025/05/09/ensp-chong-qi-wu-fa-yun-xing-wen-ti/image-20250509122702842.png"></p><p><strong>这里你需要打开eNSP，重新关联virtualbox的路径</strong>：</p><p><img src="/2025/05/09/ensp-chong-qi-wu-fa-yun-xing-wen-ti/image-20250509123302468.png"></p><p><strong>关联完成后，删除virtual内eNSP所有相关的虚拟机。删除后关闭virtualbox，打开eNSP重新注册虚拟机</strong>：</p><p><img src="/2025/05/09/ensp-chong-qi-wu-fa-yun-xing-wen-ti/image-20250509123521885.png"></p><p>注册完成后你应该可以在virtualbox内打开虚拟机镜像，并且发现state变为running状态：</p><p><img src="/2025/05/09/ensp-chong-qi-wu-fa-yun-xing-wen-ti/image-20250509123716212.png"></p><p><strong>注意</strong>：如果没有效果，你需要重新卸载<code>virtualbox</code>，并再次严格执行上述步骤，直到你的虚拟机能够打开镜像：</p><p><img src="/2025/05/09/ensp-chong-qi-wu-fa-yun-xing-wen-ti/image-20250509120244699.png"></p><p>能正确打开镜像后，你需要关闭虚拟机，打开eNSP后就能正常运行了。此时重启电脑再次打开eNSP，应该也不会进行报错。</p><p>如果上面的方法不行，你应该关注virtualbox别的服务项问题，而不是卸载重装virtualbox或者重装系统。关注杀毒软件是否禁用了相关服务项</p><p><strong>注意</strong>：如果你开启了手机模拟器软件(例如mumu)，同样会造成虚拟化失败的问题，需要先关闭模拟器后再打开ensp</p>]]></content>
      
      
      <categories>
          
          <category> win10小毛病 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mix2s刷入澎湃+win10</title>
      <link href="/2025/01/28/mix2s-shua-ru-peng-pai-win10/"/>
      <url>/2025/01/28/mix2s-shua-ru-peng-pai-win10/</url>
      
        <content type="html"><![CDATA[<h2 id="mix2s刷入澎湃-win10"><a href="#mix2s刷入澎湃-win10" class="headerlink" title="mix2s刷入澎湃+win10"></a>mix2s刷入澎湃+win10</h2><p><strong>简介</strong>：mix2s，一面艺术一面科技，晓龙845的芯片，实在不好做为展品留在我的展示柜，看看有没有机会让它发挥一下余热。</p><p><strong>注意</strong>：本教程不与<a href="https://blog.maxstars.xyz/2023/12/10/mix2s-shua-ru-peng-pai-os/">MIX2S刷入澎湃OS教程</a>强关联，没有刷机经验的，也可以从这篇开始看</p><p><strong>参考视频</strong>：<a href="https://www.bilibili.com/video/BV1n6421u7Cv">https://www.bilibili.com/video/BV1n6421u7Cv</a></p><h3 id="安装ADB驱动-fastboot"><a href="#安装ADB驱动-fastboot" class="headerlink" title="安装ADB驱动+fastboot"></a>安装ADB驱动+fastboot</h3><p><strong>教程</strong>：<a href="https://blog.csdn.net/weixin_42581177/article/details/126777539">https://blog.csdn.net/weixin_42581177/article/details/126777539</a></p><p><strong>简介</strong>：按照上述链接下载ADB和fastboot即可，遇到问题可以自行搜索解决</p><h3 id="解锁BL"><a href="#解锁BL" class="headerlink" title="解锁BL"></a>解锁BL</h3><p><strong>官网下载地址</strong>：<a href="https://www.miui.com/unlock/download.html">https://www.miui.com/unlock/download.html</a></p><p><strong>简介</strong>：你要使用小米官方的<code>flash_unlock</code>来解<strong>BL锁</strong>，解锁BL你才能刷机。按住<code>音量-</code>和<code>开机键</code>进入<code>fastboot</code>，登录小米账号，链接手机进行解锁</p><p><img src="/2025/01/28/mix2s-shua-ru-peng-pai-win10/image-20241012104215214.png"></p><p><strong>注意</strong>：解锁会清除手机上所有的数据</p><h3 id="先刷入澎湃OS"><a href="#先刷入澎湃OS" class="headerlink" title="先刷入澎湃OS"></a>先刷入澎湃OS</h3><p><strong>简介</strong>：先刷入澎湃OS可以保证windwows分区完整，有些刷机包会使用扩容包，这样可能会修改分区导致windows系统分区被破坏。</p><h4 id="安装三方rec"><a href="#安装三方rec" class="headerlink" title="安装三方rec"></a>安装三方rec</h4><p><strong>简介</strong>：三方的<code>rec</code>系统有很多，有的功能多种多样，有的功能简单，这里我们使用最简单的<code>TWRP</code>即可</p><p><strong>下载TWRP</strong>：<a href="https://dl.twrp.me/polaris/">https://dl.twrp.me/polaris/</a></p><p><strong>进入上面的网址，下载TWRP，这里推荐3.4.0版本</strong>：</p><p><img src="/2025/01/28/mix2s-shua-ru-peng-pai-win10/image-20250127180448716.png"></p><p>下载完成后打开cmd，刷入rec：</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment"># 刷入rec，刷入的是rec的img文件(例如：polaris.img)</span>fastboot flash recovery <span class="token string">"rec包路径"</span><span class="token comment"># 若上面刷入rec的步骤没有错误，就可以重启到rec(直接使用音量上+开机键)，或者使用如下命令。使用命令的情况下有概率进不了rec</span>fastboot reboot recovery</code></pre><p>此时，你应该会在一屏等待一段时间后，进入TWRP。进入后说明刷入成功：</p><p><img src="/2025/01/28/mix2s-shua-ru-peng-pai-win10/image-20231210211741871.png"></p><h4 id="刷入澎湃OS"><a href="#刷入澎湃OS" class="headerlink" title="刷入澎湃OS"></a>刷入澎湃OS</h4><h5 id="双清系统"><a href="#双清系统" class="headerlink" title="双清系统"></a>双清系统</h5><p><strong>简介</strong>：为了刷入澎湃OS你需要先双清，双清直接进入清除选项：</p><p><img src="/2025/01/28/mix2s-shua-ru-peng-pai-win10/Screenshot_2025-01-27-04-11-38.png"></p><p>选择高级清除，勾选<code>Dalvik</code>, <code>Cache</code>, <code>System</code>, <code>Data</code>，并清除：</p><p><img src="/2025/01/28/mix2s-shua-ru-peng-pai-win10/Screenshot_2025-01-27-04-15-49.png"></p><p><strong>清除后选择格式化Data，输入yes</strong>：</p><p><img src="/2025/01/28/mix2s-shua-ru-peng-pai-win10/Screenshot_2025-01-27-04-15-54.png"></p><p>完成以上步骤后双清完成</p><h5 id="刷入澎湃OS-1"><a href="#刷入澎湃OS-1" class="headerlink" title="刷入澎湃OS"></a>刷入澎湃OS</h5><p><strong>简介</strong>：双清后传刷机包，刷机包可以酷安上找到。</p><p>如果找不到刷机包，查看我的上一篇刷机教程：<a href="https://blog.maxstars.xyz/2023/12/10/mix2s-shua-ru-peng-pai-os/">MIX2S刷入澎湃OS</a></p><p>使用<code>adb</code>发送刷机包到手机：</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">adb push <span class="token string">"刷机包路径"</span> <span class="token operator">/</span>sdcard/</code></pre><p>发送结果应该如图所示，显示一个文件发送成功：</p><p><img src="/2025/01/28/mix2s-shua-ru-peng-pai-win10/image-20250127183242767.png"></p><p>选择安装，进入&#x2F;sdcard路径刷入即可：</p><p><img src="/2025/01/28/mix2s-shua-ru-peng-pai-win10/image-20231210213610487.png"></p><h4 id="刷magisk"><a href="#刷magisk" class="headerlink" title="刷magisk"></a>刷magisk</h4><p><strong>教程</strong>：<a href="https://magiskcn.com/">https://magiskcn.com/</a></p><p><strong>简介</strong>：有的系统没有预装magisk，需要手动安装。由于切换系统必须更改boot文件，使用不同的boot文件才能引导到不同的系统。这里需要刷magisk来获取root权限以获得修改<code>boot.img</code>的权限。</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment"># 刷入改好的boot</span>fastboot flash boot <span class="token string">"magisk路径"</span><span class="token comment"># 重启</span>fastboot reboot</code></pre><p>完成这些步骤后，就算完成澎湃的刷入了，此时需要刷入windows</p><h3 id="刷入Win10"><a href="#刷入Win10" class="headerlink" title="刷入Win10"></a>刷入Win10</h3><p><strong>简介</strong>：我使用mix2s刷入过几个版本的windows系统，但是还是精简版的windows 10流畅，操作性更好。</p><p>安卓刷<code>windows</code>的主流项目由<code>Mindows</code>工具箱维护，这个工具箱几乎支持了晓龙835和845的所有机型</p><p><strong>Mindows工具箱官网</strong>：<a href="https://mindows.cn/">https://mindows.cn/</a></p><p><strong>开始前先下载windows镜像文件</strong>：选择Mindows资源网盘</p><p><img src="/2025/01/28/mix2s-shua-ru-peng-pai-win10/image-20250128152017413.png"></p><p>推荐酷安村头二叔的MIX2S专用包：</p><p><img src="/2025/01/28/mix2s-shua-ru-peng-pai-win10/image-20250128152114121.png"></p><p><strong>下载完成后返回主页，选择一键安装windows</strong>：</p><p><img src="/2025/01/28/mix2s-shua-ru-peng-pai-win10/image-20250128145736230.png"></p><p><strong>按照工具箱的步骤从1进行到3即可</strong>：</p><p><img src="/2025/01/28/mix2s-shua-ru-peng-pai-win10/image-20250128145929288.png"></p><p>按照提示打开USB调试后再次回车进行检测，检测后会提示没有安卓14的rec，这时，我们导入之前下载好的TWRP作为三方REC即可：</p><p><img src="/2025/01/28/mix2s-shua-ru-peng-pai-win10/image-20250128150625632.png"></p><p>导入完成回到主界面回车：提示进入fastboot，我们直接关机，关机后按住<code>音量-</code>和<code>电源</code>键进入fastboot</p><p><strong>接着我们等待脚本执行</strong>：整个过程会自动进行，注意不要操作手机和断开连接线即可</p><p><img src="/2025/01/28/mix2s-shua-ru-peng-pai-win10/image-20250128150908226.png"></p><p><strong>执行一段时间后会进入设置双系统分区大小</strong>：这里平分一下大小即可，设置D盘的大小为0</p><p><img src="/2025/01/28/mix2s-shua-ru-peng-pai-win10/image-20250128151411760.png"></p><p><strong>分区完成后，选择要刷入的系统</strong>：这里选择刚从网盘下载好的镜像</p><p><img src="/2025/01/28/mix2s-shua-ru-peng-pai-win10/image-20250128152543093.png"></p><p>接着就会自动开始刷入，耐心等待即可，刷入过程中不用进行任何操作：这里的进度非常很缓慢，完全可以去干别的事情</p><p><img src="/2025/01/28/mix2s-shua-ru-peng-pai-win10/image-20250128152630997.png"></p><p>这一步结束后你就可以进入windows了，但是还没搞定</p><p><img src="/2025/01/28/mix2s-shua-ru-peng-pai-win10/IMG_20250128_153257.jpg"></p><h4 id="设置双系统切换"><a href="#设置双系统切换" class="headerlink" title="设置双系统切换"></a>设置双系统切换</h4><p>简介：由于现在是双系统，开始的时候我们讲过，需要将双系统不同的<code>boot.img</code>设置到替换脚本中才能成功进行切换。我们需要解压WOA工具包，将里面的mindows切换放到桌面，方面我们日后切换系统：</p><p><img src="/2025/01/28/mix2s-shua-ru-peng-pai-win10/IMG_20250128_153739.jpg"></p><p>将我们安卓的<code>boot.img</code>放入文件夹，替换掉原本的<code>boot.img</code>。安卓的<code>boot.img</code>文件可以在刷机包内找到：</p><p><img src="/2025/01/28/mix2s-shua-ru-peng-pai-win10/image-20250128160432341.png"></p><p>找到这个文件复制出来，等会传到windows系统内</p><p><strong>注意</strong>：如果不修改原来的<code>boot.img</code>，会导致系统切换时无法正常引导，导致切换卡米，因此切换前一定要替换。若已经卡米，也可以启动到rec，使用工具箱内刷入boot的命令进行刷入：</p><p><img src="/2025/01/28/mix2s-shua-ru-peng-pai-win10/image-20250128160643608.png"></p><p><strong>将boot.img文件替换后选择一键切换切换到安卓</strong>：此时遇到无法启动脚本的问题，安装下面的驱动程序即可解决</p><p><img src="/2025/01/28/mix2s-shua-ru-peng-pai-win10/image-20250128154401915.png"></p><p>切换回安卓后，需要发送<strong>Mindows助手</strong>和<strong>windows的启动镜像</strong>到安卓：</p><p><strong>你可以在如下位置找到Mindows助手</strong>：</p><p><img src="/2025/01/28/mix2s-shua-ru-peng-pai-win10/image-20250128161402425.png"></p><p><strong>windows的UEFI启动镜像可以在这里找到</strong>：</p><p><img src="/2025/01/28/mix2s-shua-ru-peng-pai-win10/image-20250128161531781.png"></p><p>先安装好<strong>Mindows助手</strong>，再将<strong>UEFI镜像</strong>放入<strong>Mindows助手</strong>文件夹，最后重命名为<code>uefi.img</code>：</p><p><img src="/2025/01/28/mix2s-shua-ru-peng-pai-win10/image-20250128162324973.png"></p><p>选择重启到windows，测试效果：过程提示root，授权即可：</p><p><img src="/2025/01/28/mix2s-shua-ru-peng-pai-win10/image-20250128162644941.png"></p><p>这里，双系统的切换就完成了。</p>]]></content>
      
      
      <categories>
          
          <category> 刷机教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用SDR接收NOAA气象卫星</title>
      <link href="/2025/01/01/shi-yong-sdr-jie-shou-noaa/"/>
      <url>/2025/01/01/shi-yong-sdr-jie-shou-noaa/</url>
      
        <content type="html"><![CDATA[<h2 id="接收NOAA气象卫星"><a href="#接收NOAA气象卫星" class="headerlink" title="接收NOAA气象卫星"></a>接收NOAA气象卫星</h2><h3 id="NOAA极地气象卫星是什么"><a href="#NOAA极地气象卫星是什么" class="headerlink" title="NOAA极地气象卫星是什么"></a>NOAA极地气象卫星是什么</h3><p><strong>简介</strong>：NOAA是太阳同步极轨卫星，采用双星运行，同一地区每天可有四次过境机会。第五代（NOAA-15—19）传感器采用改进型甚高分辨率辐射仪（AVHRR&#x2F;3），和先进TIROS业务垂直探测器（ATOVS），包括高分辨率红外辐射探测仪（HIRS-3）、先进的微波探测装置A型（AMSU-A）和先进的微波探测装置B型（AMSU-B）。其中AVHRR&#x2F;3传感器包括5个波段，可见光红色波段、近红外波段、中红外波段和两个热红外波段。</p><p><strong>关于NOAA_15详细信息可以在下面的网址查看</strong>：</p><p><a href="https://space.oscar.wmo.int/satellites/view/noaa_15">https://space.oscar.wmo.int/satellites/view/noaa_15</a></p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20240210003049136.png"></p><h4 id="接收介绍"><a href="#接收介绍" class="headerlink" title="接收介绍"></a>接收介绍</h4><p><strong>简介</strong>：现正常工作的NOAA卫星还有NOAA15，18，19。APT模式是NOAA上一种十分好接收的模式，你甚至可以使用拉杆天线或手台的鞭型天线接收该模式的信号，当然你最好还是使用UV段八木天线或者有效增益(判断标准是只能听到APT的模拟声而没有其他噪音)的天线进行接收，这样你才能接收到一副有效的图像。</p><p>本教程提供两套方案，一种是用手台录制音频，到电脑解码。另一种是电脑虚拟声卡直出音频</p><h5 id="天线架设"><a href="#天线架设" class="headerlink" title="天线架设"></a>天线架设</h5><p><strong>简介</strong>：这里强烈推荐八木天线。八木天线具有很强的指向性，如果配合云台或手动指向卫星，会获得很高的增益，你甚至能在八木天线装错的情况下用错误安装的八木天线接收到可用的APT图像，这也是我收到的第一幅APT图像，并且天线是装反的状态：</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/03051432.jpg"></p><p>八木天线超高的增益性甚至能够在仰角较好的情况下接收<code>meteor mn2-3</code>LRPT图像，即使<code>meteor mn2-3</code>的天线没有正确展开。</p><p><strong>当然你也可以使用别的天线来接收</strong>，如：四壁螺旋天线、羊角天线(正V天线)等进行接收。</p><p><strong>注意</strong>：为了防止在安装八木天线时装反振子，你需要格外注意振子的安装方向，<strong>参考安装教程</strong>或<strong>仔细阅读说明书</strong>可以很好的避免在第一次使用这种天线时安装出错，正确安装天线也是您安全接收信号的前提。</p><h5 id="软件使用"><a href="#软件使用" class="headerlink" title="软件使用"></a>软件使用</h5><p><strong>接收工具</strong>：sdrsharp</p><p><strong>解码工具</strong>：WXtoImg</p><p><strong>定位工具</strong>：obitron</p><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><p><strong>简介</strong>：为了接收NOAA系列卫星，你需要配置好上述软件</p><h4 id="obitron"><a href="#obitron" class="headerlink" title="obitron"></a>obitron</h4><p><strong>简介</strong>：obitron是一款卫星定位软件，它有多普勒频移功能，可以抵消卫星高速接近和离开时，频率偏移的影响。</p><p><strong>参考教程</strong>：<a href="https://blog.csdn.net/hpu1011/article/details/6786207">https://blog.csdn.net/hpu1011/article/details/6786207</a></p><p><strong>下载链接</strong>：<a href="https://www.stoff.pl/downloads.php">https://www.stoff.pl/downloads.php</a></p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20240721145444063.png"></p><h5 id="下载obitron"><a href="#下载obitron" class="headerlink" title="下载obitron"></a>下载obitron</h5><p><strong>简介</strong>：直接点击下载链接下载，<code>.exe</code>的为安装版，<code>.zip</code>为绿色版，两个版本没啥区别：</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20240721145919654.png"></p><h5 id="设置语言"><a href="#设置语言" class="headerlink" title="设置语言"></a>设置语言</h5><p>下载完成后，设置language为中文：</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20240721150032160.png"></p><p>选择<code>Miscellaneous</code>里的<code>Language</code>，设置为<code>Chinese simplified</code>，点击<code>apply</code>：</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20240721150313365.png"></p><h5 id="设置坐标"><a href="#设置坐标" class="headerlink" title="设置坐标"></a>设置坐标</h5><p><strong>简介</strong>：为了精确定位，你需要自行设置经纬度。输入地名，经纬度，注意格式，输入完成后选择加到地名表</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20240721150831087.png"></p><p>选择你新加的地名，即可完成定位。</p><h5 id="安装MyDDE驱动"><a href="#安装MyDDE驱动" class="headerlink" title="安装MyDDE驱动"></a>安装MyDDE驱动</h5><p><strong>简介</strong>：还是刚才的下载地址，选择<code>MyDDE Client</code>：</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20240721152436569.png"></p><p>解压后直接放到obitron的文件夹下：</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20240721152722317.png"></p><p>解压后来到旋转器电台这里，设置驱动程序为MyDDE，设置后点击旁边的按钮：</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20240721152929591.png"></p><p>弹出警告，点击确认：</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20240721153040881.png"></p><p>来到刚obitron下的MyDDE文件夹，选择<code>MyDDE.exe</code>：</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20240721153245854.png"></p><p>此时，MyDDE的驱动就设置完成了，选择任意一颗卫星看是否有数据显示，显示数据说明配置成功：</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20240721153353324.png"></p><h4 id="WXtoImg"><a href="#WXtoImg" class="headerlink" title="WXtoImg"></a>WXtoImg</h4><p><strong>简介</strong>：WXtoImg是NOAA专用解码工具，主要的作用就是解码APT信号。这个软件可以实时解码信号，也可以解码录音信号。</p><p><strong>参考链接</strong>：<a href="https://www.hellocq.net/forum/read.php?tid=181294">NOAA卫星云图的接收</a></p><p><a href="https://www.rtl-sdr.com/rtl-sdr-tutorial-receiving-noaa-weather-satellite-images/">RTL-SDR TUTORIAL: RECEIVING NOAA WEATHER SATELLITE IMAGES</a></p><p><a href="https://www.jianshu.com/p/22f72511a783">NOAA气象云图解析软件WXtoImg 模式解析含义</a></p><p><a href="http://jingweidu.757dy.com/">经纬度查询定位</a></p><p><strong>下载链接</strong>：<a href="https://web.archive.org/web/20171209052450/http://www.WXtoImg.com:80/downloads/">https://web.archive.org/web/20171209052450/http://www.WXtoImg.com:80/downloads/</a></p><h5 id="下载WXtoImg"><a href="#下载WXtoImg" class="headerlink" title="下载WXtoImg"></a>下载WXtoImg</h5><p><strong>简介</strong>：点击上述链接下载WXtoImg，下载完成后打开，你应该看到以下界面：</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20231021221343088.png"></p><p><strong>注意</strong>：这里下载不建议去下载另一个网站的，直接用waybackmachine的下载页回去原作者发布页下载即可。原作者把WXtoImg的网站关闭了，现在搜索引擎只能搜索到一个三方的备份站，那个网站下载的WXtoImg不能正常安装</p><h5 id="激活WXtoImg"><a href="#激活WXtoImg" class="headerlink" title="激活WXtoImg"></a>激活WXtoImg</h5><p><strong>简介</strong>：下载完成后，需要激活WXtoImg以使用所有功能。在帮助中选择输入升级密钥：</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20241009211200929.png"></p><p><strong>使用下面的密钥</strong>：</p><p><strong>2018 专业版升级密钥</strong></p><p>全名： Kevin Schuchmann<br>电子邮件地址： 输入您的电子邮件地址<br>升级密钥： CGHZ-PP9G-EAJZ-AWKK-NDNX</p><h5 id="使用wxtoproxy修复同步"><a href="#使用wxtoproxy修复同步" class="headerlink" title="使用wxtoproxy修复同步"></a>使用wxtoproxy修复同步</h5><p><strong>简介</strong>：由于WXtoImg原作者停止更新，用于获取开普勒数据的网址变更导致WXtoImg无法正常更新。为了修复WXtoImg的数据获取，可以使用<a href="https://github.com/provector/wxtoproxy/">wxtoproxy</a>来更新数据。</p><p><strong>参考教程</strong>：</p><p><a href="https://wxtoimgrestored.xyz/other-software/">Fix For Errors Downloading TLE &#x2F; Keplers</a></p><p><a href="https://www.bilibili.com/video/BV1jG411P7Jz">修复WXtoimg无法更新星历的问题</a></p><p><strong>下载wxtoproxy</strong>：<a href="https://github.com/provector/wxtoproxy/releases">https://github.com/provector/wxtoproxy/releases</a></p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20240721232959671.png"></p><p>下载完成后，将它复制到WXtoImg文件夹下，双击运行：</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20240721233107342.png"></p><p>运行看到软件自动打开了WXtoImg，就代表代理安装完成</p><h5 id="设置WXtoImg代理"><a href="#设置WXtoImg代理" class="headerlink" title="设置WXtoImg代理"></a>设置WXtoImg代理</h5><p>简介：代理设置完成后，还要设置WXtoImg的代理指向地址。选择<code>Options</code>里的<code>Internet Options</code>，选择</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20240721233426626.png"></p><p>勾选use proxy server，点击OK：</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20240721233644444.png"></p><p>这样代理就设置完成了</p><h5 id="更新Keplers"><a href="#更新Keplers" class="headerlink" title="更新Keplers"></a>更新Keplers</h5><p><strong>简介</strong>：设置好代理后，就可以更新keplers了。但是每次更新keplers都需要打开wxtoproxy</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20240721233756048.png"></p><p>看到左下角显示Done，新的开普勒数据加载后即可：</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20240721234011501.png"></p><h5 id="设置坐标-1"><a href="#设置坐标-1" class="headerlink" title="设置坐标"></a>设置坐标</h5><p><strong>简介</strong>：为了在卫星过境时开启接收，<code>WXtoImg</code>也需要设置坐标。这里选择<code>ground station location</code>：</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20240721234518147.png"></p><p>选择你的城市或输入坐标：</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20240721234641027.png"></p><p>可以在下面输入坐标，也可以在上面写city和country信息后点击lookup后自动定位</p><h5 id="设置上层元素"><a href="#设置上层元素" class="headerlink" title="设置上层元素"></a>设置上层元素</h5><p><strong>简介</strong>：WXtoImg接收的图像只是一个卫星图像，它没有经纬网，也没有国境线，没有河流线。因此，我们需要设置这些元素来显示在地图上</p><p>选择options里的map overlay options：</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20240721235217085.png"></p><p>设置显示的元素，我这里设置全部显示了。具体选项是什么意思自己查询即可：</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20240721235551055.png"></p><h5 id="设置自动接收"><a href="#设置自动接收" class="headerlink" title="设置自动接收"></a>设置自动接收</h5><p><strong>简介</strong>：选择file里的record：</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20240721234936040.png"></p><p>打开create images，其他参数请看RTL-SDR的参考链接：</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20240721235116562.png"></p><p>点击Accept后选择Auto Record，此时，你的左下角会显示下一次的接收时间。请严格按照此时间来打开所有软件，否则将会接收失败：</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20240721235810895.png"></p><p>这里的时间是UTC时间</p><h4 id="SDR-配置"><a href="#SDR-配置" class="headerlink" title="SDR#配置"></a>SDR#配置</h4><p><strong>简介</strong>：安装SDR#的过程很简单，具体可以去看我的<a href="https://blog.maxstars.xyz/2023/11/01/sdr-bi-ji/">SDR#笔记</a>这里我就不再重复写了。这里着重讲一下SDR#的DDE插件安装</p><h5 id="安装DDE插件"><a href="#安装DDE插件" class="headerlink" title="安装DDE插件"></a>安装DDE插件</h5><p><strong>下载DDEtracker</strong>：<a href="https://satsignal.eu/software/DDETracker.html">https://satsignal.eu/software/DDETracker.html</a></p><p><strong>简介</strong>：打开下载链接，选择<code>DDETrackerV8Binaries.zip</code>下载插件。</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20250101143338255.png"></p><p>下载完成后，将解压好的整个文件放入<code>sdrsharp</code>的<code>plugin</code>文件夹：</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20250101143903140.png"></p><p>运行<code>sdrsharp</code>，你应该能在设置中看到它了：</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20250101144028725.png"></p><h5 id="连接MyDDE客户端"><a href="#连接MyDDE客户端" class="headerlink" title="连接MyDDE客户端"></a>连接MyDDE客户端</h5><p><strong>简介</strong>：点击使用<code>DDE Tracking Client</code>插件，点击<code>Options</code>将它的数据获取调整至<code>Orbitron</code>，关闭这个窗口</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20250101144513675.png"></p><p><strong>点击Connect</strong>：</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20250101144624996.png" alt="image-20250101144624996"></p><p><strong>注意</strong>：这里一定要先打开<code>connect</code>再打开<code>My DDE</code>，否则无法连接</p><p>打开Orbitron，将选项卡调整至旋转器，选择驱动程序旁边的传送数据按钮，弹出了一个My DDE Client的窗口</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20250101144753534.png"></p><p>再次返回<code>SDRsharp</code>，发现已经获取到数据：</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20250101145111572.png"></p><p><strong>各个参数的解释</strong>：</p><p><strong>Name</strong>：卫星名称</p><p><strong>Downlink</strong>：下传频率</p><p><strong>Azimuth</strong>：方位角</p><p><strong>Elevation</strong>：仰角</p><p>点击启动查看是否能自动跟随<code>Downlink</code>频率，当这两个频率在启动时能一致变化，说明多普勒频移设置成功：</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20250101145642685.png"></p><h4 id="虚拟声卡配置"><a href="#虚拟声卡配置" class="headerlink" title="虚拟声卡配置"></a>虚拟声卡配置</h4><p><strong>简介</strong>：由于接收到的信号是音频信号，为了解码音频，需要将SDRsharp输出的声音重新输入电脑中，给解码软件WXtoImg使用，因此，需要一个虚拟声卡软件</p><h5 id="安装VB-CABLE"><a href="#安装VB-CABLE" class="headerlink" title="安装VB-CABLE"></a>安装VB-CABLE</h5><p><strong>VB-CABLE</strong>：<a href="https://vb-audio.com/Cable/index.htm">https://vb-audio.com/Cable/index.htm</a></p><p><strong>简介</strong>：进入VB-AUDIO的官网，选择windows软件包进行下载</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20250101151720812.png"></p><p>新旧软件包功能都一样，只是新的兼容了arm架构。下载完成后解压安装：</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20250101151840320.png"></p><p>64位系统选择setup_x64，32位系统选择setup</p><p>安装完成后即可选择虚拟声卡。打开右键状态栏声音小图标选择打开声音设置：</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20250101152118209.png"></p><p>将输入和输出全部改为虚拟声卡：</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20250101152210789.png"></p><p>此时虚拟声卡设置完成</p><h5 id="设置WXtoimg的虚拟声卡"><a href="#设置WXtoimg的虚拟声卡" class="headerlink" title="设置WXtoimg的虚拟声卡"></a>设置WXtoimg的虚拟声卡</h5><p>选择WXtoimg，打开<code>Recording Options</code>：</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20250101153703495.png"></p><p>将声卡设置为虚拟声卡，点击OK。此时WXtoimg连接声卡成功，其他软件不用设置</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20250101153805309.png"></p><h4 id="收星"><a href="#收星" class="headerlink" title="收星"></a>收星</h4><p><strong>简介</strong>：上述所有软件测试并配置完成后如图所示</p><p><img src="/2025/01/01/shi-yong-sdr-jie-shou-noaa/image-20250101155620044.png"></p><p>此时，可以等待卫星过境并接收</p><p>为了预测卫星过境情况并跟踪卫星，可以选择手机的<code>Heavens-Above</code>或者<code>Look4Sat</code>软件。这两个软件使用非常简单方便，这里就不做教程过多讲解了，感兴趣的可以看一下相关的教程</p><p><strong>heavens-Above官网</strong>：<a href="https://www.heavens-above.com/">https://www.heavens-above.com/</a></p><p><strong>look4sat官网</strong>：<a href="https://github.com/rt-bishop/Look4Sat">https://github.com/rt-bishop/Look4Sat</a></p>]]></content>
      
      
      <categories>
          
          <category> 业余无线电 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask笔记</title>
      <link href="/2024/04/15/flask-bi-ji/"/>
      <url>/2024/04/15/flask-bi-ji/</url>
      
        <content type="html"><![CDATA[<h2 id="Flask笔记"><a href="#Flask笔记" class="headerlink" title="Flask笔记"></a>Flask笔记</h2><p><strong>简介</strong>：这是知了传音的Flaskb站公开课笔记</p><p><strong>Flask项目</strong>：<a href="https://github.com/pallets/flask">https://github.com/pallets/flask</a></p><p><strong>教程</strong>：<a href="https://www.bilibili.com/video/BV17r4y1y7jJ">https://www.bilibili.com/video/BV17r4y1y7jJ</a></p><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p><strong>简介</strong>：<code>Flask</code>是一个基于<code>Python</code>的<code>web</code>开发框架，它以灵活、“微”框架著称。<code>Flask</code>的出现也是一个偶然机会，在2010年4月1日愚人节这天，作者<code>Armin Ronacher</code>开了个玩笑，在网上发表了一篇关于“下一代 Python微框架”的文章，众开发者信以为真，并期待他能真正把文章中的想法实现出来。在5天后，<code>Armin Ronacher</code>真的发布了一个“微”框架，他就是<code>Flask</code>。</p><p><code>Flask</code>虽然是作者在愚人节开的一个玩笑，但是框架设计却非常优秀，并且深受开发者喜爱，截止 2021年6月，在<code>Github</code>上的<code>Star</code>数已经超过56k，仅次于2005年就发布的<code>Django</code>的<code>58k stars</code>数，相信在不久的将来，<code>Flask</code>的<code>Star</code>数一定会赶超<code>Django</code>!</p><p><code>Flask</code>以“微”框架著称，本身不具备太多的功能，但是通过丰富的第三方插件，可以轻松应对现实开发中复杂的需求，并且有大量的企业在使用<code>Flask</code>构建自己的产品。国内比较出名的有比如豆瓣、果壳网，国外的有<code>Reddit</code>、<code>Netflix</code>等，其稳定性和应对复杂业务需求的能力已经被大量企业所验证。因此读者无需担心<code>Flask</code>无法适应企业需求，放心大胆的去学好Flask，能够让你的工作如虎添翼！</p><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p><strong>简介</strong>：使用pycharm开发，使用python3.9+的环境即可，flask使用2.0以上的版本。这里使用anaconda搭建：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 新建conda环境</span>conda create <span class="token parameter variable">-n</span> flask <span class="token assign-left variable">python</span><span class="token operator">=</span><span class="token number">3.9</span> <span class="token parameter variable">-y</span><span class="token comment"># 安装flask</span>conda activate flaskpip <span class="token function">install</span> flask</code></pre><h3 id="flask基本配置"><a href="#flask基本配置" class="headerlink" title="flask基本配置"></a>flask基本配置</h3><p><strong>注意</strong>：使用pycharm创建项目时，只建议用专业版进行学习，社区版的配置方案太少，配置环境解决方案少，出了问题很难解决。</p><h4 id="新建flask项目"><a href="#新建flask项目" class="headerlink" title="新建flask项目"></a>新建flask项目</h4><p>在pycharm中选择flask项目创建即可</p><p><img src="/2024/04/15/flask-bi-ji/image-20240313191306253.png"></p><p>项目构建好后，基本代码的介绍：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 导包</span><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token comment"># 使用Flask类创建一个app对象</span><span class="token comment"># __name__:代表当前app.py这个模块</span><span class="token comment"># 1.对以后出现的bug，可以帮助我们快速定位</span><span class="token comment"># 2.对于寻找模板文件，有一个相对路径</span>app <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token comment"># 创建一个路由和视图函数的映射</span><span class="token comment"># 访问百度时，https://www.baidu,com，就会访问根路径</span><span class="token comment"># 在网站开发中叫根路由</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">hello_world</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token string">'Hello World!'</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h4 id="设置debug模式"><a href="#设置debug模式" class="headerlink" title="设置debug模式"></a>设置debug模式</h4><p><strong>简介</strong>：使用编辑配置编辑，选择debug模式即可。</p><p><img src="/2024/04/15/flask-bi-ji/image-20240313191742301.png"></p><p><img src="/2024/04/15/flask-bi-ji/image-20240313191514552.png"></p><p><strong>作用</strong>：</p><ol><li>可以无需重启服务器，使用<code>ctrl+s</code>即可完成修改。</li><li>开发的时候出现bug，可以在浏览器看到输出信息</li></ol><h4 id="修改host-端口"><a href="#修改host-端口" class="headerlink" title="修改host&amp;端口"></a>修改host&amp;端口</h4><p><img src="/2024/04/15/flask-bi-ji/image-20240313195739821.png"></p><p><strong>修改host</strong>：可以修改为0.0.0.0即可让局域网电脑访问服务器</p><p><strong>修改port</strong>：可以让flask跑在其他端口，防止端口冲突</p><h3 id="url与视图映射"><a href="#url与视图映射" class="headerlink" title="url与视图映射"></a>url与视图映射</h3><p><strong>简介</strong>：url后的<code>path</code>是通过<code>route</code>组件控制的，<code>path</code>是指域名后的路径，例如：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 导包</span><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> request<span class="token comment"># 使用Flask类创建一个app对象</span><span class="token comment"># __name__:代表当前app.py这个模块</span><span class="token comment"># 1.对以后出现的bug，可以帮助我们快速定位</span><span class="token comment"># 2.对于寻找模板文件，有一个相对路径</span>app <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token comment"># 创建一个路由和视图函数的映射</span><span class="token comment"># 访问百度时，https://www.baidu,com，就会访问根路径</span><span class="token comment"># 在网站开发中叫根路由</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">hello_world</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token string">'Hello World!'</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/profile'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">profile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token string">'我是个人中心'</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/blog/list'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">blog_list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token string">"我是博客列表"</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/blog/&lt;blog_id>'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">blog_detail</span><span class="token punctuation">(</span>blog_id<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token string">"您访问的博客是：%s"</span> <span class="token operator">%</span> blog_id<span class="token comment"># 查询字符串的方式传参</span><span class="token comment"># 定义一个get请求</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/book/list'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">book_list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># arguments:参数</span>    <span class="token comment"># request.args:类字典类型</span>    page <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"page"</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f"您获取的是第</span><span class="token interpolation"><span class="token punctuation">&#123;</span>page<span class="token punctuation">&#125;</span></span><span class="token string">的图书列表!"</span></span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></code></pre><p>get定义下列数据即可跳转相应页面：</p><p><img src="/2024/04/15/flask-bi-ji/image-20240315133103461.png"></p><h3 id="jinja2模板"><a href="#jinja2模板" class="headerlink" title="jinja2模板"></a>jinja2模板</h3><p><strong>简介</strong>：jinja2库主要负责渲染html，利用后端渲染前端的静态页面</p><h4 id="html传参"><a href="#html传参" class="headerlink" title="html传参"></a>html传参</h4><p><strong>简介</strong>：使用jinja2将参数传递到html页面中</p><p><strong>方法</strong>：在html使用<code>&#123;&#123; &#125;&#125;</code>对需要传递的地方进行标注</p><p><strong>html代码</strong>：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>博客详情<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>您访问的博客详情是：&#123;&#123; blog_id &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p><strong>python代码</strong>：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> render_templateapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">hello_world</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'index.html'</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/blog/&lt;blog_id>'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">blog_details</span><span class="token punctuation">(</span>blog_id<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'blog_detail.html'</span><span class="token punctuation">,</span> blog_id<span class="token operator">=</span>blog_id<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></code></pre><p>这里直接把<code>get</code>获得的<code>blog_id</code>返回到前端页面</p><h5 id="传类和字典"><a href="#传类和字典" class="headerlink" title="传类和字典"></a>传类和字典</h5><p><strong>简介</strong>：定义一个用户信息并返回前端</p><p><strong>html代码</strong>：这里统一使用<code>xxx.xxx</code>返回信息</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>首页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>&#123;&#123; user.username &#125;&#125; / &#123;&#123; user.password &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>&#123;&#123; person.username &#125;&#125; / &#123;&#123; person.email &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p><strong>python代码</strong>：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 使用类定义用户信息</span><span class="token keyword">class</span> <span class="token class-name">User</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>username <span class="token operator">=</span> username        self<span class="token punctuation">.</span>password <span class="token operator">=</span> password<span class="token comment"># 使用字典定义用户信息</span>person<span class="token operator">=</span><span class="token punctuation">&#123;</span>    <span class="token string">"username"</span><span class="token punctuation">:</span><span class="token string">"张三"</span><span class="token punctuation">,</span>    <span class="token string">"email"</span><span class="token punctuation">:</span><span class="token string">"zhangsan@qq.com"</span><span class="token punctuation">&#125;</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">hello_world</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    user <span class="token operator">=</span> User<span class="token punctuation">(</span>username<span class="token operator">=</span><span class="token string">"admin"</span><span class="token punctuation">,</span> password<span class="token operator">=</span><span class="token string">"123"</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'index.html'</span><span class="token punctuation">,</span> user<span class="token operator">=</span>user<span class="token punctuation">,</span>person<span class="token operator">=</span>person<span class="token punctuation">)</span></code></pre><h4 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h4><p><strong>简介</strong>：可以将参数处理的函数。</p><p><strong>html代码</strong>：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>&#123;&#123; user.username &#125;&#125; / &#123;&#123; user.username|length &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre><p><code>jinja2</code>里有很多过滤器，这里使用<code>length</code>过滤器来处理<code>username</code>函数，作用是计算<code>user.username</code>的字符长度</p><h5 id="自定义过滤器"><a href="#自定义过滤器" class="headerlink" title="自定义过滤器"></a>自定义过滤器</h5><p><strong>简介</strong>：如果jinja2的过滤器无法满足需求，可以自定义过滤器，这里定义一个整理时间格式的过滤器</p><p><strong>html代码</strong>：这里使用自定义过滤器<code>dformat</code></p><pre class="language-python" data-language="python"><code class="language-python"><span class="token operator">&lt;</span>!DOCTYPE html<span class="token operator">></span><span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">"en"</span><span class="token operator">></span><span class="token operator">&lt;</span>head<span class="token operator">></span>    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>title<span class="token operator">></span>过滤器使用<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span><span class="token operator">&lt;</span>p<span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> user<span class="token punctuation">.</span>username <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token operator">/</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> user<span class="token punctuation">.</span>username<span class="token operator">|</span>length <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token operator">&lt;</span>p<span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> mytime<span class="token operator">|</span>dformat <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span></code></pre><p><strong>python代码</strong>：导入<code>datetime</code>，编写<code>dformat</code>方法，添加至过滤器</p><p><strong>改动部分</strong>：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetime<span class="token comment"># 自定义过滤器</span><span class="token comment"># 先定义函数方法</span><span class="token keyword">def</span> <span class="token function">datetime_format</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token builtin">format</span><span class="token operator">=</span><span class="token string">'%Y-%m-%d %H:%M:%S'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> value<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token builtin">format</span><span class="token punctuation">)</span><span class="token comment"># 导入函数，并重命名为datetime</span>app<span class="token punctuation">.</span>add_template_filter<span class="token punctuation">(</span>datetime_format<span class="token punctuation">,</span><span class="token string">"dformat"</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/filter'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">filter_demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    user <span class="token operator">=</span> User<span class="token punctuation">(</span>username<span class="token operator">=</span><span class="token string">"admin"</span><span class="token punctuation">,</span> password<span class="token operator">=</span><span class="token string">"123"</span><span class="token punctuation">)</span>    mytime <span class="token operator">=</span> datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'filter.html'</span><span class="token punctuation">,</span> user<span class="token operator">=</span>user<span class="token punctuation">,</span>mytime<span class="token operator">=</span>mytime<span class="token punctuation">)</span></code></pre><p><strong>完整代码</strong>：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 导包</span><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> render_template<span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetimeapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token comment"># 使用类定义用户信息</span><span class="token keyword">class</span> <span class="token class-name">User</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>username <span class="token operator">=</span> username        self<span class="token punctuation">.</span>password <span class="token operator">=</span> password<span class="token comment"># 使用字典定义用户信息</span>person<span class="token operator">=</span><span class="token punctuation">&#123;</span>    <span class="token string">"username"</span><span class="token punctuation">:</span><span class="token string">"张三"</span><span class="token punctuation">,</span>    <span class="token string">"email"</span><span class="token punctuation">:</span><span class="token string">"zhangsan@qq.com"</span><span class="token punctuation">&#125;</span><span class="token comment"># 自定义过滤器</span><span class="token comment"># 先定义函数方法</span><span class="token keyword">def</span> <span class="token function">datetime_format</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token builtin">format</span><span class="token operator">=</span><span class="token string">'%Y-%m-%d %H:%M:%S'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> value<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token builtin">format</span><span class="token punctuation">)</span><span class="token comment"># 导入函数，并重命名为datetime</span>app<span class="token punctuation">.</span>add_template_filter<span class="token punctuation">(</span>datetime_format<span class="token punctuation">,</span><span class="token string">"dformat"</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">hello_world</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    user <span class="token operator">=</span> User<span class="token punctuation">(</span>username<span class="token operator">=</span><span class="token string">"admin"</span><span class="token punctuation">,</span> password<span class="token operator">=</span><span class="token string">"123"</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'index.html'</span><span class="token punctuation">,</span> user<span class="token operator">=</span>user<span class="token punctuation">,</span>person<span class="token operator">=</span>person<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/blog/&lt;blog_id>'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">blog_details</span><span class="token punctuation">(</span>blog_id<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'blog_detail.html'</span><span class="token punctuation">,</span> blog_id<span class="token operator">=</span>blog_id<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/filter'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">filter_demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    user <span class="token operator">=</span> User<span class="token punctuation">(</span>username<span class="token operator">=</span><span class="token string">"admin"</span><span class="token punctuation">,</span> password<span class="token operator">=</span><span class="token string">"123"</span><span class="token punctuation">)</span>    mytime <span class="token operator">=</span> datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'filter.html'</span><span class="token punctuation">,</span> user<span class="token operator">=</span>user<span class="token punctuation">,</span>mytime<span class="token operator">=</span>mytime<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></code></pre><p><strong>效果</strong>：</p><p><img src="/2024/04/15/flask-bi-ji/image-20240315183911673.png"></p><h4 id="if-for控制"><a href="#if-for控制" class="headerlink" title="if,for控制"></a>if,for控制</h4><p><strong>简介</strong>：if，for两个判断语句可以判断参数条件，并对相应的内容渲染</p><p>这里编写一个<code>if</code>判断数值样例和<code>for</code>循环渲染</p><p><strong>html代码</strong>：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>&#123;% if int!=9 %&#125;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>不是琪露诺<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>&#123;% else %&#125;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>是⑨<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>&#123;% endif %&#125;&#123;% for role in roles %&#125;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>名称：&#123;&#123; role.name &#125;&#125;，工作：&#123;&#123; role.work &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>&#123;% endfor %&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p><strong>python代码</strong>：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/control'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">control_demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">10</span>    roles <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span>        <span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"灵梦"</span><span class="token punctuation">,</span>        <span class="token string">"work"</span><span class="token punctuation">:</span> <span class="token string">"神社巫女"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>        <span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"魔理沙"</span><span class="token punctuation">,</span>        <span class="token string">"work"</span><span class="token punctuation">:</span> <span class="token string">"学习魔法"</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">]</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'control.html'</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">,</span> roles<span class="token operator">=</span>roles<span class="token punctuation">)</span></code></pre><p><strong>效果</strong>：</p><p><img src="/2024/04/15/flask-bi-ji/image-20240315183601612.png"></p><h4 id="模板继承"><a href="#模板继承" class="headerlink" title="模板继承"></a>模板继承</h4><p><strong>简介</strong>：有很多页面有顶部导航条和底部栏，我们不能每个页面都写入这些元素，这时可以使用模板继承来将这些元素继承：</p><p><img src="/2024/04/15/flask-bi-ji/image-20240315193807654.png"></p><p><strong>html代码</strong>：由base，child1，child2组成</p><p><strong>base</strong>：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>&#123;% block title %&#125;&#123;% endblock %&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>首页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>新闻<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>我是父模板&#123;% block body %&#125;&#123;% endblock %&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span><span class="token punctuation">></span></span>这是底部的标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p><strong>child1</strong>：</p><pre class="language-markup" data-language="markup"><code class="language-markup">&#123;% extends "base.html" %&#125;&#123;% block title %&#125;我是子模版的标题&#123;% endblock %&#125;&#123;% block body %&#125;我是子模板的body&#123;% endblock %&#125;</code></pre><p><strong>chlid2</strong>:</p><pre class="language-markup" data-language="markup"><code class="language-markup">&#123;% extends "base.html" %&#125;&#123;% block title %&#125;我是child2&#123;% endblock %&#125;&#123;% block body %&#125;我是child2&#123;% endblock %&#125;</code></pre><p><strong>python代码</strong>：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/child1'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">child1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">"child1.html"</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/child2'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">child2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">"child2.html"</span><span class="token punctuation">)</span></code></pre><p><strong>效果</strong>：</p><p><img src="/2024/04/15/flask-bi-ji/image-20240315201609484.png"></p><p><img src="/2024/04/15/flask-bi-ji/image-20240315201523928.png"></p><h4 id="加载静态资源"><a href="#加载静态资源" class="headerlink" title="加载静态资源"></a>加载静态资源</h4><p><strong>简介</strong>：可以通过<code>url_for</code>的方法来引用静态文件。</p><h3 id="对接mysql"><a href="#对接mysql" class="headerlink" title="对接mysql"></a>对接mysql</h3><p><strong>简介</strong>：mysql是oricle的一个数据库产品，社区版是开源免费的，这里介绍oricle的对接介绍。</p><p><strong>下载</strong>：<a href="https://dev.mysql.com/downloads/installer/">https://dev.mysql.com/downloads/installer/</a></p><h4 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h4><p><strong>简介</strong>：原视频的教程使用了<code>developer default</code>选项，但是现在的8.0.36版本没有这个选项，需要观看另外两个教程进行安装</p><p><strong>教程</strong>：</p><p><a href="https://blog.csdn.net/2201_75609002/article/details/136404667">https://blog.csdn.net/2201_75609002/article/details/136404667</a></p><p><a href="https://www.bilibili.com/video/BV12q4y1477i">https://www.bilibili.com/video/BV12q4y1477i</a></p><p>按照上述教程对flask教程安装完成即可</p><h4 id="安装连接sql环境"><a href="#安装连接sql环境" class="headerlink" title="安装连接sql环境"></a>安装连接sql环境</h4><p><strong>简介</strong>：连接mysql的驱动有很多，这里使用pymysql进行演示，安装pymysql：</p><pre class="language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> pymysql</code></pre><p>操作数据库需要使用ORM方式，这里使用flask-sqlalchemy</p><pre class="language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> flask-sqlalchemy</code></pre><h4 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h4><p><strong>简介</strong>：操作数据库可以使用Navicat，在网上找破解版即可，这里涉及版权问题，不过多介绍了</p><p><strong>操作</strong>：文件中选择新建MySQL连接</p><p><img src="/2024/04/15/flask-bi-ji/image-20240316194425181.png"></p><p>填写连接名和密码，连接名随便填，填写完成后点击确定：</p><p><img src="/2024/04/15/flask-bi-ji/image-20240316194622454.png"></p><p>连接完成后新建数据库，右键连接名，选择新建数据库：</p><p><img src="/2024/04/15/flask-bi-ji/image-20240316194859044.png"></p><p>数据库填写下列信息，点击确定完成创建：</p><p><img src="/2024/04/15/flask-bi-ji/image-20240316194807144.png"></p><h4 id="编写程序连接mysql"><a href="#编写程序连接mysql" class="headerlink" title="编写程序连接mysql"></a>编写程序连接mysql</h4><p><strong>简介</strong>：创建好环境后，运行下列代码查看是否连接成功，如成功则返回(1,)</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token keyword">from</span> flask_sqlalchemy <span class="token keyword">import</span> SQLAlchemy<span class="token keyword">from</span> sqlalchemy <span class="token keyword">import</span> textapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token comment"># MySQL所在的主机名</span>HOSTNAME <span class="token operator">=</span> <span class="token string">"127.0.0.1"</span><span class="token comment"># MySQL所在的端口号</span>PORT <span class="token operator">=</span> <span class="token number">3306</span><span class="token comment"># 连接MySQL的用户名</span>USERNAME <span class="token operator">=</span> <span class="token string">"root"</span><span class="token comment"># 连接MySQL的密码</span>PASSWORD <span class="token operator">=</span> <span class="token string">"root"</span><span class="token comment"># MySQL上创建的数据库名称</span>DATABASE <span class="token operator">=</span> <span class="token string">"database_learn"</span>app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">"SQLALCHEMY_DATABASE_URI"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"mysql+pymysql://</span><span class="token interpolation"><span class="token punctuation">&#123;</span>USERNAME<span class="token punctuation">&#125;</span></span><span class="token string">:</span><span class="token interpolation"><span class="token punctuation">&#123;</span>PASSWORD<span class="token punctuation">&#125;</span></span><span class="token string">@</span><span class="token interpolation"><span class="token punctuation">&#123;</span>HOSTNAME<span class="token punctuation">&#125;</span></span><span class="token string">:</span><span class="token interpolation"><span class="token punctuation">&#123;</span>PORT<span class="token punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>DATABASE<span class="token punctuation">&#125;</span></span><span class="token string">?charset=utf8mb4"</span></span><span class="token comment"># 在app.config中设置好连接数据库的信息</span><span class="token comment"># 使用SQLAlchemy(app)创建一个db对象</span><span class="token comment"># SQLAlchemy会自动读取app.config中连接数据库的信息</span>db <span class="token operator">=</span> SQLAlchemy<span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token comment"># 测试是否连接成功代码</span><span class="token keyword">with</span> app<span class="token punctuation">.</span>app_context<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">with</span> db<span class="token punctuation">.</span>engine<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> conn<span class="token punctuation">:</span>        rs <span class="token operator">=</span> conn<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>text<span class="token punctuation">(</span><span class="token string">"select 1"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span>fetchone<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># (1,)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">hello_world</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># put application's code here</span>    <span class="token keyword">return</span> <span class="token string">'Hello World!'</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><strong>运行结果如下</strong>：</p><p><img src="/2024/04/15/flask-bi-ji/image-20240316200453313.png"></p><h3 id="创建ORM模型"><a href="#创建ORM模型" class="headerlink" title="创建ORM模型"></a>创建ORM模型</h3><p><strong>简介</strong>：创建ORM模型的目的是为了方便更换数据库，使所有数据库操作都有一致的命令来操作</p><p>使用python创建一个orm模型并导入数据库：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token keyword">from</span> flask_sqlalchemy <span class="token keyword">import</span> SQLAlchemy<span class="token keyword">from</span> sqlalchemy <span class="token keyword">import</span> textapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token comment"># MySQL所在的主机名</span>HOSTNAME <span class="token operator">=</span> <span class="token string">"127.0.0.1"</span><span class="token comment"># MySQL所在的端口号</span>PORT <span class="token operator">=</span> <span class="token number">3306</span><span class="token comment"># 连接MySQL的用户名</span>USERNAME <span class="token operator">=</span> <span class="token string">"root"</span><span class="token comment"># 连接MySQL的密码</span>PASSWORD <span class="token operator">=</span> <span class="token string">"root"</span><span class="token comment"># MySQL上创建的数据库名称</span>DATABASE <span class="token operator">=</span> <span class="token string">"database_learn"</span>app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">"SQLALCHEMY_DATABASE_URI"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"mysql+pymysql://</span><span class="token interpolation"><span class="token punctuation">&#123;</span>USERNAME<span class="token punctuation">&#125;</span></span><span class="token string">:</span><span class="token interpolation"><span class="token punctuation">&#123;</span>PASSWORD<span class="token punctuation">&#125;</span></span><span class="token string">@</span><span class="token interpolation"><span class="token punctuation">&#123;</span>HOSTNAME<span class="token punctuation">&#125;</span></span><span class="token string">:"</span></span>                                         <span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>PORT<span class="token punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>DATABASE<span class="token punctuation">&#125;</span></span><span class="token string">?charset=utf8mb4"</span></span><span class="token punctuation">)</span><span class="token comment"># 在app.config中设置好连接数据库的信息</span><span class="token comment"># 使用SQLAlchemy(app)创建一个db对象</span><span class="token comment"># SQLAlchemy会自动读取app.config中连接数据库的信息</span>db <span class="token operator">=</span> SQLAlchemy<span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token comment"># 测试是否连接成功代码</span><span class="token comment"># with app.app_context():</span><span class="token comment">#     with db.engine.connect() as conn:</span><span class="token comment">#         rs = conn.execute(text("select 1"))</span><span class="token comment">#         print(rs.fetchone())    # (1,)</span><span class="token keyword">class</span> <span class="token class-name">User</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>    __tablename__ <span class="token operator">=</span> <span class="token string">"user"</span>    <span class="token comment"># primary_key=True 设置主键 autoincrement=True 设置自动增加</span>    <span class="token builtin">id</span> <span class="token operator">=</span> db<span class="token punctuation">.</span>Column<span class="token punctuation">(</span>db<span class="token punctuation">.</span>Integer<span class="token punctuation">,</span> primary_key<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> autoincrement<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    <span class="token comment"># db.String指定varchar类型(变动char类型)</span>    username <span class="token operator">=</span> db<span class="token punctuation">.</span>Column<span class="token punctuation">(</span>db<span class="token punctuation">.</span>String<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span> nullable<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>    password <span class="token operator">=</span> db<span class="token punctuation">.</span>Column<span class="token punctuation">(</span>db<span class="token punctuation">.</span>String<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span> nullable<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token comment"># user = User(username="张三", password="123456")</span><span class="token comment"># 相当于这条语句sql: insert user(username, password) values('张三', '123456')</span><span class="token keyword">with</span> app<span class="token punctuation">.</span>app_context<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    db<span class="token punctuation">.</span>create_all<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">hello_world</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># put application's code here</span>    <span class="token keyword">return</span> <span class="token string">'Hello World!'</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><strong>运行后可以在navicat中查看，右键选择设计表，可以看见我们刚才创建的表结构</strong>：</p><p><img src="/2024/04/15/flask-bi-ji/image-20240317133116024.png"></p><p><strong>表结构如下</strong>：</p><p><img src="/2024/04/15/flask-bi-ji/image-20240317133256277.png"></p><h4 id="对mysql进行CRUD操作"><a href="#对mysql进行CRUD操作" class="headerlink" title="对mysql进行CRUD操作"></a>对mysql进行CRUD操作</h4><p><strong>简介</strong>：CROD指的是增删改查：create，read，update，delete。这里所有的操作都要先对db.session进行修改，通过db.session同步到数据库</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token keyword">from</span> flask_sqlalchemy <span class="token keyword">import</span> SQLAlchemy<span class="token keyword">from</span> sqlalchemy <span class="token keyword">import</span> textapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token comment"># MySQL所在的主机名</span>HOSTNAME <span class="token operator">=</span> <span class="token string">"127.0.0.1"</span><span class="token comment"># MySQL所在的端口号</span>PORT <span class="token operator">=</span> <span class="token number">3306</span><span class="token comment"># 连接MySQL的用户名</span>USERNAME <span class="token operator">=</span> <span class="token string">"root"</span><span class="token comment"># 连接MySQL的密码</span>PASSWORD <span class="token operator">=</span> <span class="token string">"root"</span><span class="token comment"># MySQL上创建的数据库名称</span>DATABASE <span class="token operator">=</span> <span class="token string">"database_learn"</span>app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">"SQLALCHEMY_DATABASE_URI"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"mysql+pymysql://</span><span class="token interpolation"><span class="token punctuation">&#123;</span>USERNAME<span class="token punctuation">&#125;</span></span><span class="token string">:</span><span class="token interpolation"><span class="token punctuation">&#123;</span>PASSWORD<span class="token punctuation">&#125;</span></span><span class="token string">@</span><span class="token interpolation"><span class="token punctuation">&#123;</span>HOSTNAME<span class="token punctuation">&#125;</span></span><span class="token string">:"</span></span>                                         <span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>PORT<span class="token punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>DATABASE<span class="token punctuation">&#125;</span></span><span class="token string">?charset=utf8mb4"</span></span><span class="token punctuation">)</span><span class="token comment"># 在app.config中设置好连接数据库的信息</span><span class="token comment"># 使用SQLAlchemy(app)创建一个db对象</span><span class="token comment"># SQLAlchemy会自动读取app.config中连接数据库的信息</span>db <span class="token operator">=</span> SQLAlchemy<span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token comment"># 测试是否连接成功代码</span><span class="token comment"># with app.app_context():</span><span class="token comment">#     with db.engine.connect() as conn:</span><span class="token comment">#         rs = conn.execute(text("select 1"))</span><span class="token comment">#         print(rs.fetchone())    # (1,)</span><span class="token keyword">class</span> <span class="token class-name">User</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>    __tablename__ <span class="token operator">=</span> <span class="token string">"user"</span>    <span class="token comment"># primary_key=True 设置主键 autoincrement=True 设置自动增加</span>    <span class="token builtin">id</span> <span class="token operator">=</span> db<span class="token punctuation">.</span>Column<span class="token punctuation">(</span>db<span class="token punctuation">.</span>Integer<span class="token punctuation">,</span> primary_key<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> autoincrement<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    <span class="token comment"># db.String指定varchar类型(变动char类型)</span>    username <span class="token operator">=</span> db<span class="token punctuation">.</span>Column<span class="token punctuation">(</span>db<span class="token punctuation">.</span>String<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span> nullable<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>    password <span class="token operator">=</span> db<span class="token punctuation">.</span>Column<span class="token punctuation">(</span>db<span class="token punctuation">.</span>String<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span> nullable<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token comment"># user = User(username="张三", password="123456")</span><span class="token comment"># 相当于这条语句sql: insert user(username, password) values('张三', '123456')</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/user/add"</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">add_user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 1.创建ORM对象</span>    user <span class="token operator">=</span> User<span class="token punctuation">(</span>username<span class="token operator">=</span><span class="token string">"张三"</span><span class="token punctuation">,</span> password<span class="token operator">=</span><span class="token string">"123456"</span><span class="token punctuation">)</span>    <span class="token comment"># 2.将ORM对象添加到db.session中</span>    db<span class="token punctuation">.</span>session<span class="token punctuation">.</span>add<span class="token punctuation">(</span>user<span class="token punctuation">)</span>    <span class="token comment"># 3.将db.session中的改变同步到数据库中</span>    db<span class="token punctuation">.</span>session<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token string">"用户创建成功"</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/user/query"</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">query_user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 1.get查找:根据主键查找</span>    <span class="token comment"># user = User.query.get(1)</span>    <span class="token comment"># print(f"&#123;user.id&#125;: &#123;user.username&#125;-&#123;user.password&#125;")</span>    <span class="token comment"># 2.filter_by查找</span>    <span class="token comment"># Query：类数组</span>    users <span class="token operator">=</span> User<span class="token punctuation">.</span>query<span class="token punctuation">.</span>filter_by<span class="token punctuation">(</span>username<span class="token operator">=</span><span class="token string">"张三"</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> user <span class="token keyword">in</span> users<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>username<span class="token punctuation">,</span> user<span class="token punctuation">.</span>password<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token string">"数据查找成功！"</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/user/update"</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">update_user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    user <span class="token operator">=</span> User<span class="token punctuation">.</span>query<span class="token punctuation">.</span>filter_by<span class="token punctuation">(</span>username<span class="token operator">=</span><span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>    user<span class="token punctuation">.</span>password <span class="token operator">=</span> <span class="token string">"111111"</span>    db<span class="token punctuation">.</span>session<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token string">"数据修改成功"</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/user/delete"</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">delete_user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 1.查找</span>    user <span class="token operator">=</span> User<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token comment"># 2.从db.session中的修改，同步到数据库中</span>    db<span class="token punctuation">.</span>session<span class="token punctuation">.</span>delete<span class="token punctuation">(</span>user<span class="token punctuation">)</span>    <span class="token comment"># 3.将db.session中的修改同步到数据库中</span>    db<span class="token punctuation">.</span>session<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">with</span> app<span class="token punctuation">.</span>app_context<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    db<span class="token punctuation">.</span>create_all<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">hello_world</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># put application's code here</span>    <span class="token keyword">return</span> <span class="token string">'Hello World!'</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h4 id="添加主键和外键"><a href="#添加主键和外键" class="headerlink" title="添加主键和外键"></a>添加主键和外键</h4><p><strong>简介</strong>：数据库中的主键是每张表里唯一的，外键则起到关联表的作用，防止无效数据产生。</p><p>这里主要创建了一个<code>user</code>表和一个关联<code>user_id</code>的<code>article</code>外键表，<code>user_id</code>为<code>user</code>表的主键，<code>author_id</code>为<code>article</code>表的外键。但是由于外键是写死的，要查看<code>user_id</code>来<code>get</code>。</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token keyword">from</span> flask_sqlalchemy <span class="token keyword">import</span> SQLAlchemy<span class="token keyword">from</span> sqlalchemy <span class="token keyword">import</span> textapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token comment"># MySQL所在的主机名</span>HOSTNAME <span class="token operator">=</span> <span class="token string">"127.0.0.1"</span><span class="token comment"># MySQL所在的端口号</span>PORT <span class="token operator">=</span> <span class="token number">3306</span><span class="token comment"># 连接MySQL的用户名</span>USERNAME <span class="token operator">=</span> <span class="token string">"root"</span><span class="token comment"># 连接MySQL的密码</span>PASSWORD <span class="token operator">=</span> <span class="token string">"root"</span><span class="token comment"># MySQL上创建的数据库名称</span>DATABASE <span class="token operator">=</span> <span class="token string">"database_learn"</span>app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">"SQLALCHEMY_DATABASE_URI"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"mysql+pymysql://</span><span class="token interpolation"><span class="token punctuation">&#123;</span>USERNAME<span class="token punctuation">&#125;</span></span><span class="token string">:</span><span class="token interpolation"><span class="token punctuation">&#123;</span>PASSWORD<span class="token punctuation">&#125;</span></span><span class="token string">@</span><span class="token interpolation"><span class="token punctuation">&#123;</span>HOSTNAME<span class="token punctuation">&#125;</span></span><span class="token string">:"</span></span>                                         <span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>PORT<span class="token punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>DATABASE<span class="token punctuation">&#125;</span></span><span class="token string">?charset=utf8mb4"</span></span><span class="token punctuation">)</span><span class="token comment"># 在app.config中设置好连接数据库的信息</span><span class="token comment"># 使用SQLAlchemy(app)创建一个db对象</span><span class="token comment"># SQLAlchemy会自动读取app.config中连接数据库的信息</span>db <span class="token operator">=</span> SQLAlchemy<span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token comment"># 测试是否连接成功代码</span><span class="token comment"># with app.app_context():</span><span class="token comment">#     with db.engine.connect() as conn:</span><span class="token comment">#         rs = conn.execute(text("select 1"))</span><span class="token comment">#         print(rs.fetchone())    # (1,)</span><span class="token keyword">class</span> <span class="token class-name">User</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>    __tablename__ <span class="token operator">=</span> <span class="token string">"user"</span>    <span class="token comment"># primary_key=True 设置主键 autoincrement=True 设置自动增加</span>    <span class="token builtin">id</span> <span class="token operator">=</span> db<span class="token punctuation">.</span>Column<span class="token punctuation">(</span>db<span class="token punctuation">.</span>Integer<span class="token punctuation">,</span> primary_key<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> autoincrement<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    <span class="token comment"># db.String指定varchar类型(变动char类型)</span>    username <span class="token operator">=</span> db<span class="token punctuation">.</span>Column<span class="token punctuation">(</span>db<span class="token punctuation">.</span>String<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span> nullable<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>    password <span class="token operator">=</span> db<span class="token punctuation">.</span>Column<span class="token punctuation">(</span>db<span class="token punctuation">.</span>String<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span> nullable<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">Article</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>    __tablename__ <span class="token operator">=</span> <span class="token string">"article"</span>    <span class="token comment"># primary_key=True 设置主键 autoincrement=True 设置自动增加</span>    <span class="token builtin">id</span> <span class="token operator">=</span> db<span class="token punctuation">.</span>Column<span class="token punctuation">(</span>db<span class="token punctuation">.</span>Integer<span class="token punctuation">,</span> primary_key<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> autoincrement<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    title <span class="token operator">=</span> db<span class="token punctuation">.</span>Column<span class="token punctuation">(</span>db<span class="token punctuation">.</span>String<span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span> nullable<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>    <span class="token comment"># 这里引用的是text，string最多存255字符，已经不够用了</span>    content <span class="token operator">=</span> db<span class="token punctuation">.</span>Column<span class="token punctuation">(</span>db<span class="token punctuation">.</span>Text<span class="token punctuation">,</span> nullable<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>    <span class="token comment"># 添加作者id外键</span>    author_id <span class="token operator">=</span> db<span class="token punctuation">.</span>Column<span class="token punctuation">(</span>db<span class="token punctuation">.</span>Integer<span class="token punctuation">,</span> db<span class="token punctuation">.</span>ForeignKey<span class="token punctuation">(</span><span class="token string">"user.id"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># backref:会自动给User模型添加一个articles的属性，用来获取文章列表</span>    author <span class="token operator">=</span> db<span class="token punctuation">.</span>relationship<span class="token punctuation">(</span><span class="token string">"User"</span><span class="token punctuation">,</span> backref<span class="token operator">=</span>db<span class="token punctuation">.</span>backref<span class="token punctuation">(</span><span class="token string">"articles"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">with</span> app<span class="token punctuation">.</span>app_context<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    db<span class="token punctuation">.</span>create_all<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># user = User(username="张三", password="123456")</span><span class="token comment"># 相当于这条语句sql: insert user(username, password) values('张三', '123456')</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">hello_world</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># put application's code here</span>    <span class="token keyword">return</span> <span class="token string">'Hello World!'</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/user/add"</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">add_user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 1.创建ORM对象</span>    user <span class="token operator">=</span> User<span class="token punctuation">(</span>username<span class="token operator">=</span><span class="token string">"张三"</span><span class="token punctuation">,</span> password<span class="token operator">=</span><span class="token string">"123456"</span><span class="token punctuation">)</span>    <span class="token comment"># 2.将ORM对象添加到db.session中</span>    db<span class="token punctuation">.</span>session<span class="token punctuation">.</span>add<span class="token punctuation">(</span>user<span class="token punctuation">)</span>    <span class="token comment"># 3.将db.session中的改变同步到数据库中</span>    db<span class="token punctuation">.</span>session<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token string">"用户创建成功"</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/user/query"</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">query_user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 1.get查找:根据主键查找</span>    <span class="token comment"># user = User.query.get(1)</span>    <span class="token comment"># print(f"&#123;user.id&#125;: &#123;user.username&#125;-&#123;user.password&#125;")</span>    <span class="token comment"># 2.filter_by查找</span>    <span class="token comment"># Query：类数组</span>    users <span class="token operator">=</span> User<span class="token punctuation">.</span>query<span class="token punctuation">.</span>filter_by<span class="token punctuation">(</span>username<span class="token operator">=</span><span class="token string">"张三"</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> user <span class="token keyword">in</span> users<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>username<span class="token punctuation">,</span> user<span class="token punctuation">.</span>password<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token string">"数据查找成功！"</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/user/update"</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">update_user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    user <span class="token operator">=</span> User<span class="token punctuation">.</span>query<span class="token punctuation">.</span>filter_by<span class="token punctuation">(</span>username<span class="token operator">=</span><span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>    user<span class="token punctuation">.</span>password <span class="token operator">=</span> <span class="token string">"111111"</span>    db<span class="token punctuation">.</span>session<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token string">"数据修改成功"</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/user/delete"</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">delete_user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 1.查找</span>    user <span class="token operator">=</span> User<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token comment"># 2.从db.session中的修改，同步到数据库中</span>    db<span class="token punctuation">.</span>session<span class="token punctuation">.</span>delete<span class="token punctuation">(</span>user<span class="token punctuation">)</span>    <span class="token comment"># 3.将db.session中的修改同步到数据库中</span>    db<span class="token punctuation">.</span>session<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token string">"数据删除成功"</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/article/add"</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">add_article</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    article1 <span class="token operator">=</span> Article<span class="token punctuation">(</span>title<span class="token operator">=</span><span class="token string">"Flask学习大纲"</span><span class="token punctuation">,</span> content<span class="token operator">=</span><span class="token string">"Flaskxxx"</span><span class="token punctuation">)</span>    article1<span class="token punctuation">.</span>author <span class="token operator">=</span> User<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    article2 <span class="token operator">=</span> Article<span class="token punctuation">(</span>title<span class="token operator">=</span><span class="token string">"Django学习大纲"</span><span class="token punctuation">,</span> content<span class="token operator">=</span><span class="token string">"Django最全学习大纲"</span><span class="token punctuation">)</span>    article2<span class="token punctuation">.</span>author <span class="token operator">=</span> User<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token comment"># 添加到session中</span>    db<span class="token punctuation">.</span>session<span class="token punctuation">.</span>add_all<span class="token punctuation">(</span><span class="token punctuation">[</span>article1<span class="token punctuation">,</span> article2<span class="token punctuation">]</span><span class="token punctuation">)</span>    db<span class="token punctuation">.</span>session<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token string">"文章添加成功"</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/article/query"</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">query_article</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    user <span class="token operator">=</span> User<span class="token punctuation">.</span>query<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> article <span class="token keyword">in</span> user<span class="token punctuation">.</span>articles<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>article<span class="token punctuation">.</span>title<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token string">"文章查找成功！"</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><strong>注意</strong>：一定要有用户表否则无法产生外键关联</p><p><strong>user表</strong>：</p><p><img src="/2024/04/15/flask-bi-ji/image-20240318143306558.png"></p><p><strong>关联表</strong>：</p><p><img src="/2024/04/15/flask-bi-ji/image-20240318143237013.png"></p><h3 id="迁移ORM模型"><a href="#迁移ORM模型" class="headerlink" title="迁移ORM模型"></a>迁移ORM模型</h3><p><strong>简介</strong>：之前创建数据库的表的指令<code>db.create_all()</code>这种方式有很大的局限性，在创建好表以后，不能在对表结构进行修改。为了能够对表结构进行修改，需要使用<code>migrate</code>库</p><p>安装<code>flask-migrate</code>：</p><pre class="language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> flask-migrate</code></pre><p><strong>在连接代码后添加下面的代码</strong>：</p><pre class="language-python" data-language="python"><code class="language-python">db <span class="token operator">=</span> SQLAlchemy<span class="token punctuation">(</span>app<span class="token punctuation">)</span>migrate <span class="token operator">=</span> Migrate<span class="token punctuation">(</span>app<span class="token punctuation">,</span> db<span class="token punctuation">)</span></code></pre><p><img src="/2024/04/15/flask-bi-ji/image-20240318190341510.png"></p><p>添加完成后在终端进行操作：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 1.flask db init: 这步只需要执行一次</span>python <span class="token parameter variable">-m</span> flask db init<span class="token comment"># 2.flask db migrate: 识别ORM模型的改变，生成迁移脚本</span>flask db migrate<span class="token comment"># 3.flask db upgrade: 运行迁移脚本，同步到数据库中</span>flask db upgrade</code></pre><h2 id="搭建问答平台"><a href="#搭建问答平台" class="headerlink" title="搭建问答平台"></a>搭建问答平台</h2><p><strong>简介</strong>：一个基于flask的论坛</p><h3 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h3><p><strong>简介</strong>：新建项目，搭建项目架构。上面学的东西只是flask基础，项目架构才是一个项目真正的核心。</p><h4 id="项目架构"><a href="#项目架构" class="headerlink" title="项目架构"></a>项目架构</h4><p><strong>简介</strong>：所有配置文件都要和<code>app.py</code>关联。项目文件结果如图所示：</p><p><img src="/2024/04/15/flask-bi-ji/image-20240322155244244.png"></p><p><code>app.py</code>：项目的执行文件</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token keyword">import</span> config<span class="token keyword">from</span> exts <span class="token keyword">import</span> db<span class="token keyword">from</span> models <span class="token keyword">import</span> UserModel<span class="token keyword">from</span> blueprint<span class="token punctuation">.</span>qa <span class="token keyword">import</span> bp <span class="token keyword">as</span> qa_bp<span class="token keyword">from</span> blueprint<span class="token punctuation">.</span>author <span class="token keyword">import</span> bp <span class="token keyword">as</span> author_bp<span class="token keyword">from</span> flask_migrate <span class="token keyword">import</span> Migrateapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token comment"># 绑定配置文件</span>app<span class="token punctuation">.</span>config<span class="token punctuation">.</span>from_object<span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token comment"># 这种db的创建方法允许先创建再导入模型</span>db<span class="token punctuation">.</span>init_app<span class="token punctuation">(</span>app<span class="token punctuation">)</span>migrate <span class="token operator">=</span> Migrate<span class="token punctuation">(</span>app<span class="token punctuation">,</span> db<span class="token punctuation">)</span><span class="token comment"># 导入蓝图</span>app<span class="token punctuation">.</span>register_blueprint<span class="token punctuation">(</span>qa_bp<span class="token punctuation">)</span>app<span class="token punctuation">.</span>register_blueprint<span class="token punctuation">(</span>author_bp<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><code>config.py</code>：配置文件，主要配置cookie和加密，使用<code>app.config.form_object(config)</code>和<code>app.py</code>绑定</p><p><code>models.py</code>：创建ORM模型的文件</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> exts <span class="token keyword">import</span> db<span class="token keyword">class</span> <span class="token class-name">UserModel</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">pass</span></code></pre><p><code>exts.py</code>：<code>exts</code>主要存放插件方法。例如：</p><p><code>ORM</code>模型在开发时不会放在<code>app.py</code>中，而是独立放在一个<code>model.py</code>文件中。但是<code>model.py</code>需要引用<code>app.py</code>中的<code>db</code>方法，<code>app.py</code>又需要引用<code>models.py</code>中的<code>Usermodel</code>，这样会导致循环引用使代码不能执行，如图所示：</p><p><img src="/2024/04/15/flask-bi-ji/image-20240322145431095-17110904740371.png"></p><p>为了解决这个问题，需要建立<code>exts.py</code>文件，存放db &#x3D; SQLAlchemy()方法，使得app.py和models.py分别去调用db方法，这样就不会产生循环引用，如图所示：</p><p><img src="/2024/04/15/flask-bi-ji/image-20240322142512659.png"></p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># flask-sqlalchemy</span><span class="token keyword">from</span> flask_sqlalchemy <span class="token keyword">import</span> SQLAlchemydb <span class="token operator">=</span> SQLAlchemy<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><code>blueprints</code>：在项目搭建过程中，我们不会把路由放到app.py中，而是放到blueprint.py中通过蓝图的形式导入。</p><p><code>author.py</code>：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Blueprint<span class="token comment"># 这里指定/author前缀，用这个方法做路由的都有/author的前缀</span>bp <span class="token operator">=</span> BLUEPRINT <span class="token operator">=</span> Blueprint<span class="token punctuation">(</span><span class="token string">'author'</span><span class="token punctuation">,</span> __name__<span class="token punctuation">,</span> url_prefix<span class="token operator">=</span><span class="token string">'/author'</span><span class="token punctuation">)</span><span class="token comment"># 这里的路由路径为：http://localhost/auth/login</span><span class="token decorator annotation punctuation">@bp<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">login_page</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">pass</span></code></pre><p><code>qa.py</code>：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Blueprint<span class="token comment"># 这里不指定前缀</span>bp <span class="token operator">=</span> BLUEPRINT <span class="token operator">=</span> Blueprint<span class="token punctuation">(</span><span class="token string">'auth'</span><span class="token punctuation">,</span> __name__<span class="token punctuation">,</span> url_prefix<span class="token operator">=</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token comment"># 这里的路由路径为：http://localhost/login</span><span class="token decorator annotation punctuation">@bp<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">login_page</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">pass</span></code></pre><h4 id="创建数据库-1"><a href="#创建数据库-1" class="headerlink" title="创建数据库"></a>创建数据库</h4><p><strong>简介</strong>：这里需要创建user数据库，并将数据库进行连接。</p><p><strong>先创建一个forum数据库</strong>：</p><p><img src="/2024/04/15/flask-bi-ji/image-20240322190405892.png"></p><p><strong>设置config.py</strong>：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 数据库配置信息</span>HOSTNAME <span class="token operator">=</span> <span class="token string">"127.0.0.1"</span>PORT <span class="token operator">=</span> <span class="token number">3306</span>USERNAME <span class="token operator">=</span> <span class="token string">"root"</span>PASSWORD <span class="token operator">=</span> <span class="token string">"root"</span>DATABASE <span class="token operator">=</span> <span class="token string">"forum_user"</span>DB_URI <span class="token operator">=</span> <span class="token string">'mysql+pymysql://&#123;&#125;:&#123;&#125;@&#123;&#125;:&#123;&#125;/&#123;&#125;?charset=utf8'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>USERNAME<span class="token punctuation">,</span> PASSWORD<span class="token punctuation">,</span> HOSTNAME<span class="token punctuation">,</span> PORT<span class="token punctuation">,</span> DATABASE<span class="token punctuation">)</span>SQLALCHEMY_DATABASE_URI <span class="token operator">=</span> DB_URI</code></pre><p><strong>设置model.py数据库表</strong>：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> exts <span class="token keyword">import</span> db<span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetime<span class="token keyword">class</span> <span class="token class-name">UserModel</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>    __tablename__ <span class="token operator">=</span> <span class="token string">"user"</span>    <span class="token builtin">id</span> <span class="token operator">=</span> db<span class="token punctuation">.</span>Column<span class="token punctuation">(</span>db<span class="token punctuation">.</span>Integer<span class="token punctuation">,</span> primary_key<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> autoincrement<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    username <span class="token operator">=</span> db<span class="token punctuation">.</span>Column<span class="token punctuation">(</span>db<span class="token punctuation">.</span>String<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span> nullable<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    password <span class="token operator">=</span> db<span class="token punctuation">.</span>Column<span class="token punctuation">(</span>db<span class="token punctuation">.</span>String<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span> nullable<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    email <span class="token operator">=</span> db<span class="token punctuation">.</span>Column<span class="token punctuation">(</span>db<span class="token punctuation">.</span>String<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span> nullable<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> unique<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    join_time <span class="token operator">=</span> db<span class="token punctuation">.</span>Column<span class="token punctuation">(</span>db<span class="token punctuation">.</span>DateTime<span class="token punctuation">,</span> default<span class="token operator">=</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">)</span></code></pre><p>设置app.py，添加migrate的引用：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token keyword">import</span> config<span class="token keyword">from</span> exts <span class="token keyword">import</span> db<span class="token keyword">from</span> models <span class="token keyword">import</span> UserModel<span class="token keyword">from</span> blueprint<span class="token punctuation">.</span>qa <span class="token keyword">import</span> bp <span class="token keyword">as</span> qa_bp<span class="token keyword">from</span> blueprint<span class="token punctuation">.</span>author <span class="token keyword">import</span> bp <span class="token keyword">as</span> author_bp<span class="token keyword">from</span> flask_migrate <span class="token keyword">import</span> Migrateapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token comment"># 绑定配置文件</span>app<span class="token punctuation">.</span>config<span class="token punctuation">.</span>from_object<span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token comment"># 这种db的创建方法允许先创建再导入模型</span>db<span class="token punctuation">.</span>init_app<span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token comment"># 新增内容</span>migrate <span class="token operator">=</span> Migrate<span class="token punctuation">(</span>app<span class="token punctuation">,</span> db<span class="token punctuation">)</span><span class="token comment"># 导入蓝图</span>app<span class="token punctuation">.</span>register_blueprint<span class="token punctuation">(</span>qa_bp<span class="token punctuation">)</span>app<span class="token punctuation">.</span>register_blueprint<span class="token punctuation">(</span>author_bp<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><strong>使用命令创建数据库</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash">flask db initflask db migrateflask db upgrade</code></pre>]]></content>
      
      
      <categories>
          
          <category> python教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>登机牌中的信息</title>
      <link href="/2024/02/21/deng-ji-pai-zhong-de-xin-xi/"/>
      <url>/2024/02/21/deng-ji-pai-zhong-de-xin-xi/</url>
      
        <content type="html"><![CDATA[<h2 id="登机牌中的信息"><a href="#登机牌中的信息" class="headerlink" title="登机牌中的信息"></a>登机牌中的信息</h2><p><strong>简介</strong>：在某次上网络安全课时，我们老师特地放出了一张机票的图，这是我第一次在课堂上接触社会工学，原来从机票上可以获得的信息有那么多。经过接触民航无线电的过程，我又强化了一下这个内容，现在正好可以分享出来。</p><h3 id="了解一张登机牌"><a href="#了解一张登机牌" class="headerlink" title="了解一张登机牌"></a>了解一张登机牌</h3><p><strong>介绍</strong>：一张登机牌的信息会出现航班号、日期、舱位、序号、座位号、始发地、目的地(到达站)、姓名。也有可能出现登机时间，登机口等，座位等。</p><p><img src="/2024/02/21/deng-ji-pai-zhong-de-xin-xi/4e3a1f23e7234a66ad2472517dc690db.jpeg"></p><p>分析一张登机牌，最主要的信息无疑是确认这个乘客到底是什么时候登机的，他要去什么地方，以及出发时间和到达时间分别是什么。这时候，分析**航班号(flight)**是主要的手段。</p><h3 id="航班号"><a href="#航班号" class="headerlink" title="航班号"></a>航班号</h3><p><strong>简介</strong>：航班号包含了一个航班的所有信息，航班号中可以分析出航司、承运公司总部位置、承运公司所在地区、去程还是回程。</p><p><strong>参考链接</strong>：<a href="https://zhuanlan.zhihu.com/p/91945737">https://zhuanlan.zhihu.com/p/91945737</a></p><p><strong>例如上图中的航班号</strong>：MU2357</p><p><strong>这里可以将航班号拆分成</strong>： MU 23 57</p><p><strong>MU</strong>：中国东方航空公司</p><p><strong>23</strong>：反映飞行区域</p><p><strong>57</strong>：反映是第几次的飞行，最后一位奇数代表去程，是偶数代表返程</p><p>这里我们并不需要严格的记住航班号各个数字的意义，我们只需要在相关的网站上查找就行。</p><h4 id="FlightAware查找"><a href="#FlightAware查找" class="headerlink" title="FlightAware查找"></a>FlightAware查找</h4><p><strong>简介</strong>：FlightAware是全球实时航班定位系统，你可以在这里输入航班号查询目前该航班的飞行状态</p><p><strong>链接</strong>：<a href="https://www.flightaware.com/">https://www.flightaware.com</a></p><p>当我们直接输入<strong>MU2357</strong>进行查找，我们就能获得这个航班目前的航行状态：</p><p><img src="/2024/02/21/deng-ji-pai-zhong-de-xin-xi/image-20240221185302505.png"></p><p><strong>注意</strong>：<code>FlightAware</code>有时候并不能查到这个航班，因为航司的字母可能会发生变化，你需要注入<code>FlightAware</code>能够识别到的航司，例如这里可以自动转换成<code>CES2357</code>。</p><p>由于<code>FlightAware</code>的系统是采用民用上传数据的方式接收飞机的<strong>ADS-B</strong>信号，飞机的飞行数据可能并不会实时同步。并且<code>FlightAware</code>的公开的数据涉嫌泄露国家机密，例如某个总统的航班飞行记录，所以不要参与接收相关数据，可能会触及法律问题。</p>]]></content>
      
      
      <categories>
          
          <category> 社工 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>接收GEO卫星GK-2A笔记</title>
      <link href="/2024/02/06/jie-shou-geo-wei-xing-gk-2a-bi-ji/"/>
      <url>/2024/02/06/jie-shou-geo-wei-xing-gk-2a-bi-ji/</url>
      
        <content type="html"><![CDATA[<h2 id="接收GEO卫星GK-2A笔记"><a href="#接收GEO卫星GK-2A笔记" class="headerlink" title="接收GEO卫星GK-2A笔记"></a>接收GEO卫星GK-2A笔记</h2><p><strong>简介</strong>：<strong>地球静止轨道</strong><code>GEO(GEO: Geostationary Orbit)</code>，与<strong>太阳同步轨道</strong><code>SSO(Sun-synchronous Orbit)</code>NOAA系列不同，同步轨道卫星的信号很弱，需要添加<strong>LNA</strong>来放大信号。</p><p><strong>注意</strong>：NOAA系列并不是<strong>极地轨道（Polar Orbit）</strong>卫星</p><p><strong>定位网址</strong>：<a href="http://www.dishpointer.com/">www.dishpointer.com</a></p><p><strong>卫星信息</strong>：</p><p><strong>satdump的satellite-List</strong>：<a href="https://www.satdump.org/Satellite-List">https://www.satdump.org/Satellite-List</a></p><p><strong>OSCAR卫星列表</strong>：<a href="https://space.oscar.wmo.int/satellites">https://space.oscar.wmo.int/satellites</a></p><p><strong>参考教程</strong>：</p><p><strong>天线搭建教程</strong>：<a href="https://www.bilibili.com/video/BV1wV4y1e7mi">https://www.bilibili.com/video/BV1wV4y1e7mi</a></p><p><strong>接收图像参考</strong>：<a href="https://www.bilibili.com/video/BV1f8411q7Pg">https://www.bilibili.com/video/BV1f8411q7Pg</a></p><h3 id="接收GK-2A"><a href="#接收GK-2A" class="headerlink" title="接收GK-2A"></a>接收GK-2A</h3><p><strong>简介</strong>：接收卫星就和连上WIFI差不多，但是你需要知道这个卫星的转发器，发送的格式和内容，并且用相应的解码器解码。同步轨道是比较好接收的，因为它24小时都固定在同一个位置，不像太阳同步轨道卫星会围绕地球旋转。</p><h4 id="查看GK-2A-GEO-KOMPSAT-2A-信息"><a href="#查看GK-2A-GEO-KOMPSAT-2A-信息" class="headerlink" title="查看GK-2A(GEO-KOMPSAT-2A)信息"></a>查看GK-2A(GEO-KOMPSAT-2A)信息</h4><p><strong>简介</strong>：在<strong>satdump</strong>和<strong>oscar</strong>上都可以看到查找<code>GK-2A</code>卫星的信息，我们主要在这两个网站中获取卫星的<strong>频率</strong>和<strong>发送模式</strong>：</p><p><strong>satdump</strong>进入<a href="https://www.satdump.org/Satellite-List/">satelite-list</a>查看：</p><p><strong>点击链接进入satdump的satlite-list列表</strong>：</p><p><img src="/2024/02/06/jie-shou-geo-wei-xing-gk-2a-bi-ji/image-20231205144834884-170721617935634.png"></p><p><strong>在satlite-list中查找GK-2A</strong>：</p><p><img src="/2024/02/06/jie-shou-geo-wei-xing-gk-2a-bi-ji/image-20240206173055832-170721617935633.png"></p><p>我们发现<code>GK-2A</code>支持<code>LRPT</code>，<code>HRPT</code>和<code>CDAS</code>，这次我们要接收<code>LRPT</code>，所以我们查看<code>LRPT</code>的<strong>状态</strong>(Status)。这里显示状态是<strong>活跃的</strong>(Active)，表明我们可以收到信号。同时记录<code>LRPT</code>的频率：1692.14MHz</p><p><strong>oscar链接</strong>：<a href="https://space.oscar.wmo.int/satellites">https://space.oscar.wmo.int/satellites</a></p><p>这里后点击<code>filter table</code>，然后点击<code>GEO</code>即可：</p><p><img src="/2024/02/06/jie-shou-geo-wei-xing-gk-2a-bi-ji/image-20231205145806370-170721617935639.png"></p><h4 id="定位GK-2A卫星"><a href="#定位GK-2A卫星" class="headerlink" title="定位GK-2A卫星"></a>定位GK-2A卫星</h4><p><strong>在地图上查找卫星</strong>：<a href="http://www.dishpointer.com/">www.dishpointer.com</a></p><p><strong>视频教程</strong>：<a href="https://www.bilibili.com/video/BV1wV4y1e7mi">https://www.bilibili.com/video/BV1wV4y1e7mi</a></p><p><strong>简介</strong>：进入网址后找到<code>GK-2A</code>，<code>location</code>输入你所在的城市中文名称即可。</p><p><strong>查找完成后会显示如下图片</strong>：</p><p><img src="/2024/02/06/jie-shou-geo-wei-xing-gk-2a-bi-ji/image-20231012163413043-170721617935640.png"></p><p>记录卫星的仰角和方位角</p><p>由于同步卫星位置不变，所以可以根据得到的角度来调整天线对准卫星。</p><h4 id="安装Zadig驱动"><a href="#安装Zadig驱动" class="headerlink" title="安装Zadig驱动"></a>安装Zadig驱动</h4><p><strong>链接</strong>：<a href="https://zadig.akeo.ie/downloads/">https://zadig.akeo.ie/downloads/</a></p><p><strong>简介</strong>：直接下载最新的zadig-2.5版本，插入sdr后选择sdr运行即可。为了防止安装错误导致USB驱动失效，建议百度如何安装zadig</p><p><img src="/2024/02/06/jie-shou-geo-wei-xing-gk-2a-bi-ji/image-20231012164831209-170721617935635.png"></p><h4 id="下载satdump并安装GK-2A卫星解码"><a href="#下载satdump并安装GK-2A卫星解码" class="headerlink" title="下载satdump并安装GK-2A卫星解码"></a>下载satdump并安装GK-2A卫星解码</h4><p><strong>下载satdump</strong>：<a href="https://www.satdump.org/download/">https://www.satdump.org/download/</a></p><p><strong>简介</strong>：下载好<strong>satdump</strong>后进入软件<code>resources</code>新建<code>GEO卫星</code>文件夹，将解码软件放入即可。我这里使用<strong>1.1.2</strong>版本。</p><p><img src="/2024/02/06/jie-shou-geo-wei-xing-gk-2a-bi-ji/image-20231012170024343-170721617935637.png"></p><h4 id="架设接收设备"><a href="#架设接收设备" class="headerlink" title="架设接收设备"></a>架设接收设备</h4><p><strong>简介</strong>：这里<code>LNA</code>放大器和滤波器可以买2合1的，也可以分开买。带通滤波后连接天线。转接头不需要买软质的线，会损失一定的信号，直接买硬质的转接头即可：</p><p><img src="/2024/02/06/jie-shou-geo-wei-xing-gk-2a-bi-ji/image-20231012170641825-170721617935636.png"></p><p><strong>接收过程中需要竖向架设天线</strong>：</p><p><img src="/2024/02/06/jie-shou-geo-wei-xing-gk-2a-bi-ji/IMG_20231130_120606-170721617935638.jpg"></p><p><strong>注意</strong>：如果是<code>SAWBird+GOES</code>，相当于一个<strong>带通滤波+LNA</strong>，但是还是要加添加一个LNA放大器，不然信号接收很差，<strong>信噪比</strong>只有<code>7-9</code>左右，使用<code>satdump</code>接收会产生<strong>少量</strong>裂开的图像：</p><p><img src="/2024/02/06/jie-shou-geo-wei-xing-gk-2a-bi-ji/IMG_FD_013_IR105_20231120_021006-FC-170721617935641.jpg"></p><p><strong>注意</strong>：由于<code>SAWBird+GOES</code>的设计问题，使用过程会在<code>output</code>端输出直流，需要在<code>output</code>端加上<strong>隔直器</strong>来防止<code>SDR</code>被烧坏。</p><p><strong>详细内容可在官网找到</strong>：<a href="https://www.nooelec.com/store/sdr/sdr-addons/sawbird/sawbird-plus-goes-302.html">https://www.nooelec.com/store/sdr/sdr-addons/sawbird/sawbird-plus-goes-302.html</a></p><p><img src="/2024/02/06/jie-shou-geo-wei-xing-gk-2a-bi-ji/image-20240203225656412-170721617935642.png"></p><p>这里的<code>DC block</code>就是<strong>隔直器</strong>。不添加隔直器会出现信号波动问题，详细情况可看接收 <strong>FENGYUN-4A</strong> -&gt; <strong>信号波动问题</strong>篇。</p><h4 id="设置satdump"><a href="#设置satdump" class="headerlink" title="设置satdump"></a>设置satdump</h4><p><strong>简介</strong>：双击运行即可。选择<code>Recorder</code>，频率调整至<code>1692.14Mhz</code>，带宽调整为<code>250kbps</code>。不要勾选<code>AGC</code>，会影响锁相环，直接把<code>LNA Gain</code>调到最大，点击<code>start</code>，此时信号太弱不能出现频谱：</p><p><img src="/2024/02/06/jie-shou-geo-wei-xing-gk-2a-bi-ji/image-20231012173223590-170721617935643.png"></p><p>调整<code>FFT Min</code>至频谱出现：</p><p><img src="/2024/02/06/jie-shou-geo-wei-xing-gk-2a-bi-ji/image-20231012173315248-170721617935644.png"></p><p>在<code>Processing</code>中搜索<code>GK-2A LRIT</code>，点击<code>start</code>：</p><p><img src="/2024/02/06/jie-shou-geo-wei-xing-gk-2a-bi-ji/image-20231120204628526-170721617935645.png"></p><p>在每个小时的0，10，20，30，40，50分钟时，频谱会发生变化，此时说明卫星正在传输图像。</p><p>接收到的图片会自动保存在<code>bin/live_output</code>文件夹中：</p><p><img src="/2024/02/06/jie-shou-geo-wei-xing-gk-2a-bi-ji/image-20231012174223682-170721617935646.png"></p><h4 id="转化图片"><a href="#转化图片" class="headerlink" title="转化图片"></a>转化图片</h4><p><strong>简介</strong>：接收到的图像是黑白的，可以通过脚本进行转化，转化脚本为<a href="https://github.com/nullpainter/sanchez">sanchez</a>，操作方式按照<a href="https://github.com/nullpainter/sanchez/wiki">wiki</a>描述的操作即可。</p><p><strong>sanchez链接</strong>：<a href="https://github.com/nullpainter/sanchez">https://github.com/nullpainter/sanchez</a></p><h5 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h5><p><strong>简介</strong>：考虑到很多HAM可能第一次使用github，不懂如何操作，这里介绍一下如何下载吧。</p><p><strong>进入上述链接后点击Releases内的版本号</strong>：</p><p><img src="/2024/02/06/jie-shou-geo-wei-xing-gk-2a-bi-ji/image-20240206171246906-170721617935647.png"></p><p><strong>下载windows版本即可</strong>：</p><p><img src="/2024/02/06/jie-shou-geo-wei-xing-gk-2a-bi-ji/image-20240206171554367-170721617935648.png"></p><p>下载好后解压文件，即可进入转换步骤。</p><h5 id="转换"><a href="#转换" class="headerlink" title="转换"></a>转换</h5><p><strong>简介</strong>：在sanchez项目内使用CMD或powershell中输入如下命令</p><p><strong>转换图片命令</strong>：</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment"># 单张</span>Sanchez <span class="token operator">-</span>s <span class="token string">"要转化的图片路径"</span> <span class="token operator">-</span>o <span class="token string">"Output.png"</span><span class="token comment"># 例如</span>Sanchez <span class="token operator">-</span>s <span class="token string">"c:\images\Himawari8\**\Himawari8_FD_VS_20200727T005100Z.jpg"</span> <span class="token operator">-</span>o <span class="token string">"Output.jpg"</span><span class="token comment"># 多张</span><span class="token punctuation">.</span><span class="token operator">/</span>Sanchez <span class="token operator">-</span>s <span class="token string">"要转化的图片文件夹路径"</span> <span class="token operator">-</span>o Output<span class="token comment"># 例如</span><span class="token punctuation">.</span><span class="token operator">/</span>Sanchez <span class="token operator">-</span>s <span class="token string">"c:\images\Himawari8"</span> <span class="token operator">-</span>o Output</code></pre><p><strong>注意</strong>：如果你的图片转换没有写入<code>..\Resources\Satellites.json</code>，你需要在<code>.json</code>文件中添加这颗卫星，并且手动对准地球影像。没有对准时会出现白边，添加时请使用编辑器来注意<code>.json</code>格式。</p>]]></content>
      
      
      <categories>
          
          <category> 业余无线电 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AMD驱动更新导致开机时间异常</title>
      <link href="/2024/01/30/amd-xian-qia-qu-dong-geng-xin-dao-zhi-kai-ji-shi-jian-yi-chang/"/>
      <url>/2024/01/30/amd-xian-qia-qu-dong-geng-xin-dao-zhi-kai-ji-shi-jian-yi-chang/</url>
      
        <content type="html"><![CDATA[<h2 id="AMD驱动更新导致开机时间异常"><a href="#AMD驱动更新导致开机时间异常" class="headerlink" title="AMD驱动更新导致开机时间异常"></a>AMD驱动更新导致开机时间异常</h2><h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>最近刷机和折腾搞的挺勤快，给笔记本升级了个二手硬盘又给手机刷了机，闲着没事做又把AMD的驱动打上了。</p><p>由于各种各样的原因，我去官网打上2023最新的驱动，驱动打上后，开机时间就变成两分钟了。</p><p>这让我十分不解，一开始我并没有怀疑是驱动有问题，我想了下，应该是新装的硬盘造成系统加载磁盘过慢，又或者是分区没分好的原因导致两个扇区之间的跳跃过大。</p><p>当时最要命的是，安装新磁盘后直接把我旧的D盘顶下去了，导致我所有快捷方式的路径都出错了，系统环境变量也指向了错误的地方。我很烦恼，使用磁盘分区工具改变了盘符后，开机慢的问题依然存在。百度开机慢的问题一直都是启动项过多导致开机过慢，我当时看了一下启动项，我把一个1分多钟的系统启动项禁用以后，还是没有改变开机时间2分钟的问题。</p><h3 id="经过"><a href="#经过" class="headerlink" title="经过"></a>经过</h3><p>我被迫无奈，只好先把系统格式化了，格式化后，开机时间正常了，等到我再打上驱动后，问题又出现了，于是我这才搜索到是更新AMD驱动导致我开机变成2分钟。</p><p>我按照教程进入安全模式使用DDU卸载显卡驱动，安装上2021年的稳定版驱动，开机时间终于正常了。</p><h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><p>由于我的Github开启了2FA认证，我之前把手机给刷机了，导致我的F2A没法认证，两个设备都刷干净了。Github官方也说如果设备都没有办法认证的话，GitHub官方也没有对账号的控制权。无奈我只好把GitHub注销，又重新注册了一个账号。这样搞导致我要把所有项目从原来的账号迁移过来。</p><p><strong>总结</strong>：不管怎么说，格式化系统是最错误的决定，所有环境都要重新搭建，所有虚拟机全都要重新导入。不到万不得已，不要去格式化系统</p><h3 id="修复步骤"><a href="#修复步骤" class="headerlink" title="修复步骤"></a>修复步骤</h3><p><strong>简介</strong>：如果你有AMD显卡驱动的相关问题，你也可以按照这篇文章的思路来安装可以正常运行的驱动版本。</p><p><strong>参考教程</strong>：<a href="https://www.bilibili.com/video/BV18m4y137YW">https://www.bilibili.com/video/BV18m4y137YW</a></p><p>例如，天选1重装系统后，原版OEM驱动会报如下错误，这时可以去安装官网的旧版本驱动：</p><p><img src="/2024/01/30/amd-xian-qia-qu-dong-geng-xin-dao-zhi-kai-ji-shi-jian-yi-chang/image-20240601022205183.png"></p><p><strong>修复的大致思路为</strong>：使用DDU卸载驱动 -&gt; 查看正常运行的旧版驱动 -&gt; 下载并安装旧版驱动 -&gt; 查看是否正常运行</p><h4 id="安装DDU"><a href="#安装DDU" class="headerlink" title="安装DDU"></a>安装DDU</h4><p><strong>简介</strong>：首先你需要先安装好卸载驱动的工具。为什么不能直接在控制面板中卸载？因为你可能卸载的不干净，使用DDU就是为了使你的显卡驱动完全从你的电脑上卸载，因此，在使用前请一定要先下载好你的旧版显卡驱动，防止不必要的麻烦。从官网下载好后安装即可，这里建议下载最新版本的：</p><p><img src="/2024/01/30/amd-xian-qia-qu-dong-geng-xin-dao-zhi-kai-ji-shi-jian-yi-chang/image-20240601015306388.png"></p><p><strong>点击Read More后选择Download即可</strong>：</p><p><img src="/2024/01/30/amd-xian-qia-qu-dong-geng-xin-dao-zhi-kai-ji-shi-jian-yi-chang/image-20240601015409580.png"></p><p><strong>官网下载</strong>：<a href="https://www.wagnardsoft.com/display-driver-uninstaller-DDU-">https://www.wagnardsoft.com/display-driver-uninstaller-DDU-</a></p><p><strong>参考教程</strong>：<a href="https://blog.csdn.net/tingzhiyi/article/details/112893730">https://blog.csdn.net/tingzhiyi/article/details/112893730</a></p><h4 id="使用DDU"><a href="#使用DDU" class="headerlink" title="使用DDU"></a>使用DDU</h4><p><strong>简介</strong>：第一次会让你选择删除什么，直接默认即可</p><p><img src="/2024/01/30/amd-xian-qia-qu-dong-geng-xin-dao-zhi-kai-ji-shi-jian-yi-chang/image-20240601020127273.png"></p><p>此时你的DDU已经准备完成，接下来需要下载AMD旧版的驱动。</p><h4 id="下载AMD驱动"><a href="#下载AMD驱动" class="headerlink" title="下载AMD驱动"></a>下载AMD驱动</h4><p><strong>简介</strong>：你需要可以运行的旧版本AMD驱动，你可以在官网找到离线版本的驱动，这样你就不必安装最新的驱动程序。</p><p><strong>AMD驱动官网</strong>：<a href="https://www.amd.com/en/support/download/drivers.html">https://www.amd.com/en/support/download/drivers.html</a></p><p><strong>在官网上找到你的显卡型号</strong>：例如我的是<code>Ryzen™ 7 4800H</code>，输入到搜索框，点击Search</p><p><img src="/2024/01/30/amd-xian-qia-qu-dong-geng-xin-dao-zhi-kai-ji-shi-jian-yi-chang/image-20240601021219947.png"></p><p>选择你相应的系统即可，这里我选择win10，选择旧版的驱动，将它下载下来：</p><p><img src="/2024/01/30/amd-xian-qia-qu-dong-geng-xin-dao-zhi-kai-ji-shi-jian-yi-chang/image-20240601021509384.png"></p><h4 id="安全模式卸载驱动"><a href="#安全模式卸载驱动" class="headerlink" title="安全模式卸载驱动"></a>安全模式卸载驱动</h4><p><strong>简介</strong>：为了防止卸载不干净，我们这里需要重启到安全模式使用DDU卸载驱动</p><p>点击恢复-&gt;高级启动-&gt;立即重新启动：</p><p><img src="/2024/01/30/amd-xian-qia-qu-dong-geng-xin-dao-zhi-kai-ji-shi-jian-yi-chang/image-20240601021731120.png"></p><p><strong>此时你需要选择重启项4，进入安全模式</strong>：</p><p><img src="/2024/01/30/amd-xian-qia-qu-dong-geng-xin-dao-zhi-kai-ji-shi-jian-yi-chang/2.png"></p><p><strong>进入到安全模式后直接开始卸载驱动</strong>：</p><p><img src="/2024/01/30/amd-xian-qia-qu-dong-geng-xin-dao-zhi-kai-ji-shi-jian-yi-chang/image-20240601023003486.png"></p><p>此时选择清除并重启即可。重启完成后，日志应该会检测不到AMD显卡，这时就已经完成驱动的卸载了</p><h4 id="安装驱动"><a href="#安装驱动" class="headerlink" title="安装驱动"></a>安装驱动</h4><p><strong>简介</strong>：卸载完成后，把下载好的离线的安装包安装即可。这里直接安默认的安装路径安装：</p><p><img src="/2024/01/30/amd-xian-qia-qu-dong-geng-xin-dao-zhi-kai-ji-shi-jian-yi-chang/image-20240601023259654.png"></p><p>等待安装完毕：</p><p><img src="/2024/01/30/amd-xian-qia-qu-dong-geng-xin-dao-zhi-kai-ji-shi-jian-yi-chang/image-20240601023439710.png"></p><p><strong>按照步骤安装并重启即可</strong>：</p><p><img src="/2024/01/30/amd-xian-qia-qu-dong-geng-xin-dao-zhi-kai-ji-shi-jian-yi-chang/image-20240601024029624.png"></p>]]></content>
      
      
      <categories>
          
          <category> win10小毛病 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 显卡驱动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>奇游加速器导致L2TP失效</title>
      <link href="/2024/01/30/qi-you-jia-su-qi-dao-zhi-l2tp-shi-xiao/"/>
      <url>/2024/01/30/qi-you-jia-su-qi-dao-zhi-l2tp-shi-xiao/</url>
      
        <content type="html"><![CDATA[<h2 id="奇游加速器导致L2TP失效"><a href="#奇游加速器导致L2TP失效" class="headerlink" title="奇游加速器导致L2TP失效"></a>奇游加速器导致L2TP失效</h2><p><strong>简介</strong>：安装奇游加速器加速后，windows的L2TP的L2TP协议会失效。</p><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><p>可以使用修改注册表的方式恢复</p><p><strong>链接</strong>：<a href="https://blog.csdn.net/ztservice/article/details/111239445">https://blog.csdn.net/ztservice/article/details/111239445</a></p><p>1、按win+R键打开运行输入regedit，打开注册表</p><p>2、找到：HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\RasMan\Parameters</p><p><img src="/2024/01/30/qi-you-jia-su-qi-dao-zhi-l2tp-shi-xiao/20201215201836506.jpg"></p><p>3、找到：HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\PolicyAgent</p><p><img src="/2024/01/30/qi-you-jia-su-qi-dao-zhi-l2tp-shi-xiao/20201215201904828.jpg"></p><p>如果没有这2个选项，右键新建32位DWORD值</p><p>将注册表导出下次双击运行即可修改：</p><p><img src="/2024/01/30/qi-you-jia-su-qi-dao-zhi-l2tp-shi-xiao/image-20240109173757296.png"></p><p>4、重启计算机。</p>]]></content>
      
      
      <categories>
          
          <category> win10小毛病 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MIX2S刷入澎湃OS</title>
      <link href="/2023/12/10/mix2s-shua-ru-peng-pai-os/"/>
      <url>/2023/12/10/mix2s-shua-ru-peng-pai-os/</url>
      
        <content type="html"><![CDATA[<h2 id="MIX2S刷入澎湃OS"><a href="#MIX2S刷入澎湃OS" class="headerlink" title="MIX2S刷入澎湃OS"></a>MIX2S刷入澎湃OS</h2><h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p><strong>简介</strong>：最近闲来无事，在阅读小米的《一往无前》。看到小米那么多的传奇故事，热血沸腾，也让我对小米的理解更深入了。一个机缘巧合，在我读到雷军在小米论坛的名字是”小虾米”时，我就把小米社区下载了回来，想找一下雷军到底发过什么帖子。然而我并没有找到那个当初那个属于他的账号，却碰巧看到了有人在MIX2S上刷澎湃OS的帖子。</p><p><img src="/2023/12/10/mix2s-shua-ru-peng-pai-os/image-20231210195541334.png"></p><p>好啊，于是我去b站一搜MIX2S澎湃OS，马上来了展示：</p><p><img src="/2023/12/10/mix2s-shua-ru-peng-pai-os/image-20231210195752865.png"></p><p>一个亮眼的二次元壁纸总是可以吸引我这种人去抄作业，况且这是澎湃OS。<a href="https://www.bilibili.com/video/BV1mj411L7hV">视频链接</a></p><p><img src="/2023/12/10/mix2s-shua-ru-peng-pai-os/image-20231210200226158.png"></p><p>视频下面提示酷安见，于是又闻着味来到了酷安</p><p><img src="/2023/12/10/mix2s-shua-ru-peng-pai-os/image-20231210200948430.png"></p><p>我把这刚发布没多久的帖子发给了我认识的一位刷机大佬，他觉得不错，叫我去刷。我没啥刷机经验，但是我当时很代入MIUI为发烧而生的精神，于是连夜开刷。</p><h3 id="准备资源"><a href="#准备资源" class="headerlink" title="准备资源"></a>准备资源</h3><p><strong>简介</strong>：本教程适合做好驱动的windows 10，你需要准备好一台打好<strong>ADB</strong>和<strong>fastboot</strong>驱动的电脑。这里不介绍怎么打驱动了。</p><p>首先进作者的博客看介绍并回复，就能拿到三个包</p><p><strong>作者介绍</strong>：<a href="https://www.xbzj.love/index.php/archives/266.html">https://www.xbzj.love/index.php/archives/266.html</a></p><p><strong>然后下载作者提供的三个包</strong>：</p><p><img src="/2023/12/10/mix2s-shua-ru-peng-pai-os/image-20231210203122252.png"></p><p>同时，你要使用小米官方的<code>flash_unlock</code>来解<strong>BL锁</strong>，解锁BL你才能刷机</p><p><strong>官网下载地址</strong>：<a href="https://www.miui.com/unlock/download.html">https://www.miui.com/unlock/download.html</a></p><p>最后你需要下载你现在版本的线刷包和miflash和9008线刷工具箱，以防变砖。这里最好下载低版本的，MIUI12可以。</p><p><strong>变砖指的是两种状态</strong>：1. 进不了rec，能进fastboot；2. rec和fastboot都进不了</p><p><strong>线刷包可以在miui历史版本这个网站下载</strong>：<a href="https://miuiver.com/tag/polaris-stable-rom/">https://miuiver.com/tag/polaris-stable-rom/</a></p><p><strong>线刷工具miflash下载</strong>：<a href="https://miuiver.com/miflash/">https://miuiver.com/miflash/</a></p><p><strong>9008刷机工具箱</strong>：<a href="https://medl845.agxmx.top/">https://medl845.agxmx.top/</a></p><p><strong>注意</strong>：在重复刷入<strong>system分区扩容包</strong>后有可能变砖，在你不确定是否刷入时，你需要<strong>重置system分区</strong>，或者直接使用9008强刷退回MIUI12以下</p><p>记得自己准备ADB！</p><h3 id="开始刷机"><a href="#开始刷机" class="headerlink" title="开始刷机"></a>开始刷机</h3><p><strong>注意</strong>：刷机有风险，刷机前你需要保存好你的数据，解锁BL会将数据全部删除，准备好另一台手机在酷安上找报错，如果你看得懂XDA论坛也可以搜索</p><p><strong>参考</strong>：<a href="https://zhuanlan.zhihu.com/p/103005475">https://zhuanlan.zhihu.com/p/103005475</a></p><p><strong>操作</strong>：</p><p>进入解锁工具按照提示解锁，先不用关机登录一下小米账号。解锁完成后会在开机logo显示一个开锁图案。</p><p>解锁完成等待重启，进入系统后按住<code>音量-</code>和<code>开机键</code>进入fastboot</p><p>找到miflash的文件夹，输入powershell进入powershell：</p><p><img src="/2023/12/10/mix2s-shua-ru-peng-pai-os/image-20231210210343493.png"></p><p><img src="/2023/12/10/mix2s-shua-ru-peng-pai-os/image-20231210210416961.png"></p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 检查fastboot是否连接</span>.<span class="token punctuation">\</span>fastboot devices<span class="token comment"># 刷入recovery 将recovery.img替换成你的路径</span>.<span class="token punctuation">\</span>fastboot flash recovery recovery.img</code></pre><p>这时你会看到：</p><p><img src="/2023/12/10/mix2s-shua-ru-peng-pai-os/image-20231210211017761.png"></p><p>这说明recovery已经刷进去了。</p><p>不用关机，直接使用<code>音量+</code>+<code>开机键</code>进入TWRP：</p><p><img src="/2023/12/10/mix2s-shua-ru-peng-pai-os/image-20231210211741871.png"></p><p><strong>进入到清除选项开始双清</strong>：</p><p>选择高级清除，选择所有选项，滑动按钮清除。</p><p>然后返回选择格式化Data分区，输入yes。格式化完成后重启recovery，开始传入system扩容包</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 使用adb命令传入扩容包,修改"MIX2s_5GB_System.zip"为自己的路径</span>adb push <span class="token string">"MIX2s_5GB_System.zip"</span> /sdcard/</code></pre><p>使用安装，进入<code>/sdcard/</code>选择刷机包，滑动刷入</p><p>刷完后重启进入recovery，那你就快成功了，没有进入使用9008线刷倒挡，或重新分区</p><p>刷入后重启进入<code>rec</code>(recovery)</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 传入刷机包</span>adb push <span class="token string">"HyperOS A13 Xiaomi MIX 2s.zip"</span> /sdcard/</code></pre><p>刷入前双清，然后和上面的步骤一样，选择<code>/sdcard/</code>里面的卡刷包，别再刷一次扩容包了</p><p>等待进度条跑完，出现这个界面你就成功刷上澎湃OS了：</p><p><img src="/2023/12/10/mix2s-shua-ru-peng-pai-os/image-20231210213610487.png"></p><h3 id="开机"><a href="#开机" class="headerlink" title="开机"></a>开机</h3><p><strong>操作</strong>：把数据线拔出，选择重启系统，会在MIX logo处等待一段时间。一段时间后，出现Hyper OS，刷机就完成了</p><p><img src="/2023/12/10/mix2s-shua-ru-peng-pai-os/image-20231210213851393.png"></p><p>壁纸太好看了</p><p><img src="/2023/12/10/mix2s-shua-ru-peng-pai-os/image-20231210214424325.png"></p><p>护眼模式可以在调色那里调成暖色，然后再自己微调一下</p><h3 id="重新刷回MIUI12-0-3"><a href="#重新刷回MIUI12-0-3" class="headerlink" title="重新刷回MIUI12.0.3"></a>重新刷回MIUI12.0.3</h3><p><strong>简介</strong>：直接下载线刷包回刷即可，刷之前先备份桌面和手机设置</p><p><strong>OEM回锁</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 关机按住音量-和开机键进fastboot，输入下面的命令</span>fastboot oem lock</code></pre><p><strong>注意</strong>：重新锁上BL后，会清除所有数据</p>]]></content>
      
      
      <categories>
          
          <category> 刷机教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SDR笔记</title>
      <link href="/2023/11/01/sdr-bi-ji/"/>
      <url>/2023/11/01/sdr-bi-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="软件定义无线电-SDR"><a href="#软件定义无线电-SDR" class="headerlink" title="软件定义无线电(SDR)"></a>软件定义无线电(SDR)</h1><p><strong>简介</strong>：软件定义无线电(Software Defined Radio)，简称SDR。廉价SDR基于电视棒大量开发，与传统硬件无线电价格差异让它迅速在无线电爱好者中普及，以至于让许多无线电爱好者以十分低廉的价格和天线系统即可清晰地完成对波形的接收和解码。并且它体积小，可玩性高，并且拥有可视化的操作界面，吸引了很多爱好者为其进行软件开发，逐步建立了SDR的开源社区</p><p><strong>SDR是什么</strong>：以前，<strong>调制器</strong>、<strong>解调器</strong>和<strong>调谐器</strong>等无线电组件是在模拟硬件组件中实现的。<strong>现代计算机</strong>和<strong>模数转换器</strong>的出现使得大多数基于硬件的组件可以用软件来实现。因此，术语”软件定义无线电”诞生了。这使得信号处理变得容易，从而生产出廉价的宽带无线电接收机。</p><p><strong>种类</strong>：SDR有许多不同的型号，它们分别来自不同的生产商。但是SDR的定价通通遵循一个准则：价格越高，可监听的频率范围越广，同时监听的带宽越大</p><p><strong>一下列举了常见的SDR型号</strong>：</p><table><thead><tr><th align="center">SDR</th><th align="center">最低协调频率(MHz)</th><th align="center">最高协调频率(MHz)</th><th align="center">接收带宽</th><th align="center">ADC分辨率(位)</th><th align="center">能否发射</th><th align="center">价格(美元)</th></tr></thead><tbody><tr><td align="center">RTL-SDR(R820T&#x2F;R860&#x2F;R828D)</td><td align="center">24</td><td align="center">1766</td><td align="center">3.2&#x2F;2.56(稳定的)</td><td align="center">8</td><td align="center">否</td><td align="center">~30</td></tr><tr><td align="center">Funcube Pro+</td><td align="center">0.15<br>410</td><td align="center">260<br>2050</td><td align="center">0.192</td><td align="center">16</td><td align="center">否</td><td align="center">~200</td></tr><tr><td align="center">Airspy</td><td align="center">24</td><td align="center">1800</td><td align="center">10</td><td align="center">12</td><td align="center">否</td><td align="center">199</td></tr><tr><td align="center">SDRPlay</td><td align="center">0.1</td><td align="center">2000</td><td align="center">8</td><td align="center">12</td><td align="center">否</td><td align="center">149</td></tr><tr><td align="center">HackRF</td><td align="center">30</td><td align="center">6000</td><td align="center">20</td><td align="center">8</td><td align="center">是</td><td align="center">299</td></tr><tr><td align="center">BladeRF</td><td align="center">300</td><td align="center">3800</td><td align="center">40</td><td align="center">12</td><td align="center">是</td><td align="center">400 &amp; 650</td></tr><tr><td align="center">USRP 1</td><td align="center">DC</td><td align="center">6000</td><td align="center">64</td><td align="center">12</td><td align="center">是</td><td align="center">700</td></tr></tbody></table><p><strong>ADC分辨率</strong>：<a href="https://zhuanlan.zhihu.com/p/447183487">https://zhuanlan.zhihu.com/p/447183487</a></p><p><strong>SDR入门指引</strong>：<a href="https://www.bilibili.com/video/BV1hz4y117U5/">https://www.bilibili.com/video/BV1hz4y117U5/</a></p><p>通过上述的价格对比如果你只想收听，那么RTL-SDR的售价是你入门SDR的最低门槛，并且你可能需要购买一些信号增益和过滤产品，通常是LNA和滤波器，增益和滤波对于接收弱信号来说是十分有用的。厂商有时也会将他们整合到一个模块来销售</p><p><strong>注意</strong>：</p><ol><li>各个SDR价格可能有波动，具体请参考电商售价，但是国内有很多盗版，正版也有溢价，请注意甄别。当然我并没有购买这些盗版的产品做对比，这里就不说明是购买哪种更具性价比了</li><li>本笔记默认你会使用浏览器的中文翻译按钮，并且有一定的英语理解能力和无线电基础</li><li>在必要时请使用下载加速工具来增加你的下载速度</li></ol><h2 id="RTL-SDR-v3"><a href="#RTL-SDR-v3" class="headerlink" title="RTL-SDR v3"></a>RTL-SDR v3</h2><p><strong>简介</strong>：<code>RTL-SDR v3</code>是一个便宜的售价30美元左右的USB接收器，可以作为一个以电脑为基础的无线电扫描仪，在你的区域现场接收无线电信号(且无需联网)。依靠特定的模式，它可以接收<code>500KHz-1.75GHz</code>的无线电频率。为<code>RTL-SDR</code>开发的大多数软件是社区开发并且免费提供的</p><p><code>RTL-SDR</code>的起源是批量生产的<a href="https://baike.baidu.com/item/DVB-T/7581699">DVB-T</a>电视调谐器，使用RTL2832U芯片组。<a href="http://sdr.osmocom.org/trac/wiki/rtl-sdr">在 Antti Palosaari、Eric Fry 和Osmocom</a> （特别是 Steve Markgraf）的共同努力下，我们发现 RTL2832U 芯片组上的原始 I&#x2F;Q 数据可以直接访问，这使得<code>DVB-T</code>电视调谐器能够转换为通过Steve Markgraf 开发的软件实现宽带软件定义无线电。如果您喜欢<code>RTL-SDR</code>项目，请考虑通过 Open Collective<a href="https://opencollective.com/osmocom">向 Osmocom 捐款</a>，因为他们是开发驱动程序并将<code>RTL-SDR</code>变为现实的人。</p><p><code>RTL-SDR</code>最大采样率为<code>3.2 MS/s</code>（每秒兆样本）。然而，<code>RTL-SDR</code>在此速率下运行不稳定并且可能会丢失样本。不丢失样本的最大采样率为<code>2.56 MS/s</code>，但有些人的<code>RTL-SDR</code>能幸运的在<code>USB3.0</code>接口上运行<code>2.8 MS/s</code>和 <code>3.2 MS/s</code>。</p><p><strong>about RTL-SDR</strong>：<a href="https://www.rtl-sdr.com/about-rtl-sdr">https://www.rtl-sdr.com/about-rtl-sdr</a></p><p><strong>RTL-SDR快速入门指南</strong>：<a href="https://www.rtl-sdr.com/rtl-sdr-quick-start-guide/">https://www.rtl-sdr.com/rtl-sdr-quick-start-guide/</a></p><p><strong>RTL-SDR支持的软件</strong>：<a href="https://www.rtl-sdr.com/big-list-rtl-sdr-supported-software/">https://www.rtl-sdr.com/big-list-rtl-sdr-supported-software/</a></p><p><strong>知乎详解</strong>：<a href="https://zhuanlan.zhihu.com/p/128547876">https://zhuanlan.zhihu.com/p/128547876</a></p><p><strong>购买方式</strong>：<a href="https://www.rtl-sdr.com/buy-rtl-sdr-dvb-t-dongles/">官方渠道</a>，ebay，国内电商</p><p>对于<code>RTL-SDR v3</code>型号，他们官网已经有很详细的英文教程了。但是有些专业名词可能不是那么好理解，我这里直接把sdrsharp用户手册翻译了一下，并提供了中文资料做参考</p><p><strong>RTL-SDR v3正版的分辨教程</strong>：这里你只需要看图，看懂正版长啥样就行</p><p><img src="/2023/11/01/sdr-bi-ji/clone_differentiate_20122022-903x1024.png"></p><h3 id="SDRsharp-SDR"><a href="#SDRsharp-SDR" class="headerlink" title="SDRsharp(SDR#)"></a>SDRsharp(SDR#)</h3><p><strong>简介</strong>：<code>SDRsharp</code>是<code>Airspy</code>开发的软件，简写为<code>SDR#</code>，后来兼容了许多<code>SDR</code>。<code>RTL-SDR v3</code>，支持<code>SDR#</code></p><p><code>SDRsharp</code>将会作为你平时使用最多的软件，当然你也可以下载一些相同类型的软件，例如：<a href="https://www.hdsdr.de/">HDSDDR</a></p><h4 id="安装SDR"><a href="#安装SDR" class="headerlink" title="安装SDR#"></a>安装SDR#</h4><p><strong>简介</strong>：安装<code>SDR#</code>我不推荐安装官方纯净版的，我推荐<code>SDR#</code>官方的社区整合包。如果你看着英文感觉无从下手，这里还附上了<code>BG1ICA</code>的汉化过的v1732，v1770版本(这里推荐使用v1770版本)</p><p>不熟悉英语的同学，你可以先看汉化的<code>SDR#</code>，这样可以更快速的帮你入门<code>SDR#</code>中的每个功能，但是我并不推荐你使用旧版本的<code>SDR#</code>，因为旧版有较多的BUG，并且十分卡顿，这里就以英文社区版的教程为例子</p><p><strong>SDR#纯净版下载</strong>：<a href="https://airspy.com/download/">https://airspy.com/download/</a></p><p><strong>SDR#英文插件社区版下载</strong>：<a href="https://sdrchile.cl/en/">https://sdrchile.cl/en/</a></p><p><strong>SDR#BG1ICA汉化版下载</strong>：<a href="https://www.bilibili.com/read/cv22473582/">https://www.bilibili.com/read/cv22473582/</a></p><p><strong>汉化版SDR#快速入门指南</strong>：<a href="https://github.com/Knighthana/Chinese-RTL-SDR-QuickStart-Guide/blob/main/RTL-SDR%E4%B8%AD%E6%96%87%E7%89%88%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97.md">https://github.com/Knighthana/Chinese-RTL-SDR-QuickStart-Guide/blob/main/RTL-SDR%E4%B8%AD%E6%96%87%E7%89%88%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97.md</a></p><h5 id="安装SDR-英文插件社区版"><a href="#安装SDR-英文插件社区版" class="headerlink" title="安装SDR#英文插件社区版"></a>安装SDR#英文插件社区版</h5><p><strong>简介</strong>：社区版下载下来是一个<code>SDR#</code>的安装器，社区下载过程我就不演示了，安装好后进入<code>bin</code>文件夹，选择<code>zadig.exe</code>来安装驱动</p><h5 id="安装驱动"><a href="#安装驱动" class="headerlink" title="安装驱动"></a>安装驱动</h5><p><strong>注意</strong>：请正确安装驱动否则可能会覆盖一些正常的驱动，例如网卡，鼠标的驱动，请参考上述汉化版安装教程，作者已经介绍很详细了，我这里在讲一些重点</p><p>选择<code>options</code>里的<code>list all devices</code>：</p><p><img src="/2023/11/01/sdr-bi-ji/68747470733a2f2f7777772e72746c2d7364722e636f6d2f77702d636f6e74656e742f75706c6f6164732f323031332f30342f7a616469675f312e706e67.png"></p><p>如果你使用的是<code>Win10</code>，有时候你需要把<code>Ignore Hubs or Composite Parents</code>（忽略集线器和复合设备中的父设备，译者注）选项前面的勾去掉</p><p>在下拉菜单中选择<code>Bulk-In, Interface(Interface 0)</code>，注意在有些计算机中你将会看到名如<code>RTL2832UHIDIR</code>或<code>RTL2832U</code>的设备取代了<code>Bulk-In</code>, <code>Interface</code>的位置，出现这种情况的时候，选这个也可以。不要选择<strong>USB Receiver (Interface 0)或者 Interface 1或者这之外的任何选项，不然你会把不该覆写的驱动覆写掉！</strong></p><p>反复检查以确保<code>USB ID</code>项显示<code>0BDA 2838 00</code>，表明现在是接收器作为选中的设备：</p><p><img src="/2023/11/01/sdr-bi-ji/68747470733a2f2f7777772e72746c2d7364722e636f6d2f77702d636f6e74656e742f75706c6f6164732f323031332f30342f7a616469675f332e706e67.png"></p><p>安装过程可能有5-6分钟左右，安装好驱动后即可使用<code>SDR#</code>等软件，无需再次打上驱动</p><h4 id="SDR-用户手册"><a href="#SDR-用户手册" class="headerlink" title="SDR#用户手册"></a>SDR#用户手册</h4><p><strong>简介</strong>：由于界面是纯英文版的，可能需要一些功能上的解释</p><p><strong>RTL-SDR官方教程</strong>：<a href="https://www.rtl-sdr.com/sdrsharp-users-guide/">https://www.rtl-sdr.com/sdrsharp-users-guide/</a></p><p>打开SDR后你将会看到这个界面，当然新版界面功能也是一样的</p><p>这里直接上<a href="http://radioastronomy.online/home/topic/37/">业余射电天文论坛</a>大佬的图：</p><p><img src="/2023/11/01/sdr-bi-ji/%E7%95%8C%E9%9D%A2.png"></p><p>你可以直接根据官方教程的指引来调整</p><p><strong>其中要注意下面几个点</strong>：</p><h4 id="Radio"><a href="#Radio" class="headerlink" title="Radio"></a>Radio</h4><p><strong>简介</strong>：Radio(无线电)主要调整接收模式和一些主要功能。</p><p><img src="/2023/11/01/sdr-bi-ji/image-20231030195718683.png"></p><p><strong>Snap to Grid&#x2F;Step size</strong>(对齐到网络，步进大小)：可以设置步进频率，取消对齐即可自由设置频率。老版本的RTL-SDR会因为过热导致频率偏移，所以一般不使用步进频率来手动对齐频偏</p><p><img src="/2023/11/01/sdr-bi-ji/image-20231030143706380.png"></p><p><strong>NFM(Narrowband Frequency Modulation)窄带频率调制</strong>：对讲机无线电、气象无线电和大部分<code>VHF/UHF</code>数字信号常用的模式。</p><p><strong>WFM(Wideband Frequency Modulation)宽带频率调制</strong>：这是广播调频电台使用的模式(例如广播音乐电台)，气象卫星也会使用WFM进行发送和接收。</p><p><strong>AM(Amplitude Modulation)幅度调制</strong>：用于普通短波无线电可接收的广播调幅电台，也用于飞机和空中交通管制(ATC)所使用的空中波段语音频率。一些数字信号也使用调幅。</p><p><strong>LSB&#x2F;USB(Lower Side Band &#x2F; Upper Sideband)下边带&#x2F;上边带</strong>：业余无线电用户在短波频段使用，以小带宽有效地传输语音和数据。</p><p><strong>CW(Continuous Wave)等幅波</strong>：用来听莫尔斯电码。</p><p><strong>DSB(Double Side Band)双边带</strong>：与<code>AM</code>类似，但需要居中调谐。</p><p><strong>RAW(Raw IQ signal)原始IQ信号</strong>：用于听或记录 RAW IQ 数据。</p><p><strong>shift</strong>：如果你使用了上变频器或下变频器，你需要调整相应的数量来抵消调谐频率，例如120Mhz上变频器需要输入的数字为-120,000,000。<br><strong>默认设置</strong>：0</p><p><strong>Bandwidth带宽</strong>：这是可调区域的阴影部分的宽度。您可以在这里手动设置它，或者按照调优条描述中的描述用鼠标拖动边缘。<br><strong>默认最大带宽NFM&#x2F;AM</strong>: 12500, WFM: 250000</p><p><strong>Filter滤波器</strong>：更改所使用的筛选器类型。不同的过滤器有不同的形状。滤波器用于在 RF 窗口中选择突出显示的信号。布莱克曼-哈里斯通常是最好的过滤器选择，这个设置几乎从来没有需要改变。<br><strong>默认设置</strong>：Blackman-Harris 4</p><p><strong>order</strong>：更改筛选顺序。您可能会注意到，当使用低滤波器命令时，仍然可以听到调谐带宽以外的信号。较大的滤波器命令“收紧”或“锐化”在调谐带宽&#x2F;中频内使用的带通滤波器，从而防止被听到调谐带宽以外的信号。当有强烈的信号接近你的调谐区域时，你会想要增加滤波器的顺序。使用更高的过滤器顺序可能会导致更大的 CPU 负载，因此低速 PC 可能需要降低这个值。<br><strong>默认设置</strong>：1000</p><p><strong>squelch(静噪)设置</strong>：当信号低于指定值(dBFS)时，采取静音。<br><strong>默认设置</strong>：只有NFM才设置静噪为50</p><p><strong>Stereo</strong>(FM立体声)：这个按钮只有在使用WFM模式时才可选中，主要功能和描述的一样，让FM电台的单声道转为立体声，开启这个按钮可能会让弱电台的声音更差。<br><strong>默认设置</strong>：关</p><p><strong>CW Shift</strong>：主要用于接收连续波(莫尔斯电码)时，因为它指定了连续波发射和接收频率之间的偏移。<br><strong>默认设置</strong>：1000</p><p><strong>Correct IQ</strong>：通常应该被设置成打开的状态。这个设置消除了<code>R820T/R820T2 RTL-SDR</code>接收器存在的小而恼人的中心尖峰。但是，在使用<code>SDR#+WXtoImg</code>接收NOAA气象卫星时，你必须关掉这个设置，否则你的音频将会无法解析</p><p><img src="/2023/11/01/sdr-bi-ji/image-20231030144617190.png"></p><p><strong>Lock Carrier</strong>：只能在<code>AM</code>和<code>DSB</code>模式使用。允许同步调幅，可以显著改善接收，也可以自动将载波信号对正中心，但是可能会增加CPU的使用。</p><p>**Anti-Fading(防衰减)**：在<code>Lock Carrier</code>未被激活时使用。利用调幅信号的对称性，有助于抵抗弱信号的淡入淡出，但可能会增加CPU的使用</p><h4 id="Display"><a href="#Display" class="headerlink" title="Display"></a>Display</h4><p><strong>简介</strong>：<code>Display</code>界面主要设置频谱图和瀑布流的显示效果</p><p><img src="/2023/11/01/sdr-bi-ji/image-20231030150629305.png"></p><p><strong>Resolution</strong>(分辨率)：提高分辨率将提高信号在RF显示器和瀑布流中的外观质量。在进行微调时，使用更高的分辨率可能是有用的，因为高分辨率可以让您更清楚地看到信号的峰值和结构。请注意，高分辨率可能会降低您的电脑速度，并可能导致麻烦，特别是与单核心机器。一般来说，如果你的电脑可以处理的话，应该使用至少<code>32768</code>的值。通常不用调整，会使得频谱变的卡顿</p><p><strong>Gradient</strong>(渐变色)：允许您自定义瀑布流中显示颜色</p><p><strong>Time Markers</strong>(时间标记)：在瀑布显示上添加时间标记，这样您就可以知道特定信号广播的时间。</p><p><strong>Mark Peaks</strong>(标记峰值)：简单地利用圆圈标记射频谱中的任何峰值。可以在Display中找到</p><p><strong>Speed</strong>(速度)：更改 RF 频谱和瀑布更新的速度。通常不会调整</p><h4 id="Audio"><a href="#Audio" class="headerlink" title="Audio"></a>Audio</h4><p><strong>简介</strong>：如果没有声音可以进入<code>Audio</code>(音频)中设置你的声卡。一般不用动，默认设置<code>Microsoft Sound</code>即可</p><p><img src="/2023/11/01/sdr-bi-ji/image-20231030150909216.png"></p><p><strong>Unity Gain</strong>：一般不打开，设置以后音频增益为0</p><p><strong>Filter Audio</strong>：通过过滤音频，去除高音嘶嘶声和直流噪声来改善语音信号。如果解码数字信号，通常应该关闭，但实际上对某些情况可能有帮助，如果有明显的直流偏移</p><h4 id="AGC"><a href="#AGC" class="headerlink" title="AGC"></a>AGC</h4><p><strong>简介</strong>：AGC(audio automatic gain control)音频自动增益。打开AGC时，它将尝试自动控制音量水平，使声音不会太大声，也不会太小声。这个设置适用于语音音频信号，在收听 AM&#x2F;USB&#x2F;LSB 信号时，打开这个开关尤其有用，因为在这些模式下，强信号听起来可能会失真。</p><p><img src="/2023/11/01/sdr-bi-ji/image-20231030152302828.png"></p><h4 id="SDR-Digital-Noise-Reduction"><a href="#SDR-Digital-Noise-Reduction" class="headerlink" title="SDR# Digital Noise Reduction"></a>SDR# Digital Noise Reduction</h4><p><strong>简介</strong>：<code>Digital Noise Reduction</code>(数字降噪)有两种方式，一种是基于<code>audio</code>音频的，一种是基于<code>IF</code>(Intermediate Frequency)中频的。</p><p><img src="/2023/11/01/sdr-bi-ji/image-20231031085027534.png"></p><p>当听到微弱和嘈杂的模拟语音信号时，打开数字降噪是有用的。此设置将尝试减少背景“嘶嘶”声。有两个<code>DNR</code>选项可用，<code>IF</code>和<code>audio</code>。中频对中频信号使用降噪算法，而音频选项对输出音频信号进行降噪。通常中频数字降噪效果最好，应该首先尝试，尽管两者的结合可能最好。滑块控制应用算法的强度，并且配置文件可以针对您正在收听的音频类型进行优化。配置文件的选项是高保真，交谈，语音，窄带和自定义。</p><p><img src="/2023/11/01/sdr-bi-ji/sdrsharp_dnr.png"></p><h4 id="Noise-Blanker"><a href="#Noise-Blanker" class="headerlink" title="Noise Blanker"></a>Noise Blanker</h4><p><strong>简介</strong>：<code>Noise Blanker</code>(噪声消除器)是一种算法，可以打开，以帮助减少冲击和脉冲类噪声的来源，如火花隙。这类噪音的例子可能来自电动机、电线、以太网供电和开关电源。小心使用这个选项可以真正有助于接收跳动噪音中的微弱信号，噪音通常出现在HF波段。噪声消除器的工作原理是简单地去除任何含有大脉冲能量的样品。</p><p><img src="/2023/11/01/sdr-bi-ji/image-20231031085659046.png"></p><p>在<code>SDR#</code>中有两种不同类型的噪声消除器。基带噪声消除器在整个频谱上工作，将从 FFT 和瀑布中去除脉冲，而解调器噪声消除器只在目前正在解调的调谐区域内工作。调优设置主要是试验中的一个练习错误。移动滑块，直到脉动噪音消失，同时试图保持信号活跃。</p><p><img src="/2023/11/01/sdr-bi-ji/sdrsharp_nb.png"></p><h4 id="Recorder"><a href="#Recorder" class="headerlink" title="Recorder"></a>Recorder</h4><p><strong>简介</strong>：<code>recorder</code>(录音机)标签允许您进行 I&#x2F;Q 和音频录音。示例格式允许您选择所需的录音质量水平。</p><p><img src="/2023/11/01/sdr-bi-ji/image-20231031090542961.png"></p><p>由于<code>RTL-SDR</code>只有大约8位，我们可以选择最低的8位<code>PCM</code>选项。只使用8位可以节省大量的磁盘空间。</p><p><img src="/2023/11/01/sdr-bi-ji/image-20231031143133231.png" alt="Baseband设置"></p><p>录音这里选择单声道会更节约磁盘空间</p><p><img src="/2023/11/01/sdr-bi-ji/image-20231031143205319.png" alt="Audio设置"></p><p><code>baseband</code>(基带)记录：指当前调谐到的整个带宽(不是)的记录。它将<code>RF</code>数据保存在带宽内，因此您可以在以后重播它。通过选择<code>record</code>可以进行<code>I/Q</code>录制。请注意，<code>I/Q</code>记录可能会占用大量磁盘空间，因此请确保观察“文件大小”和“持续时间”状态计数器。通过选择<code>IQ</code>文件，可以在<code>SDR#</code>中回放<code>I/Q</code>录音，录制的格式为<code>.wav</code>。如果你接收到大量丢失的缓冲区，那么你的电脑或磁盘性能不够处理基带录制。</p><p><strong>注意</strong>：基带录音使用大量的磁盘空间。</p><p>通过勾选“音频”复选框可以录制从扬声器发出的音频。这将记录音频到一个标准的音频。<code>.wav</code>文件。所有记录的文件都存储在与<code>SDR#</code>可执行文件相同的文件夹中。</p><p><img src="/2023/11/01/sdr-bi-ji/image-20231031091007229.png"></p><h4 id="Frequency-Manager-Tab"><a href="#Frequency-Manager-Tab" class="headerlink" title="Frequency Manager Tab"></a>Frequency Manager Tab</h4><p><strong>简介</strong>：<code>Frequency Manager Tab</code>(频率管理器)允许您将感兴趣的任何频率保存到数据库中。通过单击<code>New</code>按钮，可以向数据库添加新的频率。这将添加一个具有当前<strong>频率</strong>和<strong>设置</strong>(如带宽)的<strong>记录</strong>。你可以编辑记录的名称，并将其放入一个组，以便于管理。双击存储条目将立即调整<code>SDR#</code>到该频率，并设置到存储的模式和带宽。</p><p>如果您选中<code>Show on spectrum</code>(显示频谱)复选框，那么您保存的频率将显示在射频频谱。</p><p><img src="/2023/11/01/sdr-bi-ji/image-20231031143854948.png"></p><h4 id="zoom-bar"><a href="#zoom-bar" class="headerlink" title="zoom bar"></a>zoom bar</h4><p><strong>简介</strong>：右侧的滑块调整了<strong>RF频谱</strong>和<strong>瀑布流</strong>的图形显示设置，你可以在<code>lay out</code>中选中<code>Zoom Bar</code>显示它：</p><p><img src="/2023/11/01/sdr-bi-ji/image-20231031144438547.png"></p><p>勾选后<code>Zoom Bar</code>即可显示在频谱右边：</p><p><img src="/2023/11/01/sdr-bi-ji/image-20231031144344192.png"></p><p><strong>Zoom</strong>(缩放)：移动这个滑块将导致 RF 频谱和瀑布放大在您的调谐中频带宽区域，以便看到一个信号特写镜头。但是，放大得越多，分辨率就越低。缩放的一种替代方法是降低采样率，或者使用特殊的抽取驱动器。这些替代方法将保持视觉分辨率，并允许您更清楚地看到信号结构。</p><p><strong>Contrast</strong>(对比度)：调整瀑布的对比度，使信号清晰地从背景噪音中脱颖而出。</p><p><strong>Range</strong>：修改<code>RF</code>频谱窗口左(垂直)轴上显示的<code>dB</code>电平范围。你应该调整这一点，使噪音楼层坐落在接近底部的射频频谱窗口。这将允许信号在<code>FFT</code>射频频谱和瀑布流中更加可见。由于<code>RTL-SDR</code>的动态范围大约为<code>50dB</code>(通过采样&#x2F;抽取后会再增加一点) ，所以不需要大于0到-70dB的范围。这种设置也会影响瀑布流中的对比度，并可能使微弱的信号更容易被发现。<br><strong>默认设置</strong>：-70</p><p><img src="/2023/11/01/sdr-bi-ji/sdrshapr_range_offset.png"></p><p><strong>Offset</strong>：在<code>RF</code>(射频)频谱窗口中向<code>dB</code>电平区间添加偏移量。偏移量将被添加到<code>RF</code>(射频)频谱中<code>dB</code>电平范围的最高值。通常没有必要调整这个参数，但如果你想真正得到对比度良好的微弱信号，按照信号区间调整垂直轴，使垂直轴的高度与信号高度相同。这种设置也会影响瀑布流中的对比度，并可能有助于使微弱的信号更容易发现。<br><strong>默认设置</strong>：0</p><p><img src="/2023/11/01/sdr-bi-ji/sdrsharp_offset.png"></p><h4 id="Source"><a href="#Source" class="headerlink" title="Source"></a>Source</h4><p><strong>简介</strong>：<code>Source</code>(源)是选择信号来源的菜单，你可以在这里选择信号来源的方式，同时可以调整驱动和一些别的设置。<code>Source</code>中的<code>configure</code>和播放键旁边的齿轮按钮功能是一样的</p><p><img src="/2023/11/01/sdr-bi-ji/image-20231031151438599.png"></p><p><code>configure</code>(设置)窗口可以通过点击<code>SDR#</code>窗口顶部的齿轮图标来访问。这个窗口中的设置影响<code>RTL-SDR</code>的接收表现，正确设置这些选项可以优化信噪比(<code>SNR</code>)。配置窗口有几个选项，如下所述：</p><p><strong>注意</strong>：有些选项可能是灰色的，直到你按下停止键</p><p><img src="/2023/11/01/sdr-bi-ji/sdrsharp_configure.png"></p><p><strong>device</strong>(驱动)：如果您有多个<code>RTL-SDR</code>接收器插入，设备下拉菜单允许您在它们之间进行选择。</p><p><strong>Sample Rate</strong>(采样率)：允许您选择<code>RTL-SDR</code>应该显示的瞬时带宽的大小。一般来说，高达<code>2.8 MSPS</code>的设置在大多数电脑上都能很好地工作，但是如果你的电脑运行速度很慢，你可能需要减少这个设置。我们建议默认率为<code>2.048 MSPS</code>或<code>2.4 MSPS</code>。</p><p><strong>Sampling Mode</strong>(采样模式)：正常操作时使用正交采样。当使用支持直接采样的<code>RTL-SDR</code>时，应使用直接采样选择。</p><p><strong>Offset Tuning</strong>(抵消偏移量)：只对<code>E4000/FC0012/13</code>调谐器有用。选择这种方法可以消除<code>E4000/FC0012/13</code>零中频调谐器中存在的频谱中心的大尖峰。</p><p><strong>RTL AGC</strong>(RTL自动增益)：启用<code>RTL2832U</code>芯片上的自动增益控制。这通常是没有用的，因为选择这通常会降低接收。</p><p><strong>RF Gain</strong>(射频增益)：使调谐器芯片上的自动增益控制系统。可以用于一般浏览，但几乎总是更好的手动设置增益。</p><p><strong>Frequency correction(ppm)</strong>(频率矫正)：允许您纠正的频率偏移，<code>RTL-SDR</code>晶体振荡器的质量较低。</p><p><strong>Setting the RF Gain(设置RF增益)<strong>：在<code>Configure</code>(设置)中可以找到三个<code>RF gain</code>(射频增益)设置。打开<code>RTL AGC</code>可以开启<code>RTL2832U</code>芯片内部的</strong>自动增益控制</strong>(<code>automatic gain control/AGC</code>)算法。<code>Tuner AGC</code>试图自动优化信号的<code>SNR</code>(信噪比)。最后，增益滑块可用于手动设置增益。</p><p><img src="/2023/11/01/sdr-bi-ji/sdrsharp_gain.png"></p><p><code>RTL-SDR</code>中使用的自动增益控制器被设计用于宽带<code>DVB-T</code>信号，并且在窄带信号中不能很好地工作。我们建议在任何时候都使用手动增益控制来优化信号的增益，但是随意浏览打开调谐器<code>AGC</code>可能就足够了。<code>RTL AGC</code>几乎从来没有使用，因为它往往只是引入了很多不需要的噪声。</p><p>手动设置<code>RF gain</code>(射频增益)的目的是尝试获得更高的<strong>信噪比</strong>(<code>SNR</code>)。这意味着目标信号强度应尽可能高，底噪应该尽可能低。</p><p>当增益增加时，会有一个节点，噪声底部开始上升的速度比信号强度上升的速度快。这是你应该停止增加增益的点。</p><p>你可以通过从底噪的高度减去峰值信号高度来计算信噪比。</p><p><img src="/2023/11/01/sdr-bi-ji/sdrsharp_snr.png"></p><h4 id="过载看起来是怎么样的"><a href="#过载看起来是怎么样的" class="headerlink" title="过载看起来是怎么样的"></a>过载看起来是怎么样的</h4><p>在<code>SDR</code>(以及所有的无线电)中，过载是指一个过于强烈的信号进入无线电并导致<code>saturation</code>(饱和)。就像试图在一个喧闹的音乐会上听你的朋友和你说话。扬声器里的音乐太大声了，你听不见他们在说什么。</p><p>同样的事情也可能发生在收音机里。例如，如果<code>SDR</code>无法应付强烈的信号，并开始过载，你将不再能够听到较弱的信号。这甚至会发生在一个离你目标信号有数百<code>MHz</code>远的强烈信号上，虽然那些离你目标信号更近的频率会更能造成问题。</p><p><strong>广播调频信号</strong>(WFM)、<strong>寻呼机</strong>(pagers)、<strong>电视广播</strong>(TV broadcasts)、<strong>数字音频广播</strong>(DAB radio)和 <strong>GSM信号</strong>(GSM signals)是造成信号过载的主要原因。</p><p>过载的第一个解决方案是降低增益。但是降低增益也会使你想要的信号变弱，所以理想情况下，你应该使用一个<strong>滤波器</strong>来去除那些不想要的强信号，或者购买一个更昂贵的<code>12bit</code>或更<code>bit</code>的<code>SDR</code>，它可以更好地处理强信号。在本节中，我们将向您展示<code>SDR#</code>上的过载情况，这样您就知道何时识别是否存在问题。</p><p><strong>过载</strong>可以在不应该出现的频率上表现为强信号的图像。例如，在下面的图像有<code>FM</code>电台在<code>206 MHz</code>，他们肯定不应该在那里。简单地调小增益可以让它们消失。</p><p><img src="/2023/11/01/sdr-bi-ji/bcfm_image_sdrsharp-700x420.png" alt="BCFM Images"></p><p>它也可以表现为底噪提升。例如，在下面的图像中，一个强大的寻呼机信号导致底噪在传输时上升，在停止时又下降。</p><p><img src="/2023/11/01/sdr-bi-ji/pager_noise_floor-700x424.png" alt="Pager Causing Noise Floor Rises"></p><p>如果你离强烈信号只是调整了很短距离(<code>MHz</code>)，它就会导致各种奇怪的图像出现。例如在下面这张图片中，无论何时寻呼机发送信号，都会在这部分频谱上产生奇怪的信号峰值。</p><p>当然，过载也可能导致噪音楼层上升到如此之高，以至于信号根本看不见。</p><p><img src="/2023/11/01/sdr-bi-ji/pager_overload-700x421.png" alt="Pager Overload"></p><h4 id="SDR-Sharp-Plugins"><a href="#SDR-Sharp-Plugins" class="headerlink" title="SDR Sharp Plugins"></a>SDR Sharp Plugins</h4><p><code>SDR#</code>有很多扩展其功能的插件。我们推荐访问<a href="https://www.rtl-sdr.com/sdrsharp-plugins%E8%BF%99%E4%BA%9B%E6%8F%92%E4%BB%B6%E7%9A%84%E5%88%97%E8%A1%A8%E5%92%8C%E7%AE%80%E8%A6%81%E6%A6%82%E8%BF%B0%E3%80%82">https://www.rtl-sdr.com/sdrsharp-plugins这些插件的列表和简要概述。</a></p><p>要安装插件，您通常需要复制一个<code>.dll</code>文件添加到<code>SDR#</code>目录，并向<code>Plugins.xml</code>文本文件添加一个<code>magic line</code>文本条目，该文本文件可以在<code>SDR#</code>目录中找到。您需要在记事本或其他文本编辑器中打开此文件才能读取它。插件<code>zip</code>文件中通常包含的自述文件通常会告诉您<code>magic line</code>是什么。应该在 <code>&lt; sharPlugins &gt; &lt;/sharPlugins &gt;</code> 标记之间添加这一行。</p><p><strong>注意</strong>：一些较旧的插件自述文件可能仍然指示您将该行添加到 <code>SDRSharp.exe.config</code> 文件中。在旧的 <code>SDR#</code>版本是这样使用的，但现在是不正确的。这一行现在应该添加到 <code>plugins.xml</code> 文件中。</p><p><img src="/2023/11/01/sdr-bi-ji/sdrsharp_plugins-700x171.png"></p>]]></content>
      
      
      <categories>
          
          <category> sdr教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>碧蓝航线拆包记录</title>
      <link href="/2023/09/24/bi-lan-hang-xian-chai-bao-ji-lu/"/>
      <url>/2023/09/24/bi-lan-hang-xian-chai-bao-ji-lu/</url>
      
        <content type="html"><![CDATA[<h2 id="碧蓝航线拆包记录"><a href="#碧蓝航线拆包记录" class="headerlink" title="碧蓝航线拆包记录"></a>碧蓝航线拆包记录</h2><p><strong>简介</strong>：就像标题描述的一样碧蓝航线的所有皮肤都是预先下载好的资源，包括绝版的皮肤。你可以在碧蓝航线的资源包里找到它。但是要注意，提取之前请先下载游戏的所有资源</p><h4 id="检查资源"><a href="#检查资源" class="headerlink" title="检查资源"></a>检查资源</h4><p><strong>进入游戏来查看</strong>：只需要live2D的游戏资源即可</p><p><img src="/2023/09/24/bi-lan-hang-xian-chai-bao-ji-lu/image-20230922093612859.png"></p><h4 id="使用AssetStudio提取资源"><a href="#使用AssetStudio提取资源" class="headerlink" title="使用AssetStudio提取资源"></a>使用AssetStudio提取资源</h4><h5 id="寻找资源"><a href="#寻找资源" class="headerlink" title="寻找资源"></a>寻找资源</h5><p><strong>简介</strong>：首先找到碧蓝航线的立绘资源路径</p><p><strong>链接</strong>：<a href="https://github.com/Perfare/AssetStudio">https://github.com/Perfare/AssetStudio</a></p><p><strong>碧蓝航线立绘资源路径</strong>：<code>sdcard0/Android/data/com.bilibili.azurlane/files/AssetBundles</code></p><p>目录结构解释：</p><table><thead><tr><th align="center">文件夹名称</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">&#x2F;activitypainting</td><td align="center">活动人物</td></tr><tr><td align="center">&#x2F;aircrafticon</td><td align="center">游戏飞机资源</td></tr><tr><td align="center">&#x2F;battlescore</td><td align="center">得分画面</td></tr><tr><td align="center">&#x2F;bg</td><td align="center">游戏背景（含剧情背景）</td></tr><tr><td align="center">&#x2F;boxprefab</td><td align="center">游戏素材（箱子，水雷……）</td></tr><tr><td align="center">&#x2F;chapter</td><td align="center">游戏地图</td></tr><tr><td align="center">&#x2F;char</td><td align="center">人物Q版模型</td></tr><tr><td align="center">&#x2F;char</td><td align="center">人物Q版模型</td></tr><tr><td align="center">&#x2F;chargeicon</td><td align="center">商店里的图标</td></tr><tr><td align="center">&#x2F;chargo</td><td align="center">装备外观？</td></tr><tr><td align="center">&#x2F;clouds</td><td align="center">云</td></tr><tr><td align="center">&#x2F;clutter</td><td align="center">公告之类的图片</td></tr><tr><td align="center">&#x2F;commanderhrz</td><td align="center">指挥喵出征半图</td></tr><tr><td align="center">&#x2F;commandericon</td><td align="center">指挥喵头像</td></tr><tr><td align="center">&#x2F;commanderrarity</td><td align="center">喵窝UI</td></tr><tr><td align="center">&#x2F;commanderskillicon</td><td align="center">指挥喵技能</td></tr><tr><td align="center">&#x2F;commandertalenticon</td><td align="center">指挥喵阵营增益BUFF图标</td></tr><tr><td align="center">&#x2F;commonbg</td><td align="center">活动、商店、公告中背景之类</td></tr><tr><td align="center">&#x2F;cue</td><td align="center">BGM</td></tr><tr><td align="center">&#x2F;dailylevelicon</td><td align="center">每日日常</td></tr><tr><td align="center">&#x2F;dailyui</td><td align="center">点击特效</td></tr><tr><td align="center">&#x2F;effect</td><td align="center">特效素材</td></tr><tr><td align="center">&#x2F;emblem</td><td align="center">军衔</td></tr><tr><td align="center">&#x2F;emoji</td><td align="center">表情</td></tr><tr><td align="center">&#x2F;enemies</td><td align="center">活动特殊敌人</td></tr><tr><td align="center">&#x2F;equips</td><td align="center">装备</td></tr><tr><td align="center">&#x2F;eventtype</td><td align="center">Q版小人</td></tr><tr><td align="center">&#x2F;extra</td><td align="center">阴影</td></tr><tr><td align="center">&#x2F;font</td><td align="center">字体</td></tr><tr><td align="center">&#x2F;furniture</td><td align="center">家具</td></tr><tr><td align="center">&#x2F;furniture</td><td align="center">家具图标</td></tr><tr><td align="center">&#x2F;helpbg</td><td align="center">Help图片</td></tr><tr><td align="center">&#x2F;herohrzicon</td><td align="center">技能图片</td></tr><tr><td align="center">&#x2F;item</td><td align="center">游戏画面特效</td></tr><tr><td align="center">&#x2F;levelmap</td><td align="center">地图</td></tr><tr><td align="center">&#x2F;live2d</td><td align="center">live2d动态</td></tr><tr><td align="center">&#x2F;loadingbg</td><td align="center">载入图片</td></tr><tr><td align="center">&#x2F;lotterybg</td><td align="center">活动相关</td></tr><tr><td align="center">&#x2F;map</td><td align="center">地图相关数据</td></tr><tr><td align="center">&#x2F;mapres</td><td align="center">地图其他（像海，天空等等）</td></tr><tr><td align="center">&#x2F;medal</td><td align="center">奖章</td></tr><tr><td align="center">&#x2F;memoryicon</td><td align="center">回忆图标</td></tr><tr><td align="center">&#x2F;newshipbg</td><td align="center">新船背景</td></tr><tr><td align="center">&#x2F;numbericon</td><td align="center">数字</td></tr><tr><td align="center">&#x2F;painting</td><td align="center">立绘</td></tr><tr><td align="center">&#x2F;paintingface</td><td align="center">立绘头像</td></tr><tr><td align="center">&#x2F;prints</td><td align="center">阵营图片</td></tr><tr><td align="center">&#x2F;props</td><td align="center">物品资源</td></tr><tr><td align="center">&#x2F;puzzla</td><td align="center">活动收集相册之类</td></tr><tr><td align="center">&#x2F;qicon</td><td align="center">Q版头像</td></tr><tr><td align="center">&#x2F;sfurniture</td><td align="center">特殊家具</td></tr><tr><td align="center">&#x2F;shipdesignicon</td><td align="center">科研船头像</td></tr><tr><td align="center">&#x2F;shipmodels</td><td align="center">Q版照片</td></tr><tr><td align="center">&#x2F;shiprarity</td><td align="center">船的稀有程度</td></tr><tr><td align="center">&#x2F;shipyardicon</td><td align="center">立绘卡片</td></tr><tr><td align="center">&#x2F;skillicon</td><td align="center">技能图标</td></tr><tr><td align="center">&#x2F;squareicon</td><td align="center">立绘方块图像</td></tr><tr><td align="center">&#x2F;strategyicon</td><td align="center">游戏中一些图标（防空标识）</td></tr><tr><td align="center">&#x2F;tecfateskillicon</td><td align="center">科研船技能</td></tr><tr><td align="center">&#x2F;template</td><td align="center">模板</td></tr></tbody></table><h5 id="提取资源"><a href="#提取资源" class="headerlink" title="提取资源"></a>提取资源</h5><p><strong>简介</strong>：我们需要的是立绘资源，我们把<code>painting</code>文件夹复制到电脑上</p><p>这里我使用mumu模拟器将<code>painting</code>复制到共享文件夹中：</p><p><img src="/2023/09/24/bi-lan-hang-xian-chai-bao-ji-lu/image-20230922095208864.png"></p><p>复制完成后，将资源传到电脑，就可以进行资源的解包</p><h5 id="资源解包"><a href="#资源解包" class="headerlink" title="资源解包"></a>资源解包</h5><p><strong>简介</strong>：由于立绘是非图片格式，进行图片解包需要使用工具，这里使用<code>AssetStudio</code>进行解包</p><p><strong>链接</strong>：<a href="https://github.com/Perfare/AssetStudio/releases">https://github.com/Perfare/AssetStudio/releases</a></p><p><strong>注意</strong>：立绘文件是以<code>_tex</code>结尾的文件，其他文件是索引文件</p><p><strong>打开加载文件夹</strong>：</p><p><img src="/2023/09/24/bi-lan-hang-xian-chai-bao-ji-lu/a8e739207d8647fdba07e7b7a7608169.png"></p><p><strong>导出全部文件</strong>：新建一个全英文的文件夹来导出解包的文件</p><p><img src="/2023/09/24/bi-lan-hang-xian-chai-bao-ji-lu/b60923a59ea74bfa81f4a7ad972c0c2b.png"></p><p><strong>解包后如图</strong>：</p><p><img src="/2023/09/24/bi-lan-hang-xian-chai-bao-ji-lu/image-20230922134914717.png"></p><p><strong>注意</strong>：</p><p><code>Mesh</code>是以<code>.obj</code>结尾的坐标文件，可以用记事本打开</p><p><code>Texture2D</code>是贴图文件</p><h4 id="使用Azur-Lane-Paintng-Extract提取立绘"><a href="#使用Azur-Lane-Paintng-Extract提取立绘" class="headerlink" title="使用Azur Lane Paintng Extract提取立绘"></a>使用Azur Lane Paintng Extract提取立绘</h4><p><strong>简介</strong>：提取立绘我们仅需要<code>Mesh</code>和<code>Texture2D</code>文件，其他可以删除。这里我们使用<code>Azur Lane Paintng Extract</code>来进行提取</p><p><strong>链接</strong>：<a href="https://github.com/azurlane-doujin/AzurLanePaintingExtract-v1.0">https://github.com/azurlane-doujin/AzurLanePaintingExtract-v1.0</a></p><p><strong>下载好后直接解压双击打开</strong>：</p><p><img src="/2023/09/24/bi-lan-hang-xian-chai-bao-ji-lu/image-20230922191224996.png"></p><p>把<code>Mesh</code>和<code>Texture2D</code>文件夹托进去导出即可</p><h3 id="制作Live2DViewer桌面"><a href="#制作Live2DViewer桌面" class="headerlink" title="制作Live2DViewer桌面"></a>制作Live2DViewer桌面</h3><h4 id="提取Live2D"><a href="#提取Live2D" class="headerlink" title="提取Live2D"></a>提取Live2D</h4><p><strong>简介</strong>：Live2D和立绘资源在完全不同的两个文件夹，这里我们先找到文件复制出来，然后使用<code>UnityLive2DExtractor</code>进行解包。</p><p><strong>链接</strong>：<a href="https://github.com/Perfare/UnityLive2DExtractor">https://github.com/Perfare/UnityLive2DExtractor</a></p><p><strong>Live2D位置</strong>：<code>Android\data\com.bilibili.azurlane\files\AssetBundles\live2d</code></p><p><strong>提取步骤</strong>：同样的我们把Live2D文件夹拖到<code>.exe</code>上</p><p><img src="/2023/09/24/bi-lan-hang-xian-chai-bao-ji-lu/image-20230922201420447.png"></p><p><strong>解包完成后如图所示</strong>：</p><p><img src="/2023/09/24/bi-lan-hang-xian-chai-bao-ji-lu/image-20230922201451841.png"></p><h4 id="查看Live2D"><a href="#查看Live2D" class="headerlink" title="查看Live2D"></a>查看Live2D</h4><p><strong>使用steam的Live2DViewerEX来进行查看</strong>：</p><p>这里选择EX工作室</p><p><img src="/2023/09/24/bi-lan-hang-xian-chai-bao-ji-lu/image-20230922202319129.png"></p><p><strong>进入后选择EX工作室</strong>：</p><p><img src="/2023/09/24/bi-lan-hang-xian-chai-bao-ji-lu/image-20230922203124048.png"></p><p><strong>选择Live 2D编辑器</strong>：</p><p><img src="/2023/09/24/bi-lan-hang-xian-chai-bao-ji-lu/image-20230922211336564.png"></p><p><strong>选择模型文件夹</strong>：</p><p><img src="/2023/09/24/bi-lan-hang-xian-chai-bao-ji-lu/image-20230922212034631.png"></p><p>选择完成后就可以看见导入的Live 2D模型</p><h4 id="制作桌面Live-2D"><a href="#制作桌面Live-2D" class="headerlink" title="制作桌面Live 2D"></a>制作桌面Live 2D</h4><p><strong>简介</strong>：导入进去的<code>Live2D</code>是不能触摸的，也不会触发语音，需要在<code>Live2DViewerEX</code>里进行设置</p><p><strong>链接</strong>：<a href="https://www.bilibili.com/read/cv19106829/">https://www.bilibili.com/read/cv19106829/</a></p><p><strong>Live2DViewerEX文档</strong>：<a href="https://live2d.pavostudio.com/doc/zh-cn/exstudio/live2d-editor-tutorial/">https://live2d.pavostudio.com/doc/zh-cn/exstudio/live2d-editor-tutorial/</a></p><h5 id="打开文件"><a href="#打开文件" class="headerlink" title="打开文件"></a>打开文件</h5><p><strong>由于是要还原一个Live2D，这里我们选择打开文件夹</strong>：</p><p><img src="/2023/09/24/bi-lan-hang-xian-chai-bao-ji-lu/image-20230922212034631.png"></p><p><strong>因为需要还原原皮肤的内容，最好选择你的游戏里拥有的皮肤，好做对照，这里选择信浓的新皮肤</strong>：</p><p><strong>选择model3.json的文件</strong>：</p><p><img src="/2023/09/24/bi-lan-hang-xian-chai-bao-ji-lu/image-20230923110001793.png"></p><h5 id="调整缩放因子"><a href="#调整缩放因子" class="headerlink" title="调整缩放因子"></a>调整缩放因子</h5><p><strong>进去后画面会很大，先把缩放因子调成0.1或0.1左右</strong>：</p><p><img src="/2023/09/24/bi-lan-hang-xian-chai-bao-ji-lu/image-20230923110216816.png"></p><p><img src="/2023/09/24/bi-lan-hang-xian-chai-bao-ji-lu/image-20230923110236077.png"></p><h5 id="添加静态动作"><a href="#添加静态动作" class="headerlink" title="添加静态动作"></a>添加静态动作</h5><p><strong>简介</strong>：静态动作的预设名称为idle，没有静态动作时，模型只有局部部位会摆动。</p><p><strong>添加动作</strong>：点击动作新增一个动作组</p><p><img src="/2023/09/24/bi-lan-hang-xian-chai-bao-ji-lu/image-20230923143815752.png"></p><p><strong>选择预定义为idle，名称可以不写</strong>：</p><p><img src="/2023/09/24/bi-lan-hang-xian-chai-bao-ji-lu/image-20230923143902305.png"></p><p><strong>确认后新建一个动作</strong>：</p><p><img src="/2023/09/24/bi-lan-hang-xian-chai-bao-ji-lu/image-20230923144012663.png"></p><p><strong>搜索idle后添加上去</strong>：</p><p><img src="/2023/09/24/bi-lan-hang-xian-chai-bao-ji-lu/image-20230923144047610.png"></p><p>这样一个静态动作就建好了</p><h5 id="添加触摸动作"><a href="#添加触摸动作" class="headerlink" title="添加触摸动作"></a>添加触摸动作</h5><p><strong>简介</strong>：为了实现触摸效果，我们会在特定的区域里新建一个可触发的动作。</p><p><strong>同样的先建立动作组来添加动作，这里以摸头为例子</strong>：</p><p><img src="/2023/09/24/bi-lan-hang-xian-chai-bao-ji-lu/image-20230923144302269.png"></p><p>建立完成后，我们需要添加可触摸区域，这里的ID就代表可触摸区域，直接搜索<code>touchhead</code>即可：</p><p><img src="/2023/09/24/bi-lan-hang-xian-chai-bao-ji-lu/image-20230923144352980.png"></p><p>然后添加点击时的动作，选择<code>touchhead</code>：</p><p><img src="/2023/09/24/bi-lan-hang-xian-chai-bao-ji-lu/image-20230923144522509.png"></p><p>这样一个可触发的动作就添加完成了。</p><p>保存后返回主页面选择显示可触摸区域：</p><p><img src="/2023/09/24/bi-lan-hang-xian-chai-bao-ji-lu/image-20230923144653721.png"></p><h5 id="添加文本"><a href="#添加文本" class="headerlink" title="添加文本"></a>添加文本</h5><p><strong>简介</strong>：我们发现触摸没有相应的文本，这里不用拆包，直接去wiki中复制相应的文字到动作文本即可</p><p><img src="/2023/09/24/bi-lan-hang-xian-chai-bao-ji-lu/image-20230923145338689.png"></p><h5 id="添加音频"><a href="#添加音频" class="headerlink" title="添加音频"></a>添加音频</h5><p><strong>简介</strong>：音频可以去wiki上下载，但是wiki的音频更新速度脚慢，这里推荐直接使用<code>BlhxCueDecoder</code>拆包。</p><p><strong>目录</strong>：<code>Andriod/data/com.bilibili.azurlane/files/AssetBundles/cue</code></p><p><strong>教程</strong>：<a href="https://www.perfare.net/archives/816">https://www.perfare.net/archives/816</a></p><p><strong>下载</strong>：<a href="https://pan.baidu.com/s/1i5b1SzF">https://pan.baidu.com/s/1i5b1SzF</a></p><p><strong>对照表</strong>：<a href="https://www.bilibili.com/read/cv3626728">https://www.bilibili.com/read/cv3626728</a></p><p><strong>使用方法</strong>：cmd输入<code>.exe路径 文件路径 输出路径</code>即可</p><p><strong>由于拆包的语音不是按照名称排序的这里需要参照</strong>：</p><p><img src="/2023/09/24/bi-lan-hang-xian-chai-bao-ji-lu/image-20230923164510154.png"></p><p><strong>这里我们先找到信浓的CV号，把文件夹复制到live2D文件下面，在找到相应的语音导入</strong>：</p><p><img src="/2023/09/24/bi-lan-hang-xian-chai-bao-ji-lu/image-20230923164643663.png"></p><p><strong>注意</strong>：音频文件没有导入相应的文件夹会找不到音频，要提前导入</p>]]></content>
      
      
      <categories>
          
          <category> 游戏拆包 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue笔记</title>
      <link href="/2023/06/10/vue-kuang-jia-xue-xi/"/>
      <url>/2023/06/10/vue-kuang-jia-xue-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="vue初学习"><a href="#vue初学习" class="headerlink" title="vue初学习"></a>vue初学习</h1><p><strong>视频</strong>：<a href="https://www.bilibili.com/video/BV1zq4y1p7ga?p=3&share_source=copy_web&vd_source=fb1c8825bf34368632566c631619e122">黑马程序员vue教程</a></p><p><strong>课程资料</strong>：<a href="https://pan.baidu.com/s/17qA1j5kyEpmg80aW3bUwYg?pwd=1234">https://pan.baidu.com/s/17qA1j5kyEpmg80aW3bUwYg?pwd=1234</a></p><p><strong>内容</strong>：</p><h2 id="前端工程化"><a href="#前端工程化" class="headerlink" title="前端工程化"></a>前端工程化</h2><p><strong>小白眼中的前端开发</strong>：<br>会写<code>HTML + CSS + JavaScript</code>就会前端开发<br>需要美化页面样式，就拽一个<code>bootstrap</code>过来<br>需要操作DOM或发起Ajax请求，再拽一个<code>jQuery</code>过来<br>需要快速实现网页布局效果，就拽一个<code>Layui</code>过来</p><p><strong>实际的前端开发</strong>：<br><strong>模块化</strong>(js的模块化、Css的模块化、资源的模块化)<br><strong>组件化</strong>(复用现有的Ul结构、样式、行为)<br><strong>规范化</strong>(目录结构的划分、编码规范化、接口规范化、文档规范化、Git 分支管理)<br><strong>自动化</strong>(自动化构建、自动部署、自动化测试)</p><p><strong>前端工程化</strong>：在<strong>企业级的前端项目开发</strong>中，把前端开发所需的<strong>工具</strong>、<strong>技术</strong>、<strong>流程</strong>、<strong>经验</strong>等进行规范化，标准化</p><p>企业中的Vue项目和React项目，都是基于<strong>工程化的方式</strong>进行开发的。</p><p><strong>好处</strong>：前端开发<strong>自成体系</strong>，有一套<strong>标准的开发方案和流程</strong>。</p><p><strong>前端工程化解决方案</strong>：</p><p><strong>早期</strong>：<br><strong>grunt</strong>：<a href="https://www.gruntjs.net/">https://www.gruntjs.net/</a><br><strong>gulp</strong>：<a href="https://www.gulpjs.com.cn/">https://www.gulpjs.com.cn/</a></p><p><strong>主流</strong>：<br><strong>webpack</strong>：<a href="https://www.webpackjs.com/">https://www.webpackjs.com/</a><br><strong>parcel</strong>：<a href="https://zh.parceljs.org/">https://zh.parceljs.org/</a></p><h3 id="webpack"><a href="#webpack" class="headerlink" title="webpack"></a>webpack</h3><p><strong>概念</strong>：webpack是<strong>前端项目工程化的具体解决方案</strong></p><p><strong>主要功能</strong>：</p><p>本质上，<em>webpack</em> 是一个现代 JavaScript 应用程序的*静态模块打包器(module bundler)<em>。当 webpack 处理应用程序时，它会递归地构建一个</em>依赖关系图(dependency graph)*，其中包含应用程序需要的每个模块，然后将所有这些模块打包成一个或多个 <em>bundle</em></p><p>它提供了友好的<strong>前端模块化开发</strong>支持，以及<strong>代码压缩混淆、处理浏览器端 JavaScript 的兼容性、性能优化</strong>等强大的功能</p><p>简单地说，就是可以把多个js文件打包成一个文件</p><h4 id="webpack的基本使用"><a href="#webpack的基本使用" class="headerlink" title="webpack的基本使用"></a>webpack的基本使用</h4><h5 id="创建隔行变色项目"><a href="#创建隔行变色项目" class="headerlink" title="创建隔行变色项目"></a>创建隔行变色项目</h5><ol><li>新建项目空白目录，并运行<code>npm init -y</code>命令，初始化包管理配置文件<code>package.json</code></li><li>新建src源代码目录</li><li>新建<code>src -&gt; inde.html</code>首页和<code>src -&gt; index.js</code>脚本文件</li><li>初始化首页基本的结构</li><li>运行<code>npm install jquery -S</code>命令,安装<code>jQuery</code></li><li>通过<code>ES6</code>模块化的方式导入<code>jQuery</code>，实现列表隔行变色效果</li></ol><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./index.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>这是第 1 个li<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>这是第 2 个li<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>这是第 3 个li<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>这是第 4 个li<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>这是第 5 个li<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>这是第 6 个li<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>这是第 7 个li<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>这是第 8 个li<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>这是第 9 个li<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 使用es6导入jquery</span><span class="token keyword">import</span> $ <span class="token keyword">from</span> <span class="token string">"jquery"</span><span class="token comment">//定义入口</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'li:odd'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'background-color'</span><span class="token punctuation">,</span><span class="token string">'red'</span><span class="token punctuation">)</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'li:even'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'background-color'</span><span class="token punctuation">,</span><span class="token string">'pink'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><p><strong>注意</strong>：这里<code>odd</code>是<strong>偶数</strong>(第0行是偶数)，<code>even</code>是<strong>基数</strong></p><h5 id="由于浏览器不识别es6语言报错"><a href="#由于浏览器不识别es6语言报错" class="headerlink" title="由于浏览器不识别es6语言报错"></a>由于浏览器不识别es6语言报错</h5><p><img src="/2023/06/10/vue-kuang-jia-xue-xi/image-20220728172307998.png"></p><h5 id="安装并使用webpack解决问题"><a href="#安装并使用webpack解决问题" class="headerlink" title="安装并使用webpack解决问题"></a>安装并使用webpack解决问题</h5><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> webpack@5.42.1 webpack-cli@4.7.2 <span class="token parameter variable">-D</span></code></pre><p><strong>创建webpack.config.js</strong>：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 使用Node.js中的导出语法，向外导出一个webpack的配置对象</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">mode</span><span class="token operator">:</span><span class="token string">'development'</span> <span class="token comment">// 代表webpacck运行的模式，可选值有development和production</span><span class="token punctuation">&#125;</span></code></pre><p><strong>在package.json里添加</strong>：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token string-property property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token string-property property">"dev"</span><span class="token operator">:</span> <span class="token string">"webpack"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span></code></pre><p><strong>运行脚本</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> run dev</code></pre><p><img src="/2023/06/10/vue-kuang-jia-xue-xi/image-20220728180642932.png"></p><p><strong>注意</strong>：运行dev里的webpack时，会先读取webpack.config.js里的配置文件</p><p><strong>让html调用dist里的main.js</strong>：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../dist/main.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p><strong>注意</strong>：这里的<code>main.js</code>文件的实质就是把<code>index.js</code>和j<code>query</code>打包成一个文件后的结果</p><p><strong>此时可以正常调用</strong>：</p><p><img src="/2023/06/10/vue-kuang-jia-xue-xi/image-20220728180838034.png"></p><p><strong>注意</strong>：由于设置的是<strong>development模式</strong>，打包后的<code>main.js</code>不会压缩代码</p><p>更改<code>wabpack.config.js</code>里的<code>mode</code>为<code>production</code>模式即可<strong>压缩代码</strong>：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">mode</span><span class="token operator">:</span><span class="token string">'production'</span> <span class="token punctuation">&#125;</span></code></pre><p><strong>注意</strong>：</p><ol><li><p>使用<strong>production模式</strong>会进行压缩混淆，缩小文件体积，但是延长了打包时间，因此上线时用production，开发时用development</p></li><li><p>在webpack 4.x 和 5.x 的版本中有如下的<strong>默认约定</strong>：<br>默认的打包入口文件为<code>src -&gt; index.js</code>，默认输出文件路径为<code>dist -&gt; main.js</code></p></li></ol><h5 id="自定义打包的入口与出口"><a href="#自定义打包的入口与出口" class="headerlink" title="自定义打包的入口与出口"></a>自定义打包的入口与出口</h5><p><strong>简介</strong>：在<code>webpack.config.js</code>配置文件中，通过<code>entry</code>属性指定打包的入口，通过<code>output</code>属性指定打包的出口。</p><p><strong>示例</strong>：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 导入path文件</span><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token comment">// 使用Node.js中的导出语法，向外导出一个webpack的配置对象</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">mode</span><span class="token operator">:</span><span class="token string">'development'</span><span class="token punctuation">,</span> <span class="token comment">// 代表webpacck运行的模式，可选值有development和production</span>    <span class="token comment">// 指定打包文件</span>    <span class="token literal-property property">entry</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">'./src/index.js'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment">// 指定生成的文件要存放的位置</span>    <span class="token literal-property property">output</span> <span class="token operator">:</span><span class="token punctuation">&#123;</span>        <span class="token comment">// 指定存放的目录</span>        <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">'dist'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token comment">// 指定生成的文件名</span>        <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'bundle.js'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p><strong>问题</strong>：每次都要重新打包才能看到效果</p><h4 id="webpack插件"><a href="#webpack插件" class="headerlink" title="webpack插件"></a>webpack插件</h4><h5 id="webpack-dev-server"><a href="#webpack-dev-server" class="headerlink" title="webpack-dev-server"></a>webpack-dev-server</h5><p><strong>简介</strong>：该插件可以在源代码修改后自动进行打包操作</p><p><strong>安装</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> webpack-dev-server@3.11.2 <span class="token parameter variable">-D</span></code></pre><p><strong>调用webpack server</strong>：</p><p>更改<code>package.json</code>里的<code>script</code>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token string">"scripts"</span><span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span>  <span class="token string">"dev"</span><span class="token builtin class-name">:</span> <span class="token string">"webpack serve"</span><span class="token punctuation">&#125;</span>,</code></pre><p><strong>出现报错</strong>：</p><pre class="language-none"><code class="language-none">Unable to load &#39;@webpack-cli&#x2F;serve&#39; command</code></pre><p><strong>把webpack-cli升级到4.10.0以上解决问题</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i webpack-cli@4.10.0 <span class="token parameter variable">-D</span></code></pre><p><strong>重新运行</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> run dev</code></pre><p><strong>打开网址</strong>：<a href="http://localhost:8080/src/">http://localhost:8080/src/</a></p><p><strong>发现样式和文件并没有变化，因为最新的文件放在了内存里，而index.html里调用的还是..&#x2F;dist&#x2F;bundle.js</strong>：</p><p><img src="/2023/06/10/vue-kuang-jia-xue-xi/image-20220730130913090.png"></p><p><strong>更改html里的路径来匹配内存文件</strong>：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/bundle.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p><strong>注意</strong>：这里的<code>/</code>(根)指的是项目的根</p><h5 id="html-webpack-plugin"><a href="#html-webpack-plugin" class="headerlink" title="html-webpack-plugin"></a>html-webpack-plugin</h5><p><strong>简介</strong>：可以直接展示html页面</p><p><strong>安装</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> html-webpack-plugin@5.3.2 <span class="token parameter variable">-D</span></code></pre><p><strong>修改webpack.config.js配置</strong>：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 导入path文件</span><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token comment">// 导入 html-webpack-plugin 这个插件，得到插件的构造函数</span><span class="token keyword">const</span> HtmlPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span><span class="token comment">// new 构造函数，创建插件的实例对象</span><span class="token keyword">const</span> htmlPlugin <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HtmlPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token comment">// 指定要复制哪个页面</span>    <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">'./src/index.html'</span><span class="token punctuation">,</span>    <span class="token comment">// 指定复制出来的文件名和存放路径</span>    <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'./index.html'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 使用Node.js中的导出语法，向外导出一个webpack的配置对象</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">mode</span><span class="token operator">:</span><span class="token string">'development'</span><span class="token punctuation">,</span> <span class="token comment">// 代表webpacck运行的模式，可选值有development和production</span>    <span class="token comment">// 指定打包文件</span>    <span class="token literal-property property">entry</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">'./src/index.js'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment">// 指定生成的文件要存放的位置</span>    <span class="token literal-property property">output</span> <span class="token operator">:</span><span class="token punctuation">&#123;</span>        <span class="token comment">// 指定存放的目录</span>        <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">'dist'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token comment">// 指定生成的文件名</span>        <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'bundle.js'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 插件的数组，webpack在运行时会加载并调用这些插件</span>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>htmlPlugin<span class="token punctuation">]</span><span class="token punctuation">&#125;</span></code></pre><p><strong>配置完成后，重启服务即可直接动态刷新显示页面</strong></p><h5 id="配置devServer"><a href="#配置devServer" class="headerlink" title="配置devServer"></a>配置devServer</h5><p><strong>介绍</strong>：devserver可以让服务启动后自动打开页面</p><p><strong>配置</strong>：在webpack.config.js添加如下配置</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 首次打包成功后自动用默认浏览器打开</span><span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">open</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token comment">// 自定义端口80</span>    <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">80</span><span class="token punctuation">&#125;</span></code></pre><h5 id="Loader"><a href="#Loader" class="headerlink" title="Loader"></a>Loader</h5><p><strong>简介</strong>：在实际开发过程中, <code>webpack</code>默认只能打包处理以<code>.js</code>后缀名结尾的模块。其他非<code>.js</code>后缀名结尾的模块, <code>webpack</code>默认处理不了，需要调用<strong>loader加载器</strong>才可以正常打包，否则会报错</p><h5 id="css-loader"><a href="#css-loader" class="headerlink" title="css-loader"></a>css-loader</h5><p><strong>处理css</strong>：创建一个新的<code>css</code>样式文件，在<code>index.js</code>里导入样式</p><p><img src="/2023/06/10/vue-kuang-jia-xue-xi/image-20220803095044408.png"></p><pre class="language-css" data-language="css"><code class="language-css"><span class="token selector">li</span><span class="token punctuation">&#123;</span>    <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span></code></pre><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 使用es6导入jquery</span><span class="token keyword">import</span> $ <span class="token keyword">from</span> <span class="token string">"jquery"</span><span class="token comment">// 导入样式</span><span class="token keyword">import</span> <span class="token string">'./css/index.css'</span><span class="token comment">//定义入口</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'li:odd'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'background-color'</span><span class="token punctuation">,</span><span class="token string">'red'</span><span class="token punctuation">)</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'li:even'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'background-color'</span><span class="token punctuation">,</span><span class="token string">'cyan'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><p><strong>安装css-loader</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i style-loader@3.0.0 css-loader@5.2.6 <span class="token parameter variable">-D</span></code></pre><p><strong>在webpack配置项里新增module配置</strong>：</p><p><img src="/2023/06/10/vue-kuang-jia-xue-xi/image-20220803095219109.png"></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">module</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token comment">// 定义不同模块对应的loader</span>            <span class="token punctuation">&#123;</span> <span class="token literal-property property">test</span><span class="token operator">:</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'style-loader'</span><span class="token punctuation">,</span> <span class="token string">'css-loader'</span><span class="token punctuation">]</span> <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span></code></pre><p><strong>重新运行dev脚本可发现css样式生效！！！</strong></p><p><img src="/2023/06/10/vue-kuang-jia-xue-xi/image-20220803102134107.png"></p><p><strong>注意</strong>：</p><ol><li><p><code>webpack</code>默认只能打包处理<code>.js</code>结尾的文件，处理不了其它后缀的文件</p></li><li><p>由于代码中包含了<code>index.css</code>这个文件，因此<code>webpack</code>默认处理不了</p></li><li><p>当<code>webpack</code>发现某个文件处理不了的时候，会查找<code>webpack.config.js</code>这个配置文件，看<code>module.rules</code>数组中，是否配置了对应的<strong>loader加载器</strong></p></li><li><p><code>webpack</code>把<code>index.css</code>这个文件先转交给<strong>最后一个loader</strong>进行处理(先转交给<code>css-loader</code>)。</p></li><li><p>当<code>css-loader</code>处理完毕之后，会把处理的结果，转交给下一个<code>loader</code>(转交给<code>style-loader</code>)</p></li><li><p>当<code>style-loader</code>处理完毕之后，发现没有下一个<code>loader</code>了，于是就把处理的结果，转交给了<code>webpack</code></p></li><li><p><code>webpack</code>把<code>style-loader</code>处理的结果，合井到<code>/dist/bundle.js</code>中，最终生成打包好的文件</p></li></ol><h5 id="less-loader"><a href="#less-loader" class="headerlink" title="less-loader"></a>less-loader</h5><p><strong>什么是less</strong>：Less （Leaner Style Sheets 的缩写） 是一门向后兼容的 CSS 扩展语言</p><p><strong>中文教程</strong>：<a href="https://less.bootcss.com/">https://less.bootcss.com/</a></p><p><strong>官网</strong>：<a href="https://lesscss.org/">https://lesscss.org/</a></p><p><strong>创建less文件</strong>：</p><p><img src="/2023/06/10/vue-kuang-jia-xue-xi/image-20220803101130500.png"></p><pre class="language-less" data-language="less"><code class="language-less"><span class="token selector">html,body,ul</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token selector">li</span> <span class="token punctuation">&#123;</span>        <span class="token property">line-height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>        <span class="token property">padding-left</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p><strong>添加less-loader</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i less-loader@10.0.1 less@4.1.1 <span class="token parameter variable">-D</span></code></pre><p><strong>在webpack的配置文件添加规则</strong>：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">module</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token comment">// 定义不同模块对应的loader</span>        <span class="token punctuation">&#123;</span> <span class="token literal-property property">test</span><span class="token operator">:</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'style-loader'</span><span class="token punctuation">,</span> <span class="token string">'css-loader'</span><span class="token punctuation">]</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token comment">// 处理.less文件的loader</span>        <span class="token punctuation">&#123;</span> <span class="token literal-property property">test</span><span class="token operator">:</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'style-loader'</span><span class="token punctuation">,</span> <span class="token string">'css-loader'</span><span class="token punctuation">,</span> <span class="token string">'less-loader'</span><span class="token punctuation">]</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">&#125;</span></code></pre><p><strong>在index.js引入less.js文件</strong>：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token string">'./css/index.less'</span></code></pre><p><strong>重新运行dev脚本可发现less样式生效！！！</strong></p><p><img src="/2023/06/10/vue-kuang-jia-xue-xi/image-20220803102042551.png"></p><h5 id="url-loader"><a href="#url-loader" class="headerlink" title="url-loader"></a>url-loader</h5><p><strong>关于base64图片</strong>：网页中可以直接调用图片的base64码防止过多请求</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>base64码<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre><p><strong>注意</strong>：转码以后文件变大，因此不建议把大图片转换成base64</p><p><strong>在网页中添加图片</strong>：</p><p><strong>在index.html添加图片标签</strong>：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre><p><strong>在index.js引入图片</strong>：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 导入图片</span><span class="token keyword">import</span> logo <span class="token keyword">from</span> <span class="token string">'./image/logo.jpg'</span><span class="token comment">// 给img标签的src动态赋值</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.box'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'src'</span><span class="token punctuation">,</span>logo<span class="token punctuation">)</span></code></pre><p><strong>安装</strong>：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">npm i url<span class="token operator">-</span>loader@<span class="token number">4.1</span><span class="token number">.1</span> file<span class="token operator">-</span>loader@<span class="token number">6.2</span><span class="token number">.0</span> <span class="token operator">-</span><span class="token constant">D</span></code></pre><p><strong>在webpack配置文件添加规则</strong>：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">    <span class="token literal-property property">module</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token comment">// 定义不同模块对应的loader</span>            <span class="token punctuation">&#123;</span> <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'style-loader'</span><span class="token punctuation">,</span> <span class="token string">'css-loader'</span><span class="token punctuation">]</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token comment">// 处理.less文件的loader</span>            <span class="token punctuation">&#123;</span> <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.less$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'style-loader'</span><span class="token punctuation">,</span> <span class="token string">'css-loader'</span><span class="token punctuation">,</span> <span class="token string">'less-loader'</span><span class="token punctuation">]</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token comment">// 处理图片文件的loader</span>            <span class="token comment">// 如果需要调用的loader只有一个,则只传递一个字符串也行,否则需要指定数组</span>            <span class="token punctuation">&#123;</span> <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.jpg|.png|.gif$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token string">'url-loader'</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p><strong>重新运行dev脚本</strong></p><p><img src="/2023/06/10/vue-kuang-jia-xue-xi/image-20220803111558630.png"></p><p><strong>注意</strong>：这里图片被转换成了base64的格式</p><p><strong>注意</strong>：</p><ol><li><p>在webpack里，一切皆模块，都转化成js运行</p></li><li><p>如果某个模块中，使用from接收到的成员为undefined, 则没必要进行接收。一般<code>css</code>样式不需要接收，只需要加载。这种导入最终会生成一个<code>bundle.js</code>，这个<code>bundle.js</code>包含转化后的<code>css</code>样式</p></li></ol><p><strong>添加参数指定图片转换临界值</strong>：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">&#123;</span> <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.jpg|.png|.gif$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token string">'url-loader?limit=1024'</span> <span class="token punctuation">&#125;</span></code></pre><p>这里表示大于1024(1kb)后不会转换成base64图片，小于或等于时会被转换</p><h5 id="babel-loader"><a href="#babel-loader" class="headerlink" title="babel-loader"></a>babel-loader</h5><p><strong>简介</strong>：webpack只能打包处理一部分高级的 JavaScript语法。对于那些webpack无法处理的高级js语法，需要借助于babel-loader进行打包处理。</p><p><strong>安装</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i babel-loader@8.2.2 @babel/core@7.14.6 @babel/plugin-proposal-decorators@7.14.5 <span class="token parameter variable">-D</span></code></pre><p><strong>注意</strong>：<code>babel/plugin-proposal-decorators</code>是插件的插件</p><p><strong>使用</strong>：在项目的根目录下创建名为<code>babel.config.js</code>的配置文件，定义Babel的配置项如下：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//声明 babel 可用插件</span>    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">"@babel/plugin-proposal-decorators"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">legacy</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span></code></pre><p><strong>在webpack配置项新增</strong>：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">&#123;</span> <span class="token literal-property property">test</span><span class="token operator">:</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token string">'babel-loader'</span><span class="token punctuation">,</span> <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span> <span class="token punctuation">&#125;</span></code></pre><p><strong>重新运行后可以看到控制台输出的</strong>：<code>Person info.</code></p><h4 id="配置打包命令"><a href="#配置打包命令" class="headerlink" title="配置打包命令"></a>配置打包命令</h4><p><strong>简介</strong>：项目完成后需要打包成html,css,js 三大件给后端发布。</p><h5 id="添加命令"><a href="#添加命令" class="headerlink" title="添加命令"></a>添加命令</h5><p><strong>这时需在<code>package.json</code>里添加一条<code>nulid</code>命令</strong>：</p><pre class="language-json" data-language="json"><code class="language-json"><span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"dev"</span><span class="token operator">:</span> <span class="token string">"webpack serve"</span><span class="token punctuation">,</span>    <span class="token property">"build"</span><span class="token operator">:</span> <span class="token string">"webpack --mode production"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></code></pre><p><strong>注意</strong>：这里修改了打包模式为压缩模式，<code>--mode production</code>的优先级比配置文件高，会优先执行。平时使用的是开发模式：</p><p><img src="/2023/06/10/vue-kuang-jia-xue-xi/image-20221016201447844.png"></p><h5 id="安装clean-webpack-plugin"><a href="#安装clean-webpack-plugin" class="headerlink" title="安装clean-webpack-plugin"></a>安装clean-webpack-plugin</h5><p><strong>简介</strong>：每次生成文件时，旧文件会有残留，需要手动删除很麻烦。安装<code>clean-webpack-plugin</code>来在每次生成时自动清除旧文件</p><p><strong>npm文档</strong>：<a href="https://www.npmjs.com/package/clean-webpack-plugin">https://www.npmjs.com/package/clean-webpack-plugin</a></p><p><strong>安装</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save-dev clean-webpack-plugin</code></pre><p><strong>添加插件</strong>：</p><p>在<code>webpack.config.js</code>中的plugin导入插件：</p><p><img src="/2023/06/10/vue-kuang-jia-xue-xi/image-20221016204838658.png"></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">new</span> <span class="token class-name">CleanWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h5 id="将js打包放进文件夹"><a href="#将js打包放进文件夹" class="headerlink" title="将js打包放进文件夹"></a>将js打包放进文件夹</h5><p><strong>在webpack.js修改output内容如下</strong>：</p><p><img src="/2023/06/10/vue-kuang-jia-xue-xi/image-20221016202542168.png"></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'js/bundle.js'</span></code></pre><h5 id="将图片放进文件夹"><a href="#将图片放进文件夹" class="headerlink" title="将图片放进文件夹"></a>将图片放进文件夹</h5><p><strong>在webpack.js修改module内容如下</strong>：</p><p><img src="/2023/06/10/vue-kuang-jia-xue-xi/image-20221016203024672.png"></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">&#123;</span> <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.jpg|.png|.gif$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token string">'url-loader?limit=1024&amp;outputPath=images'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></code></pre><p><strong>在cmd运行即可</strong>：</p><p><img src="/2023/06/10/vue-kuang-jia-xue-xi/image-20221016201338433.png"></p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> run bulid</code></pre><h4 id="配置Source-Map"><a href="#配置Source-Map" class="headerlink" title="配置Source Map"></a>配置Source Map</h4><p><strong>简介</strong>：<code>Source Map</code>是一个信息文件，里面存储着压缩混淆前后代码所对应的位置信息。开发环境下默认生成的<code>Source Map</code>记录的是混淆后代码的位置。</p><p><strong>在<code>webpack.config.js</code>中的<code>module.exports</code>添加如下配置</strong>：</p><p><img src="/2023/06/10/vue-kuang-jia-xue-xi/image-20221016210810490.png"></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">devtool</span><span class="token operator">:</span> <span class="token string">'eval-source-map'</span><span class="token punctuation">,</span> <span class="token comment">//开发环境</span></code></pre><p><strong>重启即可</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> run dev</code></pre><p><strong>注意</strong>：在生产环境下，如果webpack配置文件中注释了devtool选项，则最终生成的文件中不包含source map，这能够防止源代码通过source map的形式暴露</p><p><strong>生产环境下</strong>：将devtool内容改为下列值，或者直接关闭</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">devtool</span><span class="token operator">:</span> <span class="token string">'nosources-source-map'</span><span class="token punctuation">,</span> <span class="token comment">//只定位，不显示源码</span></code></pre><p><strong>生产环境下显示报错源码</strong>：不建议</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">devtool</span><span class="token operator">:</span> <span class="token string">'source-map'</span><span class="token punctuation">,</span></code></pre><h2 id="JS框架"><a href="#JS框架" class="headerlink" title="JS框架"></a>JS框架</h2><p><strong>现在流行的JS框架</strong>：<code>ANGULAR</code>，<code>REACT</code>，<code>VUE</code></p><p><strong>历史</strong>：多亏了<code>Javascript</code>，在过去十年里，我们的网页变得更强大与动态化。我们已经把很多传统的服务端代码放到了浏览器中，这样就产生了成千上万行的<code>Javascript</code>代码。</p><p>它们连接了各式各样的<code>HTML</code>和<code>CSS</code>文件，但是他们缺乏正规的组织形式。这也是为什么越来越多的开发者使用<code>Javascript</code>框架的原因。</p><p><strong>js编写的类型</strong>：声明式，命令式</p><h2 id="Vue-js"><a href="#Vue-js" class="headerlink" title="Vue.js"></a>Vue.js</h2><p><strong>中文官网</strong>：<a href="https://cn.vuejs.org/">https://cn.vuejs.org/</a></p><p><strong>英文官网</strong>：<a href="https://vuejs.org/">https://vuejs.org/</a></p><p><strong>作者</strong>：尤雨溪(一位华裔前Google工程师)</p><p><strong>作用</strong>：动态<strong>构建用户界面</strong>(vue是响应式的)</p><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><h4 id="vue的特点"><a href="#vue的特点" class="headerlink" title="vue的特点"></a>vue的特点</h4><ol><li>遵循<strong>MVVM模式</strong></li><li>编码简洁，体积小，运行效率高，适合移动&#x2F;PC端开发</li><li>它本身只关注UI，可以轻松引入<strong>vue插件</strong>（依赖vue）或其他<strong>第三方库</strong>（不依赖vue）开发项目</li></ol><p><strong>与其他前端JS框架的关联</strong></p><ol><li>借鉴<code>angular</code>的<strong>模板</strong>和<strong>数据绑定</strong>技术</li><li>借用<code>react</code>的<strong>组件化</strong>和<strong>虚拟化DOM</strong>技术</li></ol><h4 id="vue扩展插件"><a href="#vue扩展插件" class="headerlink" title="vue扩展插件"></a>vue扩展插件</h4><p><strong>vue-cli</strong>：vue脚手架</p><p>**vue-resource(axios)**：ajax请求</p><p><strong>vue-router</strong>：路由</p><p><strong>vuex</strong>：状态管理</p><p><strong>vue-lazyload</strong>：图片懒加载</p><p><strong>vue-scroller</strong>：页面滑动相关</p><p><strong>mint-ui</strong>：基于vue的UI组件库(移动端)</p><p><strong>element-ui</strong>：基于vue的UI组件库(PC端)</p><p><strong>vue.js下载</strong>：<a href="https://cn.vuejs.org/v2/guide/installation.html#Vue-Devtools">https://cn.vuejs.org/v2/guide/installation.html#Vue-Devtools</a></p><h4 id="MVVM思想"><a href="#MVVM思想" class="headerlink" title="MVVM思想"></a>MVVM思想</h4><p><img src="/2023/06/10/vue-kuang-jia-xue-xi/image-20220313154554828.png"></p><p><strong>介绍</strong>：前端的视图层，被mvvm思想划成了三部分，也就是每个页面都被分成了三部分</p><p><strong>M(Model)</strong> ：模型，数据对象(data)</p><p><strong>V(View)</strong> ：视图，模板页面(DOM)</p><p>**VM(ViewModel)**： 视图模型(Vue实例)。是调度者，用来联系M层和V层，提供DOM监听和数据绑定功能</p><p>MVVM相比于MVC提供了数据的<strong>双向绑定机制</strong></p><h4 id="一个hello-world"><a href="#一个hello-world" class="headerlink" title="一个hello world"></a>一个hello world</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 希望Vue控制div --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123; username &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 导入Vue --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">// 创建vue实例对象</span>        <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token comment">// el 指定选择器</span>            <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>            <span class="token comment">// data 对象是要渲染的数据</span>            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">'zhangsan'</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="vue的指令与过滤器"><a href="#vue的指令与过滤器" class="headerlink" title="vue的指令与过滤器"></a>vue的指令与过滤器</h3><p><strong>简介</strong>：指令(Directives) 是vue为开发者提供的模板语法，用于辅助开发者渲染页面的基本结构。</p><p><strong>注意</strong>：使用指令之前一定要用el控制范围</p><h4 id="内容渲染指令"><a href="#内容渲染指令" class="headerlink" title="内容渲染指令"></a>内容渲染指令</h4><p><strong>简介</strong>：内容渲染指令用来辅助开发者渲染DOM元素的文本内容</p><p><strong>注意</strong>：</p><ol><li>v-test和<code>&#123;&#123; &#125;&#125;</code>只能渲染纯文本，要渲染html标签需要v-html</li><li>插值表达式只能用在元素的内容节点中，不能用在元素的属性节点中！</li></ol><h5 id="v-text"><a href="#v-text" class="headerlink" title="v-text"></a>v-text</h5><p><strong>简介</strong>：将v-text指定的内容<strong>覆盖</strong>显示</p><p><strong>注意</strong>：在标签被控制的情况下</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><h5 id="插值表达式语法"><a href="#插值表达式语法" class="headerlink" title="插值表达式语法"></a>插值表达式语法</h5><p><strong>简介</strong>：显示双括号里指定的内容，开发用的最多</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>姓名：&#123;&#123;username&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>性别：&#123;&#123;gender&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><p><strong>插值表达式还可以使用js语法</strong>：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>&#123;&#123; tips &#125;&#125; 反转的结果是：&#123;&#123;tips.split('').reverse().join('')&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><h5 id="v-html"><a href="#v-html" class="headerlink" title="v-html"></a>v-html</h5><p><strong>简介</strong>：覆盖渲染标签文本</p><p><strong>在data里添加</strong>：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">info</span><span class="token operator">:</span> <span class="token string">'&lt;h4 style="color:red; font-weight:bold">欢迎大家学习vue&lt;/h4>'</span></code></pre><p><strong>在html数据</strong>：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-html</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>info<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><h4 id="属性绑定指令"><a href="#属性绑定指令" class="headerlink" title="属性绑定指令"></a>属性绑定指令</h4><p><strong>简介</strong>：给html标签属性动态绑定值</p><h5 id="v-bind"><a href="#v-bind" class="headerlink" title="v-bind"></a>v-bind</h5><p><strong>data数据</strong>：</p><pre class="language-none"><code class="language-none">tips: &#39;请输入用户名&#39;,</code></pre><p><strong>html数据</strong>：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">v-bind:</span>placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tips<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>photo<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>150px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><p>这里的<code>v-bind</code>可以简写成<code>:</code></p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">:placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tips<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>photo<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>150px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><p><strong>v-bind可以进行动态拼接</strong>：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">:title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">'</span>box' + index<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>这是一个div<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><h4 id="事件绑定指令"><a href="#事件绑定指令" class="headerlink" title="事件绑定指令"></a>事件绑定指令</h4><h5 id="v-on"><a href="#v-on" class="headerlink" title="v-on"></a>v-on</h5><p><strong>简介</strong>：vue提供了v-on事件绑定指令，用来辅助程序员为DOM元素绑定事件监听</p><p><strong>注意</strong>：</p><p><strong>原生DOM对象有</strong>：<code>onclick</code>, <code>oninput</code>, o<code>nkeyup</code>等</p><p><strong>对应vue事件绑定形式为</strong>：<code>v-on:click</code>, <code>v-on:input</code>, <code>v-on: keyup</code></p><p><strong>对应简写为</strong>：<code>@click</code>, <code>@input</code>, <code>@keyup</code></p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>count的值是:&#123;&#123;count&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>add<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>+1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sub<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>-1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">// 创建vue实例对象</span>        <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token comment">// el 指定选择器</span>            <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>            <span class="token comment">// data 对象是要渲染的数据</span>            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>               <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token comment">// methods的作用: 定义事件的处理函数</span>            <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token function-variable function">add</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token comment">//可以简写为add ()</span>                    <span class="token comment">// console.log(vm === this)这里可以证实vm和this是相等的</span>                    <span class="token comment">// vm.count += 1</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">+=</span> <span class="token number">1</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token function">sub</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">-=</span> <span class="token number">1</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p><strong>这里的函数需要传参时</strong>：</p><p><strong>html数据</strong>：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>add(2)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>+1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span> <span class="token comment">&lt;!-- 这里的2可以作为参数传入下面funtion(n)函数 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sub<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>-1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span></code></pre><p><strong>这里的v-on可以简写</strong>：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>add(2)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>+1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span> </code></pre><p><strong>methods数据</strong>：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function-variable function">add</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token comment">//可以简写为add ()</span>                    <span class="token comment">// console.log(vm === this) 这里可以证实vm和this是相等的</span>                    <span class="token comment">// vm.count += 1</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">+=</span> n                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></code></pre><p><strong>这里的add: function (n)可以简写</strong>：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">+=</span> n<span class="token punctuation">&#125;</span></code></pre><h5 id="event事件对象"><a href="#event事件对象" class="headerlink" title="$event事件对象"></a>$event事件对象</h5><p><strong>简介</strong>：当绑定事件时，要传参的同时还要在发生事件后修改DOM元素时，要用到</p><p><strong>下面是一个根据count是否为偶数变色的样例</strong>：</p><p><strong>html数据</strong>：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>count的值是:&#123;&#123;count&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>add(1, $event)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>+1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sub<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>-1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><p><strong>methods数据</strong>：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token function">add</span> <span class="token punctuation">(</span><span class="token parameter">n<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>             <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">+=</span> n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">//偶数</span>            e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token string">'red'</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//奇数</span>            e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token string">''</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></code></pre><h4 id="事件修饰符"><a href="#事件修饰符" class="headerlink" title="事件修饰符"></a>事件修饰符</h4><p><strong>简介</strong>：vue提供了事件修饰符的概念来辅助程序员更方便的对事件触发进行控制。</p><p><strong>常见的5个事件修饰符</strong>：</p><table><thead><tr><th align="center">事件修饰符</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">.prevent</td><td align="center">阻止默认行为(例如：阻止a连接的跳转、表单的提交)</td></tr><tr><td align="center">.stop</td><td align="center">阻止事件冒泡</td></tr><tr><td align="center">.capture</td><td align="center">以捕获模式触发当前的事件处理函数</td></tr><tr><td align="center">.once</td><td align="center">绑定事件只触发1次</td></tr><tr><td align="center">.self</td><td align="center">只有在event.target是当前元素自身时，才触发事件处理函数</td></tr></tbody></table><p><strong>两个个简单的例子</strong>：</p><p><strong>阻止a链接跳转</strong>：</p><p><strong>html数据</strong>：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.baidu.com<span class="token punctuation">"</span></span> <span class="token attr-name">@click.prevent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>show<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>跳转到百度首页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><p><strong>methods数据</strong>：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'点击了 a 链接'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><p><strong>阻止冒泡</strong>：阻止触发父级事件</p><p><strong>html数据</strong>：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.baidu.com<span class="token punctuation">"</span></span> <span class="token attr-name">@click.prevent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>show<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>跳转到百度首页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">height</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> orange<span class="token punctuation">;</span><span class="token property">padding-left</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token property">line-height</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>divHandler<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click.stop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btnHandler<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><p><strong>methods数据</strong>：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'点击了 a 链接'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function">divHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'divHandler'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function">btnHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'btnHandler'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><h4 id="按键修饰符-keyup-xxx"><a href="#按键修饰符-keyup-xxx" class="headerlink" title="按键修饰符(@keyup.xxx)"></a>按键修饰符(@keyup.xxx)</h4><p><strong>简介</strong>：在监听键盘事件时，我们经常需要判断详细的按键。此时可以为键盘相关的事件添加按键修饰符</p><p><strong>一个示例</strong>：判断按下esc时清空数据，按下enter触发方法</p><p><strong>html数据</strong>：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">@keyup.esc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clearInput<span class="token punctuation">"</span></span> <span class="token attr-name">@keyup.enter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>commitAjax<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><p><strong>methods数据</strong>：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">clearInput</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"触发了clearInput方法"</span><span class="token punctuation">)</span>    <span class="token comment">// value可以捕获输入框的数据</span>    e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function">commitAjax</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"出发了commitAjax方法"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></code></pre><h4 id="双向绑定指令-v-model"><a href="#双向绑定指令-v-model" class="headerlink" title="双向绑定指令(v-model)"></a>双向绑定指令(v-model)</h4><p><strong>简介</strong>：vue提供了<code>v-model</code>双向数据绑定指令，用来辅助开发者在不操作DOM的情况下，<strong>快速获取表单数据</strong></p><p><strong>区别</strong>：<code>v-bind</code>只能<strong>取数据</strong>，<code>v-model</code><strong>能取能改</strong></p><p><strong>注意</strong>：只有表单元素使用<code>v-model</code>才有意义，或者说只要有value属性的标签就可以使用</p><h5 id="v-model基本使用"><a href="#v-model基本使用" class="headerlink" title="v-model基本使用"></a>v-model基本使用</h5><p>一个对比<strong>单项绑定</strong>(v-bind)和<strong>双向绑定</strong>的例子(v-model)</p><p><strong>html数据</strong>：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>用户的名字是: &#123;&#123;username&#125;&#125; <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    这是一个v-model:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>    这是一个v-band:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>city<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>请选择城市<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>北京<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>上海<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>广州<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><p><strong>methods数据</strong>：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token comment">// el 指定选择器</span>    <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>    <span class="token comment">// data 对象是要渲染的数据</span>    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">username</span><span class="token operator">:</span><span class="token string">'zhangsan'</span><span class="token punctuation">,</span>        <span class="token literal-property property">city</span><span class="token operator">:</span><span class="token string">''</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><h5 id="v-model指令的修饰符"><a href="#v-model指令的修饰符" class="headerlink" title="v-model指令的修饰符"></a>v-model指令的修饰符</h5><table><thead><tr><th align="center">修饰符</th><th align="center">作用</th><th align="center">示例</th></tr></thead><tbody><tr><td align="center">.number</td><td align="center">自动将用户的输入值转化为数值类型</td><td align="center"><code>&lt;input v-model.number=&quot;age&quot;/&gt;</code></td></tr><tr><td align="center">.trim</td><td align="center">自动过滤用户输入的首尾空白字符</td><td align="center"><code>&lt;input v-model.trim=&quot;msg&quot; /&gt;</code></td></tr><tr><td align="center">.lazy</td><td align="center">在”change”时而非”input”时更新</td><td align="center"><code>&lt;input v-model.lazy=&quot;msg&quot; /&gt;</code></td></tr></tbody></table><p><strong>一个使用上述v-model修饰符的例子</strong>：</p><p><strong>html数据</strong>：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model.number</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>n1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> + <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type.number</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>n2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> = <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span> &#123;&#123; n1 + n2 &#125;&#125; <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model.trim</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showName<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>获取用户名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model.lazy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><p><strong>methods数据</strong>：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token comment">// el 指定选择器</span>    <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>    <span class="token comment">// data 对象是要渲染的数据</span>    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">username</span><span class="token operator">:</span><span class="token string">'zhangsan'</span><span class="token punctuation">,</span>        <span class="token literal-property property">n1</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>        <span class="token literal-property property">n2</span><span class="token operator">:</span> <span class="token number">2</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token function">showName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">用户名是: "</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>username<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">"</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><h4 id="条件渲染指令"><a href="#条件渲染指令" class="headerlink" title="条件渲染指令"></a>条件渲染指令</h4><p><strong>简介</strong>：条件渲染指令用来辅助开发者按需控制DOM的显示与隐藏。条件渲染指令有俩个，分别是<code>v-if</code>和<code>v-show</code></p><h5 id="v-if和v-show"><a href="#v-if和v-show" class="headerlink" title="v-if和v-show"></a>v-if和v-show</h5><ol><li><code>v-show</code>原理：动态为元素添加或移除<code>display:none</code>样式来实现元素的显示和隐藏(初始状态为<code>true</code>时性能好)</li><li><code>v-if</code>原理：每次动态创建或移除元素(初始状态为<code>false</code>时性能好)</li></ol><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!-- 希望Vue控制div --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flag<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>这是被v-if控制的元素<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-show</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flag<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>这是被v-show控制的元素<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 导入Vue --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span>    // 创建vue实例对象    const vm = new Vue(&#123;        // el 指定选择器        el: '#app',        // data 对象是要渲染的数据        data: &#123;            // 如果flag为true()展示控制的元素            flag: true        &#125;,    &#125;)</code></pre><h5 id="v-if和v-else"><a href="#v-if和v-else" class="headerlink" title="v-if和v-else"></a>v-if和v-else</h5><p><strong>简介</strong>：和其他语言一样，<code>vue</code>也有<code>if</code>和<code>else</code></p><p>可以通过<code>v-if</code>和<code>v-else-if</code>来进行：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flag<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>这是被v-if控制的元素<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-show</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flag<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>这是被v-show控制的元素<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>type === 'A'<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>优秀<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-else-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>type === 'B'<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>良好<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-else-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>type === 'C'<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>一般<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-else</span><span class="token punctuation">></span></span>差<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 导入Vue --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 创建vue实例对象</span>    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token comment">// el 指定选择器</span>        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>        <span class="token comment">// data 对象是要渲染的数据</span>        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 如果flag为true()展示控制的元素</span>            <span class="token literal-property property">flag</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'A'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h5 id="v-for列表渲染"><a href="#v-for列表渲染" class="headerlink" title="v-for列表渲染"></a>v-for列表渲染</h5><p><strong>简介</strong>：vue提供了v-for 列表渲染指令，用来辅助开发者基于一个数组来<strong>循环渲染一个列表结构</strong></p><p><strong>例子</strong>：一个列表</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>table table-bordered table-hover table-striped<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>索引<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>ID<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>姓名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!-- 这里的item和index的名字可以随意起，index为索引值,:title为标签显示 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(item, index) in list<span class="token punctuation">"</span></span> <span class="token attr-name">:title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.name + index<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>&#123;&#123; index &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>&#123;&#123; item.id &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>&#123;&#123; item.name &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 导入Vue --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 创建vue实例对象</span>    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token comment">// el 指定选择器</span>        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>        <span class="token comment">// data 对象是要渲染的数据</span>        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">list</span><span class="token operator">:</span><span class="token punctuation">[</span>                <span class="token punctuation">&#123;</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'张三'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token punctuation">&#123;</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'李四'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token punctuation">&#123;</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'王五'</span><span class="token punctuation">&#125;</span>            <span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p><strong>v-for中key的使用</strong>：</p><ol><li>key的值只能是<strong>字符串</strong>或<strong>数字</strong>类型</li><li>key的值<strong>必须具有唯一性</strong>(即: key的值不能重复)</li><li>建议把<strong>数据项id属性的值</strong>作为key的值(因为id属性的值具有唯一-性)</li><li>使用<strong>index的值</strong>当作key的值<strong>没有任何意义</strong>(因为index的值不具有唯一性)</li><li>建议使用v-for指令<strong>时一定要指定key的值</strong>(既提升性能、又防止列表状态紊乱)</li></ol><p><strong>一个利用key的例子</strong>：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!-- 在页面中声明一个将要被 vue 所控制的 DOM 区域 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 添加用户的区域 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>addNewUser<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>添加<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 用户列表区域 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(user, index) in userlist<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            姓名：&#123;&#123;user.name&#125;&#125;        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./lib/vue-2.6.12.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 用户列表</span>            <span class="token literal-property property">userlist</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token punctuation">&#123;</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'zs'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token punctuation">&#123;</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'ls'</span> <span class="token punctuation">&#125;</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token comment">// 输入的用户名</span>            <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>            <span class="token comment">// 下一个可用的 id 值</span>            <span class="token literal-property property">nextId</span><span class="token operator">:</span> <span class="token number">3</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 点击了添加按钮</span>            <span class="token function">addNewUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>userlist<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>nextId<span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">''</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>nextId<span class="token operator">++</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h4 id="一个简单的品牌列表案例"><a href="#一个简单的品牌列表案例" class="headerlink" title="一个简单的品牌列表案例"></a>一个简单的品牌列表案例</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>品牌列表案例<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./lib/bootstrap.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./css/brandlist.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 卡片区域 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card-header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        添加品牌      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card-body<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 添加品牌的表单区域 --></span>        <span class="token comment">&lt;!-- form 表单元素有 submit 事件 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">@submit.prevent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>add<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-row align-items-center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-auto<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input-group mb-2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input-group-prepend<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input-group-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>品牌名称<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入品牌名称<span class="token punctuation">"</span></span> <span class="token attr-name">v-model.trim</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>brand<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-auto<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-primary mb-2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>添加<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 表格区域 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>table table-bordered table-hover table-striped<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>#<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>品牌名称<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>状态<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>创建时间<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>操作<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item in list<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.id<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>&#123;&#123; item.id &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>&#123;&#123; item.name &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>custom-control custom-switch<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token comment">&lt;!-- 使用 v-model 实现双向数据绑定 --></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>custom-control-input<span class="token punctuation">"</span></span> <span class="token attr-name">:id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">'</span>cb' + item.id<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.status<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token comment">&lt;!-- 使用 v-if 结合 v-else 实现按需渲染 --></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>custom-control-label<span class="token punctuation">"</span></span> <span class="token attr-name">:for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">'</span>cb' + item.id<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.status<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>已启用<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>custom-control-label<span class="token punctuation">"</span></span> <span class="token attr-name">:for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">'</span>cb' + item.id<span class="token punctuation">"</span></span> <span class="token attr-name">v-else</span><span class="token punctuation">></span></span>已禁用<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>&#123;&#123; item.time | dateFormat &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>remove(item.id)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>删除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 只要导入了 dayjs 的库文件，在 window 全局，就可以使用 dayjs() 方法了 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./lib/dayjs.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./lib/vue-2.6.12.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 声明格式化时间的全局过滤器</span>    Vue<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token string">'dateFormat'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">time</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 1. 对 time 进行格式化处理，得到 YYYY-MM-DD HH:mm:ss</span>      <span class="token comment">// 2. 把 格式化的结果，return 出去</span>      <span class="token comment">// 直接调用 dayjs() 得到的是当前时间</span>      <span class="token comment">// dayjs(给定的日期时间) 得到指定的日期</span>      <span class="token keyword">const</span> dtStr <span class="token operator">=</span> <span class="token function">dayjs</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">'YYYY-MM-DD HH:mm:ss'</span><span class="token punctuation">)</span>      <span class="token keyword">return</span> dtStr    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>      <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 用户输入的品牌名称</span>        <span class="token literal-property property">brand</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token comment">// nextId 是下一个，可用的 id</span>        <span class="token literal-property property">nextId</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>        <span class="token comment">// 品牌的列表数据</span>        <span class="token literal-property property">list</span><span class="token operator">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">&#123;</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'宝马'</span><span class="token punctuation">,</span> <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">time</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token punctuation">&#123;</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'奔驰'</span><span class="token punctuation">,</span> <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">time</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token punctuation">&#123;</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'奥迪'</span><span class="token punctuation">,</span> <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">time</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 点击链接，删除对应的品牌信息</span>        <span class="token function">remove</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>list <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> item<span class="token punctuation">.</span>id <span class="token operator">!==</span> id<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token comment">// 阻止表单的默认提交行为之后，触发 add 方法</span>        <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// 如果判断到 brand 的值为空字符串，则 return 出去</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>brand <span class="token operator">===</span> <span class="token string">''</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'必须填写品牌名称！'</span><span class="token punctuation">)</span>          <span class="token comment">// 如果没有被 return 出去，应该执行添加的逻辑</span>          <span class="token comment">// 1. 先把要添加的品牌对象，整理出来</span>          <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>nextId<span class="token punctuation">,</span>            <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>brand<span class="token punctuation">,</span>            <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            <span class="token literal-property property">time</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token punctuation">&#125;</span>          <span class="token comment">// 2. 往 this.list 数组中 push 步骤 1 中得到的对象</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>          <span class="token comment">// 3. 清空 this.brand；让 this.nextId 自增 +1</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>brand <span class="token operator">=</span> <span class="token string">''</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>nextId<span class="token operator">++</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h3><p><strong>简介</strong>：过滤器(Filters) 是vue为开发者提供的功能，常用于文本的格式化。过滤器可以用在两个地方——插值表达式和v-bind属性绑定。</p><p><strong>注意</strong>：</p><ol><li>过滤器是可以被连续调用的，它的参数是上一个函数的结果</li><li>过滤器可以传参</li><li>过滤器在vue3中被移除</li></ol><p>过滤器应该被添加在JavaScript表达式的尾部，由“管道符”进行调用，示例代码如下：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!-- 在双花括号中通过"管道符"调用 capitalize 过滤器，对message 的值进行格式化--></span><span class="token comment">&lt;!--注意：这里调用过滤器展示是返回值，不调用展示的是message，相当于转译输出--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>&#123;&#123; message | capitalize &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--在v-bind 中通过“管道符"调用formatId过滤器，对rawId 的值进行格式化--></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rawId | formatId<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>message 的值是：&#123;&#123; message | capi &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./lib/vue-2.6.12.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>      <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'hello vue.js'</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token comment">// 过滤器函数，必须被定义到 filters 节点之下</span>      <span class="token comment">// 过滤器本质上是函数</span>      <span class="token literal-property property">filters</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 注意：过滤器函数形参中的 val，永远都是“管道符”前面的那个值</span>        <span class="token function">capi</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// 字符串有 charAt 方法，这个方法接收索引值，表示从字符串中把索引对应的字符，获取出来</span>          <span class="token comment">// val.charAt(0)</span>          <span class="token keyword">const</span> first <span class="token operator">=</span> val<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token comment">// 字符串的 slice 方法，可以截取字符串，从指定索引往后截取</span>          <span class="token keyword">const</span> other <span class="token operator">=</span> val<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>          <span class="token comment">// 强调：过滤器中，一定要有一个返回值</span>          <span class="token keyword">return</span> first <span class="token operator">+</span> other        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><h5 id="私有过滤器和全局过滤器"><a href="#私有过滤器和全局过滤器" class="headerlink" title="私有过滤器和全局过滤器"></a>私有过滤器和全局过滤器</h5><p><strong>简介</strong>：在 filters 节点下定义的过滤器，称为“<strong>私有过滤器</strong>”，因为它只能在当前 vm 实例所控制的 el 区域内使用。 如果希望在多个 vue 实例之间共享过滤器，则可以按照如下的格式定义全局过滤器：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//全局过滤器-独立于每个Vm实例之外</span><span class="token comment">// Vue. filter() 方法接收两个参数:</span><span class="token comment">//第1个参数，是全局过滤器的"名字”</span><span class="token comment">//第2个参数，是全局过滤器的"处理函数”</span>Vue<span class="token punctuation">.</span> <span class="token function">filter</span><span class="token punctuation">(</span> <span class="token string">'capitalize'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> str <span class="token punctuation">.</span> <span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span> <span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> str <span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><p><strong>注意</strong>：在实际操作过程中大多数使用全局过滤器，如果私有过滤器和全局过滤器名字冲突，按照就近原则会先调用私有过滤器，下面的例子以波浪线做区分谁调用的是全局过滤器：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>message 的值是：&#123;&#123; message | capi &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>message 的值是：&#123;&#123; message | capi &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./lib/vue-2.6.12.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 使用 Vue.filter() 定义全局过滤器</span>    Vue<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token string">'capi'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> first <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token keyword">const</span> other <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>      <span class="token keyword">return</span> first <span class="token operator">+</span> other <span class="token operator">+</span> <span class="token string">'~~~'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>      <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'hello vue.js'</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token comment">// 过滤器函数，必须被定义到 filters 节点之下</span>      <span class="token comment">// 过滤器本质上是函数</span>      <span class="token literal-property property">filters</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 注意：过滤器函数形参中的 val，永远都是“管道符”前面的那个值</span>        <span class="token function">capi</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// 字符串有 charAt 方法，这个方法接收索引值，表示从字符串中把索引对应的字符，获取出来</span>          <span class="token comment">// val.charAt(0)</span>          <span class="token keyword">const</span> first <span class="token operator">=</span> val<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token comment">// 字符串的 slice 方法，可以截取字符串，从指定索引往后截取</span>          <span class="token keyword">const</span> other <span class="token operator">=</span> val<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>          <span class="token comment">// 强调：过滤器中，一定要有一个返回值</span>          <span class="token keyword">return</span> first <span class="token operator">+</span> other        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// ----------------------------------</span>    <span class="token keyword">const</span> vm2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#app2'</span><span class="token punctuation">,</span>      <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'heima'</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><h3 id="侦听器"><a href="#侦听器" class="headerlink" title="侦听器"></a>侦听器</h3><h5 id="watch侦听器"><a href="#watch侦听器" class="headerlink" title="watch侦听器"></a>watch侦听器</h5><p><strong>简介</strong>：watch 侦听器允许开发者监视数据的变化，从而针对数据的变化做特定的操作</p><p><strong>语法格式如下</strong>：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> Vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">el</span> <span class="token operator">:</span><span class="token string">' #app'</span> <span class="token punctuation">,</span><span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">username</span><span class="token operator">:</span><span class="token punctuation">&#125;</span>，<span class="token literal-property property">watch</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token comment">//监听username 值的变化</span><span class="token comment">// newVal 是"变化后的新值”，oldVal 是"变化之前的旧值”</span><span class="token function">username</span><span class="token punctuation">(</span><span class="token parameter">newVal<span class="token punctuation">,</span> oldVal</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>console<span class="token punctuation">.</span> <span class="token function">log</span><span class="token punctuation">(</span>newVal<span class="token punctuation">,</span> oldVal<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><p><strong>例子</strong>：侦听用户名是否被占用</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./lib/vue-2.6.12.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./lib/jquery-v3.6.0.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>      <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">'admin'</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token comment">// 所有的侦听器，都应该被定义到 watch 节点下</span>      <span class="token literal-property property">watch</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 侦听器本质上是一个函数，要监视哪个数据的变化，就把数据名作为方法名即可</span>        <span class="token comment">// 新值在前，旧值在后</span>        <span class="token function">username</span><span class="token punctuation">(</span><span class="token parameter">newVal</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 防止用户名为空的请求发送</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>newVal <span class="token operator">===</span> <span class="token string">''</span><span class="token punctuation">)</span> <span class="token keyword">return</span>          <span class="token comment">// 1. 调用 jQuery 中的 Ajax 发起 get 请求，判断 newVal 是否被占用！！！</span>          $<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'https://www.escook.cn/api/finduser/'</span> <span class="token operator">+</span> newVal<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><p><strong>应用场景</strong>：监视某个数值然后做一件事</p><h5 id="方法-对象侦听"><a href="#方法-对象侦听" class="headerlink" title="方法&amp;对象侦听"></a>方法&amp;对象侦听</h5><ol><li>方法格式的侦听器(如上面的例子)<ul><li>缺点1：无法在刚进入页面的时候，自动触发！！！</li><li>缺点2：如果侦听的是一个对象，如果对象中的属性发生了变化，不会触发侦听器！！！</li></ul></li><li>对象格式的侦听器<ul><li>好处1：可以通过 <strong>immediate</strong> 选项，让侦听器自动触发！！！</li><li>好处2：可以通过 <strong>deep</strong> 选项，让侦听器深度监听对象中每个属性的变化！！！</li></ul></li></ol><p><strong>注意</strong>：应该先考虑最简单的方法侦听器，在考虑复杂的对象侦听器</p><p><strong>这里的需求</strong>：打开页面后让侦听器触发一次</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./lib/vue-2.6.12.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./lib/jquery-v3.6.0.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>      <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">'admin'</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token comment">// 所有的侦听器，都应该被定义到 watch 节点下</span>      <span class="token literal-property property">watch</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 定义对象格式的侦听器</span>        <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// 侦听器的处理函数</span>          <span class="token function">handler</span><span class="token punctuation">(</span><span class="token parameter">newVal<span class="token punctuation">,</span> oldVal</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newVal<span class="token punctuation">,</span> oldVal<span class="token punctuation">)</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token comment">// immediate 选项的默认值是 false</span>          <span class="token comment">// immediate 的作用是：控制侦听器是否自动触发一次！</span>          <span class="token literal-property property">immediate</span><span class="token operator">:</span> <span class="token boolean">true</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><h5 id="深度侦听deep"><a href="#深度侦听deep" class="headerlink" title="深度侦听deep"></a>深度侦听deep</h5><p><strong>简介</strong>：如果 watch 侦听的是一个对象，如果对象中的属性值发生了变化，则无法被监听到。此时需要使用 deep 选项，代码示例如下：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>info.username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>info.address.city<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./lib/vue-2.6.12.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./lib/jquery-v3.6.0.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>      <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 用户的信息对象</span>        <span class="token literal-property property">info</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">'admin'</span><span class="token punctuation">,</span>          <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">city</span><span class="token operator">:</span> <span class="token string">'北京'</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token comment">// 所有的侦听器，都应该被定义到 watch 节点下</span>      <span class="token literal-property property">watch</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token comment">/* info: &#123;          handler(newVal) &#123;            console.log(newVal)          &#125;,          // 开启深度监听，只要对象中任何一个属性变化了，都会触发“对象的侦听器”          deep: true        &#125; */</span>        <span class="token comment">// 如果要侦听的是对象的子属性的变化，则必须包裹一层单引号，这里‘’写了一个表达式</span>        <span class="token string">'info.username'</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token string">'info.address.city'</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><h3 id="计算属性"><a href="#计算属性" class="headerlink" title="计算属性"></a>计算属性</h3><p><strong>简介</strong>：计算属性指的是通过一系列运算之后，最终得到一个属性值。 这个动态计算出来的属性值可以被模板结构或 methods 方法使用。</p><p><strong>特点</strong>：</p><ol><li>在定义的时候，要被定义为”方法”</li><li>在使用计算属性的时候，当普通的属性使用即可</li></ol><p><strong>好处</strong>：</p><ol><li>实现了代码的复用</li><li>只要计算属性中依赖的数据源变化了，则计算属性会重新求值！</li></ol><p><strong>例子</strong>：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>R：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model.number</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>r<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>G：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model.number</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>g<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>B：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model.number</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>b<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 专门用户呈现颜色的 div 盒子 --></span>    <span class="token comment">&lt;!-- 在属性身上，: 代表  v-bind: 属性绑定 --></span>    <span class="token comment">&lt;!-- :style 代表动态绑定一个样式对象，它的值是一个 &#123;  &#125; 样式对象 --></span>    <span class="token comment">&lt;!-- 当前的样式对象中，只包含 backgroundColor 背景颜色 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span> <span class="token attr-name">:style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123; backgroundColor: rgb &#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      &#123;&#123; rgb &#125;&#125;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>show<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 创建 Vue 实例，得到 ViewModel</span>    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>      <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 红色</span>        <span class="token literal-property property">r</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token comment">// 绿色</span>        <span class="token literal-property property">g</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token comment">// 蓝色</span>        <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">0</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 点击按钮，在终端显示最新的颜色</span>        <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>rgb<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token comment">// 所有的计算属性，都要定义到 computed 节点之下</span>      <span class="token comment">// 计算属性在定义的时候，要定义成“方法格式”</span>      <span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// rgb 作为一个计算属性，被定义成了方法格式，</span>        <span class="token comment">// 最终，在这个方法中，要返回一个生成好的 rgb(x,x,x) 的字符串</span>        <span class="token function">rgb</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">rgb(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>r<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>g<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>b<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">)</span><span class="token template-punctuation string">`</span></span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><h2 id="axios"><a href="#axios" class="headerlink" title="axios"></a>axios</h2><p><strong>简介</strong>：axios是一个专注于网络请求的库！</p><p><strong>链接</strong>：<a href="http://www.axios-js.com/">http://www.axios-js.com/</a></p><h3 id="axios的基本使用"><a href="#axios的基本使用" class="headerlink" title="axios的基本使用"></a>axios的基本使用</h3><p>axios的基本语法如下：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">method</span><span class="token operator">:</span><span class="token string">'请求的类型'</span><span class="token punctuation">,</span>    <span class="token literal-property property">url</span><span class="token operator">:</span><span class="token string">'请求的 URL 地址'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=></span><span class="token punctuation">&#123;</span>    <span class="token comment">// .then 用来指定请求成功之后的回调函数</span>    <span class="token comment">// 形参中的 result 是请求成功之后的结果</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><h3 id="axios请求数据"><a href="#axios请求数据" class="headerlink" title="axios请求数据"></a>axios请求数据</h3><h4 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h4><p><strong>简介</strong>：axios会对返回的数据进行封装，不仅包含了真实数据，还包含了其余字段</p><p>![](vue框架学习&#x2F;axios 封装的 6 个属性.png)</p><p>由于<code>axios</code>封装，服务器返回的数据被放在了<code>data</code>字段里</p><h4 id="请求方式"><a href="#请求方式" class="headerlink" title="请求方式"></a>请求方式</h4><ol><li><p>发起 GET 请求：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token comment">// 请求方式</span>  <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">'GET'</span><span class="token punctuation">,</span>  <span class="token comment">// 请求的地址</span>  <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'http://www.liulongbin.top:3006/api/getbooks'</span><span class="token punctuation">,</span>  <span class="token comment">// URL 中的查询参数</span>  <span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre></li><li><p>发起 POST 请求：</p><p>这里的result不是服务器真实的数据</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#btnPost'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 如果调用某个方法的返回值是 Promise 实例，则前面可以添加 await！</span>  <span class="token comment">// await 只能用在被 async “修饰”的方法中</span>  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">'POST'</span><span class="token punctuation">,</span>     <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'http://www.liulongbin.top:3006/api/post'</span><span class="token punctuation">,</span>    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'zs'</span><span class="token punctuation">,</span>      <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">20</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><p>要获得真实的数据就要获取<code>result</code>里的<code>data</code>，如何获取<code>data</code>：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#btnPost'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 如果调用某个方法的返回值是 Promise 实例，则前面可以添加 await！</span>  <span class="token comment">// await 只能用在被 async “修饰”的方法中</span>  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> data <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">'POST'</span><span class="token punctuation">,</span>    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'http://www.liulongbin.top:3006/api/post'</span><span class="token punctuation">,</span>    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'zs'</span><span class="token punctuation">,</span>      <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">20</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre></li></ol><h4 id="使用解构赋值"><a href="#使用解构赋值" class="headerlink" title="使用解构赋值"></a>使用解构赋值</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btnPost<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>发起POST请求<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btnGet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>发起GET请求<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./lib/axios.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#btnPost'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 如果调用某个方法的返回值是 Promise 实例，则前面可以添加 await！</span>      <span class="token comment">// await 只能用在被 async “修饰”的方法中</span>      <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> data <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">'POST'</span><span class="token punctuation">,</span>        <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'http://www.liulongbin.top:3006/api/post'</span><span class="token punctuation">,</span>        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'zs'</span><span class="token punctuation">,</span>          <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">20</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#btnGet'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 解构赋值的时候，使用 : 进行重命名</span>      <span class="token comment">// 1. 调用 axios 之后，使用 async/await 进行简化</span>      <span class="token comment">// 2. 使用解构赋值，从 axios 封装的大对象中，把 data 属性解构出来</span>      <span class="token comment">// 3. 把解构出来的 data 属性，使用 冒号 进行重命名，一般都重命名为 &#123; data: res &#125;</span>      <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">data</span><span class="token operator">:</span> res <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">'GET'</span><span class="token punctuation">,</span>        <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'http://www.liulongbin.top:3006/api/getbooks'</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// $.ajax()   $.get()  $.post()</span>    <span class="token comment">// axios()    axios.get()    axios.post()    axios.delete()   axios.put()</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><h4 id="直接发起请求"><a href="#直接发起请求" class="headerlink" title="直接发起请求"></a>直接发起请求</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btnGET<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>GET<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btnPOST<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>POST<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./lib/axios.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#btnGET'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">/* axios.get('url地址', &#123;        // GET 参数        params: &#123;&#125;      &#125;) */</span>            <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">data</span><span class="token operator">:</span> res <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'http://www.liulongbin.top:3006/api/getbooks'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#btnPOST'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// axios.post('url', &#123; /* POST 请求体数据 */ &#125;)</span>      <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">data</span><span class="token operator">:</span> res <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'http://www.liulongbin.top:3006/api/post'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'zs'</span><span class="token punctuation">,</span> <span class="token literal-property property">gender</span><span class="token operator">:</span> <span class="token string">'女'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>stable-diffusion笔记</title>
      <link href="/2023/05/08/stable-diffusion-bi-ji/"/>
      <url>/2023/05/08/stable-diffusion-bi-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="Stable-Diffusion"><a href="#Stable-Diffusion" class="headerlink" title="Stable Diffusion"></a>Stable Diffusion</h1><p><strong>简介</strong>：stable diffusion WebUI(以下简称SD)是一个AI图像生成平台。它有多种多样的功能，比较适合想要了解AI绘画并生成图像的同学。本教程将从生成图片开始，到深入原理，你需要比较多的时间来看完</p><p><strong>SD原理链接</strong>：<a href="https://zhuanlan.zhihu.com/p/579454845">https://zhuanlan.zhihu.com/p/579454845</a></p><p><strong>获取aki的绘世整合包</strong>：<a href="http://pan.maxstars.xyz/d/%E8%B5%84%E6%BA%90%E5%BA%93/AI%E7%BB%98%E7%94%BB/Stable%20Diffusion/sd-webui-aki-v4.zip">http://pan.maxstars.xyz/d/%E8%B5%84%E6%BA%90%E5%BA%93/AI%E7%BB%98%E7%94%BB/Stable%20Diffusion/sd-webui-aki-v4.zip</a></p><p>AI绘图涉及到自然语言处理，图像处理，GAN神经对抗网络等多种知识</p><p><strong>注意</strong>：</p><ol><li><p>SD是一个平台，它不能帮助你了解<strong>算法原理</strong>，只能让你<strong>生成和调用模型</strong></p></li><li><p>本教程仅适用于生成<strong>二次元画风和角色</strong>，对于生成真人照片和其他画风请自行摸索</p></li><li><p>由于AI绘画正处于快速上升期，其中的技术日新月异，不能保证其中的任何内容都对齐最新版本，你需要具有较强的自主学习能力</p></li></ol><h2 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h2><p><strong>简介</strong>：要使用SD平台来进行绘画，首先你需要有一套合适的软硬件和适合的字典来生成对应人物。</p><p>入门主要是从环境搭建到基本学会使用SD绘画的基本参数</p><p><strong>链接</strong>：<a href="https://www.bilibili.com/read/cv22159609">【AI绘画】从零开始的AI绘画入门教程——魔法导论 - 哔哩哔哩 (bilibili.com)</a></p><p><strong>硬件</strong>：</p><p>AI绘画对显卡的要求最高，特别是<strong>显存占用很高</strong>。CPU影响较小，因为计算往往全部交给了显卡。你可能需要<strong>16G运行内存</strong>和一个<strong>固态硬盘</strong>来保证SD的<strong>开启速度</strong></p><p>要使用SD来运行AI模型，你至少需要一张<strong>4G显存</strong>的显卡，仅生成图片需要8G，训练模型需要12G，<strong>RTX20系以上</strong>最为合适。如果可以，请尽量使用<code>NVIDIA</code>(英伟达)的显卡而非<code>AMD</code>(超威)的显卡，因为AI的模型训练的<strong>加速框架</strong>运用到了<code>CUDA</code>，该技术有且只有<strong>N卡</strong>才能使用。如果你只能使用A卡，建议在Linux上运行才会获得更好的效果</p><p><strong>软件</strong>：</p><p>准备好硬件后，你需要的是给它安装一个操作系统，你可以选择<code>Linux</code>或者<code>Windows</code>。但是我这里只做<code>Windows</code>的教程</p><p>你可以选择自行搭建环境，自行搭建环境出现的问题99%都是网络问题</p><p>或者选择<strong>整合包</strong>：<a href="https://www.bilibili.com/video/BV1iM4y1y7oA">https://www.bilibili.com/video/BV1iM4y1y7oA</a></p><p><strong>新手我建议你安装CUDA，直接使用<a href="https://space.bilibili.com/12566101">秋葉aaaki</a>大佬的整合包</strong></p><p><code>CUDA</code>可以在<code>NVIDIA</code>官网找到，根据你显卡的型号去安装</p><p>到这里，我觉得你应该已经可以运行大佬提供的整合包了：</p><p><img src="/2023/05/08/stable-diffusion-bi-ji/image-20230417193515014.png"></p><p>如果无法成功运行，你可以点击右上角的问号看看论坛和视频</p><h2 id="开始文生图"><a href="#开始文生图" class="headerlink" title="开始文生图"></a>开始文生图</h2><h3 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h3><p><strong>简介</strong>：SD平台的主要作用就是要让<strong>文字转换成你想要的图片</strong>，其他功能都是为这个服务的。想要在SD上生成图片，首先你需要了解什么是<code>Tag</code>(标签)。</p><p>在文字生成图片中，一张图片是由多个<code>Tag</code>相互制约形成的，也就是给图片贴标签。在SD中，标签分为正向标签和反向标签。</p><p><strong>正向标签</strong>：你想要生成的画面</p><p><strong>反向标签</strong>：你不想要生成的画面</p><p><img src="/2023/05/08/stable-diffusion-bi-ji/image-20230417194903081.png"></p><p>在生成图片的过程中你最好使用英文标签来描述图片，你可以使用句子，但是正常情况下它应该会被语言模型重新提取出句子里的标签词</p><h3 id="获取标签"><a href="#获取标签" class="headerlink" title="获取标签"></a>获取标签</h3><p><strong>简介</strong>：获取标签可以使用整合包里包含的提示语法，也可以使用别的方式来获得一张图片包含的标签。但是由于SD的二次元模型是基于<a href="https://danbooru.donmai.us/">Danbooru</a>这个网站的<strong>图片标签集</strong>训练出来的，因此所有图片的标签都源自于这个网站</p><p><strong>注意</strong>：AI生成的图片信息会自动保存全部参数在原图，非AI生成的图片需要经过反推得到标签</p><p><strong>在这些网站找到大佬训练的标签模板</strong>：<a href="https://tags.novelai.dev/">Danbooru 标签超市 (novelai.dev)</a>，<a href="https://aitag.top/">魔咒百科词典 (aitag.top)</a></p><h4 id="正向获取"><a href="#正向获取" class="headerlink" title="正向获取"></a>正向获取</h4><h5 id="在插件上获取标签提示"><a href="#在插件上获取标签提示" class="headerlink" title="在插件上获取标签提示"></a>在插件上获取标签提示</h5><p>这里可以看到在标签栏输入1就会自动获取当前比较火热的标签，前面的是标签名，后面的是热度</p><p><img src="/2023/05/08/stable-diffusion-bi-ji/image-20230417215706763.png"></p><p><strong>注意</strong>：如果没有提示这个标签，那它大概率是不会生效的，或者说你的模型库里还没有这个标签</p><h5 id="在Danbooru上查看图片包含的标签"><a href="#在Danbooru上查看图片包含的标签" class="headerlink" title="在Danbooru上查看图片包含的标签"></a>在<a href="https://danbooru.donmai.us/">Danbooru</a>上查看图片包含的标签</h5><p>进入网站选择或搜索你想要的图片，点击图片进入浏览就能看到图片标签：</p><p><img src="/2023/05/08/stable-diffusion-bi-ji/image-20230417214841122.png"></p><h5 id="在SD的WebUI上查看图片信息"><a href="#在SD的WebUI上查看图片信息" class="headerlink" title="在SD的WebUI上查看图片信息"></a>在SD的WebUI上查看图片信息</h5><p><img src="/2023/05/08/stable-diffusion-bi-ji/image-20230418093101524.png"></p><h4 id="逆向获取"><a href="#逆向获取" class="headerlink" title="逆向获取"></a>逆向获取</h4><h5 id="使用DeepDanbooru"><a href="#使用DeepDanbooru" class="headerlink" title="使用DeepDanbooru"></a>使用DeepDanbooru</h5><p><strong>用<a href="https://github.com/KichangKim/DeepDanbooru">DeepDanbooru</a>GitHub项目来识别图片标签</strong>：</p><p><strong>简介</strong>：DeepDanbooru是一个Github上面的开源项目，你可以使用它们的在线网站进行测试，不过可能要魔法上网</p><p><img src="/2023/05/08/stable-diffusion-bi-ji/image-20230417220114623.png"></p><p>你可以看到左边的<strong>标签</strong>和右边的<strong>匹配程度</strong>，匹配程度越高判断越准确</p><p><img src="/2023/05/08/stable-diffusion-bi-ji/image-20230417220507062.png"></p><p><strong>使用WebUI自带的DeepDanbooru</strong>：</p><p>使用WebUI图生图中自带的DeepDanbooru，注意不要使用CLIP，整合包上似乎没有这个插件</p><p><img src="/2023/05/08/stable-diffusion-bi-ji/image-20230418093625755.png"></p><h5 id="使用Tagger插件"><a href="#使用Tagger插件" class="headerlink" title="使用Tagger插件"></a>使用Tagger插件</h5><p>整合包的SD默认自带Tagger，选择即可进入进行反推，运行速度较慢但是结果会比WebUI的DeepDanbooru准确</p><p><img src="/2023/05/08/stable-diffusion-bi-ji/image-20230418094434991.png"></p><h3 id="开始生成"><a href="#开始生成" class="headerlink" title="开始生成"></a>开始生成</h3><p><strong>简介</strong>：当你准备好标签后，就可以开始生成了</p><h4 id="输入标签"><a href="#输入标签" class="headerlink" title="输入标签"></a>输入标签</h4><p>这里抄下<a href="https://tags.novelai.dev/">Danbooru 标签超市 (novelai.dev)</a>元素法典的风魔法，你可以将这串标签粘贴进去来进行你的首次生成测试</p><p><strong>正向</strong>：masterpiece, best quality, beautiful detailed sky, illustration, 1girl, solo, small breasts, ultra-detailed, an extremely delicate and beautiful little girl, beautiful detailed eyes, side blunt bangs, hair between eyes, ribbon, bowtie, buttons, bare shoulders, blank stare, pleated skirt, close to viewer, breeze, flying splashes, flying petals, wind</p><p><strong>逆向</strong>：nsfw, lowres, bad anatomy, bad hands, text, error, missing fingers, extra digit, fewer digits, cropped, worst quality, low quality, normal quality, jpeg artifacts, signature, watermark, username, blurry, missing arms, long neck, humpbacked, shadow, nude</p><p>![](stable-diffusion笔记&#x2F;00038-3264805147-masterpiece, best quality, beautiful detailed sky, illustration, 1girl, solo, small breasts, ultra-detailed, an extremely delica.png)</p><h4 id="变换参数"><a href="#变换参数" class="headerlink" title="变换参数"></a>变换参数</h4><p><strong>简介</strong>：SD中还有很多可以调整图片风格的变量，这里介绍一些主要的参数</p><p><strong>这里借鉴一下大佬的图</strong>：</p><p><img src="/2023/05/08/stable-diffusion-bi-ji/58e248f667f8932526774d1835ccf8f3f25d7009.png@942w_473h_progressive.webp"></p><h5 id="选择分辨率"><a href="#选择分辨率" class="headerlink" title="选择分辨率"></a>选择分辨率</h5><p>可以使用<a href="https://novelai.net/image">Image Generation - NovelAI</a>提供的几组分辨率进行绘画：</p><p><code>512*768</code>、<code>768*512</code>、<code>640*640</code>、<code>832*1280</code>、<code>1280*832</code>、<code>1024*1024</code>、<code>1024*1536</code>、<code>1536*1024</code>、<code>1472*1472</code>、<code>1088*1920</code>、<code>1920*1088</code></p><h5 id="启动高分辨率修复"><a href="#启动高分辨率修复" class="headerlink" title="启动高分辨率修复"></a>启动高分辨率修复</h5><p>获取高分辨率的图片可以启用高分辨率修复。原始分辨率是<code>768*512</code>，修复后为<code>1536*1024</code>，可以在放大倍数里调整放大倍率</p><h5 id="采样迭代步数"><a href="#采样迭代步数" class="headerlink" title="采样迭代步数"></a>采样迭代步数</h5><p>采样步数不要太大，一般选28步左右即可，采样次数大于30画面变化就很小了</p><p>采样器没有优劣之分，但是他们速度不同。全看个人喜好。推荐的是图中圈出来的几个，速度效果都不错</p><p><img src="/2023/05/08/stable-diffusion-bi-ji/image-20230418091042806.png"></p><p><strong>提示词引导系数</strong>：</p><p>提示词引导系数是指图像和标签的相关度，太低AI会自由发挥，太高会出现锐化线条变粗的效果。默认值为7</p><p><strong>随机数种子</strong>：</p><p>随机数种子是一串随机数字，当关键词遇上这串随机数，图片就被生成出来。如果相同的标签和相同的随机数生成多次，得到的图片应该是相同的。这里随机数种子默认-1代表随机生成一串数字</p><h4 id="使用X-Y-Z图表"><a href="#使用X-Y-Z图表" class="headerlink" title="使用X&#x2F;Y&#x2F;Z图表"></a>使用X&#x2F;Y&#x2F;Z图表</h4><p><strong>简介</strong>：X&#x2F;Y&#x2F;Z图表可以让你直观的感受到参数对变量的影响，当然，你最多只能设置3个变量</p><p><strong>资料</strong>：<a href="https://guide.novelai.dev/guide/configuration/param-advanced#x-y-z-%E5%9B%BE%E8%A1%A8">https://guide.novelai.dev/guide/configuration/param-advanced#x-y-z-图表</a></p><p>使用SD中的脚本选项找到X&#x2F;Y&#x2F;Z plot，可以选择X，X&#x2F;Y，X&#x2F;Y&#x2F;Z，3种</p><p><img src="/2023/05/08/stable-diffusion-bi-ji/image-20230418162940368.png"></p><p>按照上图设置X轴为**步数(steps)<strong>，Y轴为</strong>提示词引导系数(CFG Scale)**，可以得到下图的样式：</p><p>![](stable-diffusion笔记&#x2F;00000-2366072259-masterpiece, best quality, beautiful detailed sky, illustration, 1girl, solo, small breasts, ultra-detailed, an extremely delica.png)</p><h3 id="管理插件"><a href="#管理插件" class="headerlink" title="管理插件"></a>管理插件</h3><p><strong>简介</strong>：我们很多操作都依赖SD上安装的<strong>插件</strong>，包括SD的汉化。这些插件不是不可更改的，我们可以通过SD的WebUI界面来管理所有插件</p><p><strong>操作</strong>：你只需要打开WebUI找到扩展，扩展中即可管理所有插件。你可以检查插件的更新，在可下载列表中安装新的插件</p><p><img src="/2023/05/08/stable-diffusion-bi-ji/image-20230418095533676.png"></p><h2 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h2><p><strong>简介</strong>：你已经学会大部分基本操作了，但是AI绘画的重点永远是AI模型。你可能已经发现了现在的模型画风可以一眼识别出来是AI绘画的，于是怎么调整模型或者让画面看起来更像是一个画师画的呢？</p><p><strong>资料</strong>：<a href="https://www.bilibili.com/read/cv21362202">https://www.bilibili.com/read/cv21362202</a></p><h3 id="认识模型"><a href="#认识模型" class="headerlink" title="认识模型"></a>认识模型</h3><p><strong>简介</strong>：不同的模型会带来不同的画风、认识不同的概念（人物&#x2F;物体&#x2F;动作），简单说就是有无这个Tag(标签)。这是模型众多的原因</p><p>去年泄露出来的<strong>NovelAI</strong>模型就是<strong>NovelAI</strong>制作的二次元特化模型，其模型数据大多数来自<strong>Danbooru</strong>和<strong>Twitter</strong>。NovelAI是一种大模型</p><p><strong>当前模型可分为两类</strong>：<strong>大模型</strong>和用于微调大模型的<strong>小模型</strong></p><p><strong>模型后缀</strong>：<code>.ckpt</code>, <code>.pt</code>, <code>.pth</code>, <code>.safetensors</code>。前面三个后缀是pytorch的标准模型保存形式，由于使用了Pickle，有可能会被pickle反序列化攻击。最后一种后缀是为了解决前面几种模型的安全风险出现的，正如它名字中的<code>safe</code>一样安全。使用<code>.safetensors</code>需要把SD更新到2022年12月底以后的版本</p><p><strong>注意</strong>：</p><ol><li>你不可能用模型的后缀来判断模型的类型，因为模型后缀有很多。</li><li>模型大小不能决定模型质量</li><li>我不反对你使用模型，但请你尊重作者的版权和意向，不要将非商用的模型用来谋取利益，不要拿未经许可的图片来训练</li></ol><p><strong>你可以使用这个网址来识别模型类型</strong>：<a href="https://spell.novelai.dev/">https://spell.novelai.dev/</a></p><p><strong>大部分模型都能在civitai(C站)找到，国内需要魔法才能上</strong>：</p><p><img src="/2023/05/08/stable-diffusion-bi-ji/image-20230419185837200.png" alt="https://civitai.com"></p><h4 id="了解大模型"><a href="#了解大模型" class="headerlink" title="了解大模型"></a>了解大模型</h4><p><strong>简介</strong>：大模型指标准的<code>latent diffusion</code>(潜在扩散)或是它的进化版<code>stable diffusion</code>(稳定扩散)模型。大模型通常拥有完整的<code>TextEncoder</code>、<code>UNet</code>、<code>VAE</code>。简单说，大模型可以独立完成文字转图像的全过程</p><p><strong>如果想深入了解可以参考这篇</strong>：<a href="https://zhuanlan.zhihu.com/p/617134893">https://zhuanlan.zhihu.com/p/617134893</a></p><p>你可以在SD左上角选择<code>Stable Diffusion</code>模型：</p><p><img src="/2023/05/08/stable-diffusion-bi-ji/image-20230419165255509.png"></p><p>在SD中，大模型应该放在<code>models\Stable-diffusion</code>中，你可以从绘世的模型管理中打开：</p><p><img src="/2023/05/08/stable-diffusion-bi-ji/image-20230421231400017.png"></p><p><img src="/2023/05/08/stable-diffusion-bi-ji/image-20230419164419771.png"></p><p>你可以把里面默认包含的<code>anything-v5-PrtRE.safetensors</code>上传识别网站来验证一下，不出意外它应该会提示你为<code>stable diffusion</code>模型。如下图所示：</p><p><img src="/2023/05/08/stable-diffusion-bi-ji/image-20230419164556591.png"></p><h4 id="大模型的选择"><a href="#大模型的选择" class="headerlink" title="大模型的选择"></a>大模型的选择</h4><p><strong>简介</strong>：现在几乎所有AI绘画的模型都是从<code>Stable Diffusion</code>中再训练得到的，我在这里简单介绍我常用的模型</p><p><strong>各大模型介绍链接</strong>：<a href="https://www.tjsky.net/tutorial/583">https://www.tjsky.net/tutorial/583</a></p><h5 id="Anything-v5-Prt-RE-v3-RE，FT"><a href="#Anything-v5-Prt-RE-v3-RE，FT" class="headerlink" title="Anything v5(Prt-RE)&amp;v3(RE，FT)"></a>Anything v5(Prt-RE)&amp;v3(RE，FT)</h5><p><img src="/2023/05/08/stable-diffusion-bi-ji/342218.png" alt="anything v5"></p><p><img src="/2023/05/08/stable-diffusion-bi-ji/392534.png" alt="anything v3RE"></p><p><img src="/2023/05/08/stable-diffusion-bi-ji/316096.png" alt="anything v3FT"></p><p><strong>简介</strong>：<strong>Anything系列</strong>是一个叫9的大佬制作的。<code>Anything v5</code>是上述整合包里自带的模型，你可以在C站找到它。这个模型是在<code>Anything v3</code>的版本上增加了提示词的引导性</p><p>作者说为了图好看你可以选择<code>Anything v3</code>，所以你也可以选择再下载一个<code>v3RE</code>(修复版本)和<code>v3FT</code>(立绘专用版本)。<code>Anything v3</code>是一个传奇，它的出图质量堪比<code>Novel AI</code>商业模型，导致一段时间的炒作<br><strong>Anything v3有着两个致命的弱点</strong>：手和眼睛高光</p><p><strong>链接</strong>：<a href="https://civitai.com/models/9409/or-anything-v5">https://civitai.com/models/9409/or-anything-v5</a></p><h5 id="Counterfeit-V2-5"><a href="#Counterfeit-V2-5" class="headerlink" title="Counterfeit-V2.5"></a>Counterfeit-V2.5</h5><p><img src="/2023/05/08/stable-diffusion-bi-ji/001.jpeg"></p><p><strong>简介</strong>：<strong>Counterfeit模型</strong>是专为还原生活场景所打造的模型，它可以生成高质量的背景来配合人物，贴近真实而又具有动漫风格。简单说就是可以生成良好的背景与人物配合</p><p><strong>链接</strong>：<a href="https://civitai.com/models/4468/counterfeit-v25">https://civitai.com/models/4468/counterfeit-v25</a></p><h5 id="Novel-AI"><a href="#Novel-AI" class="headerlink" title="Novel AI"></a>Novel AI</h5><p><strong>简介</strong>：<code>Novel AI</code>想必大家都清楚，就是它开创了二次元AI绘画文字转图片的潮流。当然你不清楚也没关系，你只要知道，它的网站在开放这个功能没多久就被脱裤了。而且后来面临许多官司，因为它的训练数据大多源于<code>twitter</code>和<code>danbooru</code>。其中很多图片都未经画师许可直接拿来使用</p><p><strong>注意</strong>：<code>Novel AI</code>的数据库只泄露了一次，你可以自己去获得那个泄露出来的模型，但请你不要商用，不要发布。虽然你的图片经过处理可能也看不出是什么模型生成的，但我不对你造成的任何后果负责，我也不会给你任何途径来获取这个模型</p><p><strong>Novel AI官网</strong>：<a href="https://novelai.net/image">https://novelai.net/image</a></p><p><img src="/2023/05/08/stable-diffusion-bi-ji/image-20230421230432529.png"></p><h4 id="了解VAE"><a href="#了解VAE" class="headerlink" title="了解VAE"></a>了解VAE</h4><p><img src="/2023/05/08/stable-diffusion-bi-ji/image-20230421231132281.png"></p><p><strong>简介</strong>：<code>VAE</code>(Variational Auto-Encoder 变分自动编码器)，你可以在SD模型的旁边来选择它。简单来讲就是一个解码器，用于给你的模型解码，解码越厉害，失真程度越低，画面越鲜艳真实。这里可以先简单理解成一个HDR滤镜：</p><p>![没VAE](stable-diffusion笔记&#x2F;00117-3947946881-1girl, solo, skirt, long hair, crop top, green eyes, navel, smile, day, outdoors, sitting, sailor collar, holding, looking at vi.png)</p><p>![有VAE](stable-diffusion笔记&#x2F;00120-3947946881-1girl, solo, skirt, long hair, crop top, green eyes, navel, smile, day, outdoors, sitting, sailor collar, holding, looking at vi.png)</p><p>上面两张图是用<code>Counterfeit-V2.5</code>生成的。这里可以看到，没VAE时色彩比较暗淡，也可以说是有失真，加了<code>animevae</code>后色彩丰富了起来。</p><h4 id="VAE的选择"><a href="#VAE的选择" class="headerlink" title="VAE的选择"></a>VAE的选择</h4><p><strong>简介</strong>：选择<code>VAE</code>基本上就是为了调色，如果你生成的图片发灰，你可以添加或换个<code>VAE</code>去试试</p><p><strong>流行的VAE</strong>：基本上就是模型管理的几个，你可以逐个尝试下。<code>animevae.pt</code>的泛用性是比较好的</p><p><img src="/2023/05/08/stable-diffusion-bi-ji/image-20230422003509047.png"></p><p><strong>注意</strong>：有些模型有附加的VAE，但是C站不提供VAE标签，所以你最好去翻一下。例如<strong>Counterfeit-v2.5</strong>的模型库里自带一个vae，但是这个就是<code>animevae</code>改了名</p><p><img src="/2023/05/08/stable-diffusion-bi-ji/image-20230423200428978.png"></p><h4 id="了解CLIP"><a href="#了解CLIP" class="headerlink" title="了解CLIP"></a>了解CLIP</h4><p><strong>简介</strong>：<code>CLIP</code>(Contrastive Language-Image Pre-training 语言与图像的对比预训练)是一套模型，用于构建起自然语言(日常描述)与图片(图像特征)之间的预测算法。算法的作用就是将文字标签转换为图片特征。讲人话就是输入一个<code>1girl</code>，它就会给你只有一个女孩的图片。这种模型转换就是基于<strong>图片-标签</strong>集训练的，例如把<code>danbooru</code>的<strong>图片-标签</strong>集训练一下</p><p><strong>链接</strong>：<a href="https://www.bilibili.com/read/cv19100966/">https://www.bilibili.com/read/cv19100966/</a></p><p><strong>注意</strong>：CLIP一共有5层</p><h4 id="clip-skip的选择"><a href="#clip-skip的选择" class="headerlink" title="clip skip的选择"></a>clip skip的选择</h4><p><img src="/2023/05/08/stable-diffusion-bi-ji/image-20230422015758211.png"></p><p><strong>简介</strong>：<code>clip skip</code>表示的是——在CLIP模型的最后N层终止(Ignore last layers of CLIP model)，它的作用是选择图片和标签相关性。</p><p><strong>默认选择</strong>：2</p><p>如果停止得太早，那么选出来的特征就会很多，生成的图片可能不会像标签输入的那样，AI就自由发挥了。如果只跳过1层，选出来的特征就会很精准，AI可以发挥的空间就少，图片也就越对应标签。</p><h4 id="CFG-Scale的选择"><a href="#CFG-Scale的选择" class="headerlink" title="CFG Scale的选择"></a>CFG Scale的选择</h4><p><img src="/2023/05/08/stable-diffusion-bi-ji/image-20230422015914022.png"></p><p><strong>简介</strong>：图像与你的提示的匹配程度。增加这个值将导致图像更接近你的提示，但它也在一定程度上降低了图像质量。可以用更多的采样步骤来抵消。过高的 CFG Scale 体现为粗犷的线条和过锐化的图像。一般开到 7~11。超过13将发生色彩异化(显示不属于这个物体的颜色)</p><p><strong>默认选择</strong>：7</p><p><strong>注意</strong>：这个可以一定程度上和<code>clip skip</code>抵消，但是这两个值变化太大都会降低图片质量。</p><p><strong>clip skip和CFG Scale的区别是</strong>：clip skip从源头上阻止不相关的图片出现，CFG Scale是挑选剩下符合的特征呈现</p><h4 id="采样器"><a href="#采样器" class="headerlink" title="采样器"></a>采样器</h4><p><strong>简介</strong>：在SD模型中，采样通常由模型和迭代步数组成。不同的采样模型通常含有不同的算法。一个标准的Stable Diffusion分为两个步骤；前向扩散过程，和后向的去噪、复原以及生成目标的过程。前向过程不断向输入数据中添加噪声，而采样器主要在后向过程中负责去噪的过程。</p><p>在图像生成前，模型会首先在Latent Space中生成一个完全随机的图像，然后噪声预测器会开始工作，从图像中减去预测的噪声。随着这个步骤的不断重复，最终我们得到了一个清晰的图像。</p><p><strong>链接</strong>：<a href="https://zhuanlan.zhihu.com/p/621083328">https://zhuanlan.zhihu.com/p/621083328</a></p><h5 id="步数"><a href="#步数" class="headerlink" title="步数"></a>步数</h5><p><strong>简介</strong>：采样步数很大程度上和你的采样器有关，但是采样步数造成的效果一般在40步以后就不明显了。采样的步数主要还是让你的模型充分收敛，使<code>SSIM</code>(Structure Similarity Index Measure) 结构衡量指标更接近1。<code>SSIM</code>是一个感知模型，越接近1则图像越真实</p><p><strong>什么是SSIM</strong>：<a href="https://zhuanlan.zhihu.com/p/399215180">https://zhuanlan.zhihu.com/p/399215180</a></p><h5 id="采样器的选择"><a href="#采样器的选择" class="headerlink" title="采样器的选择"></a>采样器的选择</h5><p><strong>简介</strong>：这里直接推荐哪个采样器更好用，要了解原理请参考上面两个链接</p><ol><li>DPM++ 2M Karras，Step Range：20-30</li><li>UniPc, Step Range: 20-30</li><li>DPM ++ SDE Karras， Step Range：8-12</li><li>DDIM， Step Range：10-15</li></ol><p><strong>注意</strong>：</p><ol><li>如果期望得到稳定、可重现的图像，<strong>避免采用任何祖先采样器</strong></li><li>你最好看看链接里的<strong>模型收敛折线图</strong>，这个可以帮助你了解采样器的特性</li></ol><h4 id="放大算法"><a href="#放大算法" class="headerlink" title="放大算法"></a>放大算法</h4><p><strong>简介</strong>：由于AI生成的图片分辨率都很低，而一下子生成高分辨率的图会把显存干爆，所以我们还要在一张模糊的低分辨率图上生成一张清晰的高分辨率图，这里我就讲几个主流的算法，其他算法可以自行查找</p><p><strong>链接</strong>：</p><p><a href="https://zhuanlan.zhihu.com/p/610346261">https://zhuanlan.zhihu.com/p/610346261</a></p><p><a href="https://www.zhihu.com/question/585108915/answer/2965171166">https://www.zhihu.com/question/585108915/answer/2965171166</a></p><p><strong>表现</strong>：</p><p><img src="/2023/05/08/stable-diffusion-bi-ji/1.png" alt="1"></p><p><img src="/2023/05/08/stable-diffusion-bi-ji/2.png" alt="2"></p><p><strong>分类</strong>：</p><p><img src="/2023/05/08/stable-diffusion-bi-ji/image-20230424195938766.png"></p><h5 id="高分迭代步数"><a href="#高分迭代步数" class="headerlink" title="高分迭代步数"></a>高分迭代步数</h5><p><strong>简介</strong>：由于<code>SD</code>中许多放大模型都是基于AI计算的，AI计算就需要拟合才能出好的效果，所以需要有高分迭代步数</p><p><strong>推荐设置</strong>：设置为10-20左右即可，一般不超过采样步数</p><h5 id="Latent系列"><a href="#Latent系列" class="headerlink" title="Latent系列"></a>Latent系列</h5><p><strong>简介</strong>：<code>Latent Diffusion Models</code>(潜在扩散模型)算法简称<code>LDMs</code>。该算法将图像特征压缩到低维，对图像进行低维扩散，再转换到需要的维度。</p><p><strong>链接</strong>：<a href="https://zhuanlan.zhihu.com/p/562413185">https://zhuanlan.zhihu.com/p/562413185</a></p><p><strong>推荐选择</strong>：就用<code>Latent</code>就行，不要用Latent+(xxx)的算法</p><p><strong>评价</strong>：重绘幅度大时比较好看，可能会大幅度改变原图。注意重绘幅度设置为0.6-0.8</p><h5 id="GAN系列"><a href="#GAN系列" class="headerlink" title="GAN系列"></a>GAN系列</h5><p><strong>简介</strong>：<code>GAN</code>(生成式对抗网络)是一种专门用来绘图的AI算法，<code>ESRGAN</code>是<code>BARGAN</code>的改良版</p><p><strong>推荐选择</strong>：R-ESRGAN 4x+，R-ESRGAN 4x+ Anime6B(二次元定制版，有轻微的羽化现象)</p><p><strong>评价</strong>：重绘幅度小时好于<code>Latent</code>，不想大幅改变图片可用</p><h5 id="规则算法"><a href="#规则算法" class="headerlink" title="规则算法"></a>规则算法</h5><p><strong>简介</strong>：规则算法是指基于某种规则放大图片的算法，由于图片非常灵活，规则算法除了运算快基本没有用武之地，除非图片十分规则</p><p><strong>评价</strong>：最好不用</p><h4 id="LoRA"><a href="#LoRA" class="headerlink" title="LoRA"></a>LoRA</h4><p><strong>简介</strong>：LoRA是一种画风导向模型</p><p><strong>教程</strong>：<a href="https://www.bilibili.com/video/BV1Py4y1d7eJ">https://www.bilibili.com/video/BV1Py4y1d7eJ</a></p><p>这个更新了，现在你可以直接将模型放到<code>models/Lora</code>文件夹下了，待更新</p><h4 id="control-net"><a href="#control-net" class="headerlink" title="control net"></a>control net</h4><p><strong>简介</strong>：control net主要是控制模型细节</p><p><strong>教程</strong>：<a href="https://www.bilibili.com/video/BV1fa4y1G71W">https://www.bilibili.com/video/BV1fa4y1G71W</a></p><p>待更新</p>]]></content>
      
      
      <categories>
          
          <category> AI教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习</title>
      <link href="/2022/12/07/ji-qi-xue-xi-bi-ji/"/>
      <url>/2022/12/07/ji-qi-xue-xi-bi-ji/</url>
      
        <content type="html"><![CDATA[<h3 id="安装一套机器学习环境"><a href="#安装一套机器学习环境" class="headerlink" title="安装一套机器学习环境"></a>安装一套机器学习环境</h3><p><strong>介绍</strong>：本套机器学习环境基于<code>anaconda</code>+<code>pycharm</code>+<code>CUDA</code></p><p><strong>视频教程</strong>：<a href="https://www.bilibili.com/video/BV1ov41137Z8?p=7&share_source=copy_web&vd_source=fb1c8825bf34368632566c631619e122">https://www.bilibili.com/video/BV1ov41137Z8?p=7&amp;share_source=copy_web&amp;vd_source=fb1c8825bf34368632566c631619e122</a></p><h4 id="anaconda"><a href="#anaconda" class="headerlink" title="anaconda"></a>anaconda</h4><p>**下载Anaconda(一个库管理工具)**：<a href="https://www.anaconda.com/">https://www.anaconda.com/</a></p><p><strong>安装</strong>：</p><p><strong>选择for me(或all users取决于你能不能在下一步勾选环境变量)</strong></p><p><img src="/2022/12/07/ji-qi-xue-xi-bi-ji/image-20220814210354853.png"></p><p><strong>注意</strong>：出现无法勾选环境变量时，你要更改你的<code>Install for all</code>为<code>Just me</code>选项，直到你可以勾选添加到PATH</p><p><img src="/2022/12/07/ji-qi-xue-xi-bi-ji/image-20220814211057163.png"></p><p><strong>安装完成后即可检查环境，命令行输入</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash">conda <span class="token parameter variable">-V</span><span class="token comment"># 如果有版本显示证明安装成功</span></code></pre><p><strong>尝试创建一个conda环境</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash">activate <span class="token comment"># 激活环境</span>conda create <span class="token parameter variable">-n</span> py37 <span class="token assign-left variable">python</span><span class="token operator">=</span><span class="token number">3.7</span> <span class="token comment"># 创建一个名叫py37的python3.7的环境</span>conda activate py37 <span class="token comment"># 使用py37的环境</span>python <span class="token parameter variable">-V</span><span class="token comment"># 查看python版本</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 退出python</span>conda deactivate <span class="token comment"># 退出py37的环境</span></code></pre><h4 id="pycharm"><a href="#pycharm" class="headerlink" title="pycharm"></a>pycharm</h4><p><strong>下载pycharm</strong>：<a href="https://www.jetbrains.com/pycharm/download/#section=windows">https://www.jetbrains.com/pycharm/download/#section=windows</a></p><p><strong>安装</strong>：勾选这些即可</p><p><img src="/2022/12/07/ji-qi-xue-xi-bi-ji/image-20220814215703656.png"></p><p><strong>安装成功先不重启，配置一下pycharm的环境</strong>：</p><p><strong>打开pycharm选择设置</strong></p><p><img src="/2022/12/07/ji-qi-xue-xi-bi-ji/image-20220814220533362.png"></p><p><strong>选择解释器(pycharm2023.1.1)</strong></p><p><img src="/2022/12/07/ji-qi-xue-xi-bi-ji/image-20230515161900569.png"></p><p><strong>选择conda环境，选择conda.bat，点击确定</strong></p><p><img src="/2022/12/07/ji-qi-xue-xi-bi-ji/image-20230515161928166.png"></p><p><strong>注意</strong>：在2023.1.1后的版本，pycharm默认开启了测试模式，需要手动关闭。在工具中找到测试选择Unittest来跳过测试</p><p><img src="/2022/12/07/ji-qi-xue-xi-bi-ji/image-20230515182907768.png"></p><h4 id="CUDA"><a href="#CUDA" class="headerlink" title="CUDA"></a>CUDA</h4><p><strong>查看适合自己的CUDA</strong>：</p><p><strong>右键进入控制面板</strong></p><p><img src="/2022/12/07/ji-qi-xue-xi-bi-ji/image-20220814222518485.png"></p><p><strong>选择</strong>：帮助-系统信息-组件</p><p><img src="/2022/12/07/ji-qi-xue-xi-bi-ji/image-20220814222631672.png"></p><p><img src="/2022/12/07/ji-qi-xue-xi-bi-ji/image-20220814222727629.png"></p><p>可以看到适配的CUDA版本，你可以安装比这个版本低的CUDA</p><p><strong>注意</strong>：由于<code>pytorch</code>并不适配所有<code>CUDA</code>版本，但是<code>tensorflow</code>是可以的，安装前需要查看适配版本</p><p><strong>查看pytorch适配的CUDA版本</strong>：<a href="https://pytorch.org/get-started/locally/">https://pytorch.org/get-started/locally/</a></p><p><strong>下载适合的版本</strong>：<a href="https://developer.nvidia.com/cuda-toolkit-archive">https://developer.nvidia.com/cuda-toolkit-archive</a></p><p><strong>安装</strong>：</p><p><strong>选择默认位置。这里选择的是解压位置，安装程序跑完后自动清除</strong>：</p><p><img src="/2022/12/07/ji-qi-xue-xi-bi-ji/笔记\专业知识类\机器学习笔记\image-20240109115320411.png"></p><p><strong>自定义安装，注意只勾选下面的选项</strong>：</p><p><img src="/2022/12/07/ji-qi-xue-xi-bi-ji/image-20220814223515632.png"></p><p><strong>在C盘新建文件夹CUDA-CUDA[版本号]-CUDA1</strong></p><p><strong>安装到刚创建的文件夹</strong>：</p><p><img src="/2022/12/07/ji-qi-xue-xi-bi-ji/笔记\专业知识类\机器学习笔记\image-20240109115907003.png"></p><p><strong>安装结束后注意不要选GeForce相关选项</strong>：</p><p><img src="/2022/12/07/ji-qi-xue-xi-bi-ji/笔记\专业知识类\机器学习笔记\image-20240109115456847.png"></p><p><img src="/2022/12/07/ji-qi-xue-xi-bi-ji/image-20220814232045879.png"></p><p><strong>安装完成后在命令行校验</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash">nvcc <span class="token parameter variable">-V</span></code></pre><p><img src="/2022/12/07/ji-qi-xue-xi-bi-ji/image-20220815191247568.png"></p><p><strong>注意</strong>：这里没有出现版本不用急，重启并删除其他版本的CUDA环境变量，重启即可</p><h4 id="cuDNN"><a href="#cuDNN" class="headerlink" title="cuDNN"></a>cuDNN</h4><p><strong>下载</strong>：<a href="https://developer.nvidia.com/rdp/cudnn-archive">https://developer.nvidia.com/rdp/cudnn-archive</a></p><p><img src="/2022/12/07/ji-qi-xue-xi-bi-ji/笔记\专业知识类\机器学习笔记\image-20240109113144293.png"></p><p><strong>下载完成后解压</strong>：</p><p><img src="/2022/12/07/ji-qi-xue-xi-bi-ji/image-20220814231741930.png"></p><p><strong>把文件复制到CUDA安装目录</strong>：</p><p><img src="/2022/12/07/ji-qi-xue-xi-bi-ji/image-20220814231941492.png"></p><p><strong>检查cuDNN是否安装完成</strong>：</p><p>在CMD里执行如下命令，出现下面状态就代表安装成功：</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">C:\CUDA\CUDA12<span class="token punctuation">.</span>1\CUDA1\extras\demo_suite\deviceQuery<span class="token punctuation">.</span>exe</code></pre><p><img src="/2022/12/07/ji-qi-xue-xi-bi-ji/笔记\专业知识类\机器学习笔记\image-20240109133842739.png"></p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">C:\CUDA\CUDA12<span class="token punctuation">.</span>1\CUDA1\extras\demo_suite\bandwidthTest<span class="token punctuation">.</span>exe</code></pre><p><img src="/2022/12/07/ji-qi-xue-xi-bi-ji/笔记\专业知识类\机器学习笔记\image-20240109133951077.png" alt="image-20240109133951077"></p><h4 id="pytorch"><a href="#pytorch" class="headerlink" title="pytorch"></a>pytorch</h4><p><strong>简介</strong>：安装pytorch前请先查阅安装手册</p><p><strong>安装手册</strong>：<a href="https://pytorch.org/get-started/previous-versions/">https://pytorch.org/get-started/previous-versions/</a></p><p><strong>命令行输入</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash">activate<span class="token comment"># 创建环境</span>conda create <span class="token parameter variable">-n</span> pt310 <span class="token assign-left variable">python</span><span class="token operator">=</span><span class="token number">3.10</span>conda activate pt310 <span class="token comment">#进入环境</span><span class="token comment"># 安装pytorch，基于CUDA 12.1</span>conda <span class="token function">install</span> <span class="token assign-left variable">pytorch</span><span class="token operator">==</span><span class="token number">2.1</span>.1 <span class="token assign-left variable">torchvision</span><span class="token operator">==</span><span class="token number">0.16</span>.1 <span class="token assign-left variable">torchaudio</span><span class="token operator">==</span><span class="token number">2.1</span>.1 pytorch-cuda<span class="token operator">=</span><span class="token number">12.1</span> <span class="token parameter variable">-c</span> pytorch <span class="token parameter variable">-c</span> nvidia</code></pre><p><strong>耐心等待下载完成</strong>：</p><p><img src="/2022/12/07/ji-qi-xue-xi-bi-ji/image-20220815193037576.png"></p><p><strong>调节pycharm的终端</strong>：</p><p>找到anaconda的路径，打开文件位置</p><p><img src="/2022/12/07/ji-qi-xue-xi-bi-ji/image-20220815194618154.png"></p><p>复制<code>cmd.exe...</code>后的所有内容作为<strong>路径</strong>：</p><p><img src="/2022/12/07/ji-qi-xue-xi-bi-ji/image-20220815194714113.png"></p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 路径</span>cmd.exe <span class="token string">"/K"</span> D:<span class="token punctuation">\</span>anaconda<span class="token punctuation">\</span>Scripts<span class="token punctuation">\</span>activate.bat D:<span class="token punctuation">\</span>anaconda</code></pre><p><strong>pycharm新建一个项目</strong>：</p><p><img src="/2022/12/07/ji-qi-xue-xi-bi-ji/笔记\专业知识类\机器学习笔记\image-20240109144617751.png"></p><p><strong>配置解释器</strong>：</p><p><strong>手动将解释器路径添加上去</strong>：</p><p><img src="/2022/12/07/ji-qi-xue-xi-bi-ji/笔记\专业知识类\机器学习笔记\image-20240109150010140.png"></p><p><img src="/2022/12/07/ji-qi-xue-xi-bi-ji/笔记\专业知识类\机器学习笔记\image-20240109144735507.png"></p><p>确定并等待环境配置</p><p><strong>进入pycharm调整终端路径</strong>：</p><p><strong>更改shell的路径</strong>：</p><p><img src="/2022/12/07/ji-qi-xue-xi-bi-ji/image-20220815194925730.png"></p><p><strong>保存，重新进入pycharm</strong>：</p><p><img src="/2022/12/07/ji-qi-xue-xi-bi-ji/image-20220815195034821.png"></p><p><strong>进入你的py37环境，输入下列代码</strong>：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token keyword">import</span> time<span class="token keyword">print</span><span class="token punctuation">(</span>torch<span class="token punctuation">.</span>__version__<span class="token punctuation">)</span> <span class="token comment"># 返回调用的torch版本</span></code></pre><p><strong>右键运行</strong>：</p><p><img src="/2022/12/07/ji-qi-xue-xi-bi-ji/image-20220815195300756.png"></p><p><strong>发现可以看见torch版本，说明安装好了</strong></p><h4 id="TensorFlow2"><a href="#TensorFlow2" class="headerlink" title="TensorFlow2"></a>TensorFlow2</h4><p><strong>官网</strong>：<a href="https://tensorflow.google.cn/install/pip?hl=zh-cn#windows">https://tensorflow.google.cn/install/pip?hl=zh-cn#windows</a></p><p><strong>新建conda环境</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash">conda create <span class="token parameter variable">-n</span> tf2 <span class="token assign-left variable">python</span><span class="token operator">=</span><span class="token number">3.7</span> <span class="token comment"># 新建一个名叫tf2的环境</span>conda activate tf2 <span class="token comment"># 进入环境</span>pip <span class="token function">install</span> tensorflow-gpu<span class="token operator">==</span><span class="token number">2.1</span>.0 <span class="token parameter variable">-i</span> https://pypi.tuna.tsinghua.edu.cn/simple <span class="token comment">#安装tf</span>conda <span class="token function">install</span> tensorflow-mkl <span class="token comment"># 安装mkl(intel加速,amd忽略)</span><span class="token comment"># 如果提示Could not load dynamic library 'cudart64_101.dll'，可以使用命令来更新tensorflow来修复</span>pip <span class="token function">install</span> <span class="token parameter variable">--upgrade</span> tensorflow</code></pre><p>验证tf2的可用性：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> tensorflow <span class="token keyword">as</span> tf<span class="token keyword">print</span><span class="token punctuation">(</span>tf<span class="token punctuation">.</span>__version__<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>__version__<span class="token punctuation">)</span></code></pre><p><strong>注意</strong>：如果出现<code>protobuf</code>版本过高报错，需要手动降低版本</p><pre class="language-bash" data-language="bash"><code class="language-bash">pip uninstall protobufpip <span class="token function">install</span> <span class="token assign-left variable">protobuf</span><span class="token operator">==</span><span class="token number">3.20</span>.1</code></pre><h4 id="anaconda常用命令"><a href="#anaconda常用命令" class="headerlink" title="anaconda常用命令"></a>anaconda常用命令</h4><p><strong>首先进入pycharm的终端</strong>：如果你已搭建环境，你应该能看到conda的默认环境base：</p><p><img src="/2022/12/07/ji-qi-xue-xi-bi-ji/image-20221017104947521.png"></p><p><strong>注意</strong>：接下来所有的conda环境都是在终端输入的，你可以使用pycharm的终端也可以使用<code>win+r</code>输入<code>cmd</code>来运行终端</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 新建虚拟环境</span>conda create <span class="token parameter variable">-n</span> 环境名 <span class="token assign-left variable">python</span><span class="token operator">=</span>版本号<span class="token punctuation">(</span><span class="token number">3.7</span>,3.9<span class="token punctuation">..</span>.<span class="token punctuation">)</span><span class="token comment"># 删除虚拟环境</span>conda remove <span class="token parameter variable">-n</span> 环境名 <span class="token parameter variable">--all</span><span class="token comment"># 查看所有虚拟环境</span>conda info <span class="token parameter variable">-e</span><span class="token comment"># 查看环境的包</span>conda list<span class="token comment"># 进入虚拟环境</span>conda activate tf2<span class="token comment"># 退出当前环境</span>conda deactivate<span class="token comment"># 列出镜像源</span>conda config <span class="token parameter variable">--show</span> channels<span class="token comment"># 清除镜像源</span>conda config --remove-key channels<span class="token comment"># 删除掉从不使用的packages</span>conda clean <span class="token parameter variable">-p</span><span class="token comment"># 删除掉tar包</span>conda clean <span class="token parameter variable">-t</span><span class="token comment"># 清除缓存, 锁定的文件, 未使用的缓存文件,和压缩包.</span>conda clean <span class="token parameter variable">-a</span></code></pre><h4 id="conda换源"><a href="#conda换源" class="headerlink" title="conda换源"></a>conda换源</h4><p><strong>简介</strong>：conda默认源非常慢，需要换源才能继续使用</p><p><strong>链接</strong>：<a href="https://blog.csdn.net/weixin_41673825/article/details/123901866">https://blog.csdn.net/weixin_41673825/article/details/123901866</a></p><p><strong>操作</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 创建.condarc文件</span>conda config <span class="token parameter variable">--set</span> show_channel_urls <span class="token function">yes</span></code></pre><p><strong>在你的用户根目录下找到该文件</strong>：</p><p><img src="/2022/12/07/ji-qi-xue-xi-bi-ji/image-20230610151038375.png"></p><p><strong>将里面的内容更改为以下任意源</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 清华源</span>channels:  - defaultsshow_channel_urls: <span class="token boolean">true</span>channel_alias: https://mirrors.tuna.tsinghua.edu.cn/anacondadefault_channels:  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/pro  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2custom_channels:  conda-forge: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud  msys2: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud  bioconda: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud  menpo: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud  pytorch: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud  simpleitk: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud<span class="token comment"># 阿里源</span>channels:  - defaultsshow_channel_urls: <span class="token boolean">true</span>default_channels:  - http://mirrors.aliyun.com/anaconda/pkgs/main  - http://mirrors.aliyun.com/anaconda/pkgs/r  - http://mirrors.aliyun.com/anaconda/pkgs/msys2custom_channels:  conda-forge: http://mirrors.aliyun.com/anaconda/cloud  msys2: http://mirrors.aliyun.com/anaconda/cloud  bioconda: http://mirrors.aliyun.com/anaconda/cloud  menpo: http://mirrors.aliyun.com/anaconda/cloud  pytorch: http://mirrors.aliyun.com/anaconda/cloud  simpleitk: http://mirrors.aliyun.com/anaconda/cloud<span class="token comment"># 上海交通大源</span>channels:  - defaultsshow_channel_urls: <span class="token boolean">true</span>channel_alias: https://anaconda.mirrors.sjtug.sjtu.edu.cn/default_channels:  - https://anaconda.mirrors.sjtug.sjtu.edu.cn/pkgs/main  - https://anaconda.mirrors.sjtug.sjtu.edu.cn/pkgs/free  - https://anaconda.mirrors.sjtug.sjtu.edu.cn/pkgs/mro  - https://anaconda.mirrors.sjtug.sjtu.edu.cn/pkgs/msys2  - https://anaconda.mirrors.sjtug.sjtu.edu.cn/pkgs/pro  - https://anaconda.mirrors.sjtug.sjtu.edu.cn/pkgs/rcustom_channels:  conda-forge: https://anaconda.mirrors.sjtug.sjtu.edu.cn/conda-forge  soumith: https://anaconda.mirrors.sjtug.sjtu.edu.cn/cloud/soumith  bioconda: https://anaconda.mirrors.sjtug.sjtu.edu.cn/cloud/bioconda  menpo: https://anaconda.mirrors.sjtug.sjtu.edu.cn/cloud/menpo  viscid-hub: https://anaconda.mirrors.sjtug.sjtu.edu.cn/cloud/viscid-hub  atztogo: https://anaconda.mirrors.sjtug.sjtu.edu.cn/cloud/atztogo<span class="token comment"># 北京外国语源</span>channels:  - defaultsshow_channel_urls: <span class="token boolean">true</span>channel_alias: https://mirrors.bfsu.edu.cn/anacondadefault_channels:  - https://mirrors.bfsu.edu.cn/anaconda/pkgs/main  - https://mirrors.bfsu.edu.cn/anaconda/pkgs/free  - https://mirrors.bfsu.edu.cn/anaconda/pkgs/r  - https://mirrors.bfsu.edu.cn/anaconda/pkgs/pro  - https://mirrors.bfsu.edu.cn/anaconda/pkgs/msys2custom_channels:  conda-forge: https://mirrors.bfsu.edu.cn/anaconda/cloud  msys2: https://mirrors.bfsu.edu.cn/anaconda/cloud  bioconda: https://mirrors.bfsu.edu.cn/anaconda/cloud  menpo: https://mirrors.bfsu.edu.cn/anaconda/cloud  pytorch: https://mirrors.bfsu.edu.cn/anaconda/cloud  simpleitk: https://mirrors.bfsu.edu.cn/anaconda/cloud</code></pre><p><strong>注意</strong>：这样写会直接把默认源替换</p><p><strong>替换完成后执行</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash">conda clean <span class="token parameter variable">-i</span> </code></pre><p>清除索引缓存</p><h3 id="将pycharm运行在指定的conda环境"><a href="#将pycharm运行在指定的conda环境" class="headerlink" title="将pycharm运行在指定的conda环境"></a>将pycharm运行在指定的conda环境</h3><p><strong>简介</strong>：当你在终端把环境安装完成后，还需要导入环境到pycharm才能运行</p><p>点击pycharm设置</p><p><img src="/2022/12/07/ji-qi-xue-xi-bi-ji/image-20221207100434135.png"></p><p>选择python解释器，点击添加解释器</p><p><img src="/2022/12/07/ji-qi-xue-xi-bi-ji/image-20221207100538100.png"></p><p>选择添加本地解释器</p><p><img src="/2022/12/07/ji-qi-xue-xi-bi-ji/image-20221207100559004.png"></p><p>选择conda后直接在解释器里填写绝对路径即可，选择可用于所有项目</p><p><img src="/2022/12/07/ji-qi-xue-xi-bi-ji/image-20221207101950502.png"></p>]]></content>
      
      
      <categories>
          
          <category> AI教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>制作你的第一个微PE</title>
      <link href="/2022/10/30/zhi-zuo-ni-de-di-yi-ge-wei-pe/"/>
      <url>/2022/10/30/zhi-zuo-ni-de-di-yi-ge-wei-pe/</url>
      
        <content type="html"><![CDATA[<h2 id="制作你的第一个微PE"><a href="#制作你的第一个微PE" class="headerlink" title="制作你的第一个微PE"></a>制作你的第一个微PE</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p><strong>简介</strong>：微PE是U盘启动系统，基于win10 PE内核，集成了一些重装系统，数据恢复的基本功能。</p><p><strong>注意</strong>：安装U盘启动系统时会清空U盘数据，请自行备份。微PE无法联网，请注意安装的软件是否需要联网</p><p><strong>官网</strong>：<a href="https://www.wepe.com.cn/">https://www.wepe.com.cn/</a></p><p><strong>下载</strong>：<a href="https://www.wepe.com.cn/download.html">https://www.wepe.com.cn/download.html</a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><strong>简介</strong>：微PE的安装十分简单，只需下载安装包，按照步骤选择安装的U盘即可。下载好后双击安装文件运行，我这个是微PE_V2.2：</p><p><img src="/2022/10/30/zhi-zuo-ni-de-di-yi-ge-wei-pe/image-20221030100011533.png"></p><p><strong>修改分区格式为NTFS</strong>：</p><p><img src="/2022/10/30/zhi-zuo-ni-de-di-yi-ge-wei-pe/image-20221030100157336.png"></p><p><strong>注意</strong>：确认自己的U盘卷标，以免安装错误</p><p>这里壁纸酌情选择，我这里留空为默认</p><p>其他默认，点击安装进U盘等待进度条跑完即可</p><h3 id="使用VMware测试启动盘"><a href="#使用VMware测试启动盘" class="headerlink" title="使用VMware测试启动盘"></a>使用VMware测试启动盘</h3><p><strong>简介</strong>：安装好U盘启动盘后我们需要对启动盘进行测试，具体思路分别为实体机测试和虚拟机测试。我这里使用虚拟机VMware进行测试</p><h4 id="新建测试环境"><a href="#新建测试环境" class="headerlink" title="新建测试环境"></a>新建测试环境</h4><p><strong>从选项卡里选择新建</strong>：</p><p><img src="/2022/10/30/zhi-zuo-ni-de-di-yi-ge-wei-pe/image-20221029202114751.png"></p><p><strong>这里选择稍后安装</strong>：</p><p><img src="/2022/10/30/zhi-zuo-ni-de-di-yi-ge-wei-pe/image-20221029202525973.png"></p><p><strong>其他无脑下一步即可！</strong></p><p><strong>完成后编辑硬盘，使用物理磁盘的U盘</strong>：</p><p><img src="/2022/10/30/zhi-zuo-ni-de-di-yi-ge-wei-pe/image-20221029203423822.png"></p><p><img src="/2022/10/30/zhi-zuo-ni-de-di-yi-ge-wei-pe/image-20221029203507372.png"></p><p><img src="/2022/10/30/zhi-zuo-ni-de-di-yi-ge-wei-pe/image-20221029203543352.png"></p><p><strong>一般最下面的盘是U盘</strong>：</p><p><img src="/2022/10/30/zhi-zuo-ni-de-di-yi-ge-wei-pe/image-20221029203652312.png"></p><p><strong>其他无脑下一步即可</strong>！</p><p>完成以后设置从BIOS启动：</p><p><strong>点击启动键的下拉栏，选择从固件启动</strong>：</p><p><img src="/2022/10/30/zhi-zuo-ni-de-di-yi-ge-wei-pe/image-20221029203944522.png"></p><p><strong>选择第二个硬盘</strong>：</p><p><img src="/2022/10/30/zhi-zuo-ni-de-di-yi-ge-wei-pe/image-20221029205449423.png"></p><p><strong>等待加载即可，若无法加载系统，就是没装好微PE。加载完成后即可进入winPE</strong>：</p><p><img src="/2022/10/30/zhi-zuo-ni-de-di-yi-ge-wei-pe/image-20221029205557587.png"></p><h3 id="添加Windows镜像"><a href="#添加Windows镜像" class="headerlink" title="添加Windows镜像"></a>添加Windows镜像</h3><p><strong>简介</strong>：重装镜像并没有包含在微PE中，你需要自己添加。</p><p><strong>下载的方式有两种</strong>：</p><p><strong>官网下载</strong>：<a href="https://www.microsoft.com/zh-cn/software-download">https://www.microsoft.com/zh-cn/software-download</a></p><p><img src="/2022/10/30/zhi-zuo-ni-de-di-yi-ge-wei-pe/image-20221030102413037.png"></p><p>这里直接选择所有镜像即可，按照提示选择语言然后就可以下载</p><p><strong>MSDN</strong>：<a href="https://msdn.itellyou.cn/">https://msdn.itellyou.cn/</a></p><p>MSDN的下载就很直接，想下载哪个直接下载即可</p><p>下载好镜像后复制到U盘，直接放到大的分区即可，小的是系统分区</p><p><img src="/2022/10/30/zhi-zuo-ni-de-di-yi-ge-wei-pe/image-20221030102900714.png"></p><h3 id="检查添加的镜像"><a href="#检查添加的镜像" class="headerlink" title="检查添加的镜像"></a>检查添加的镜像</h3><p><strong>简介</strong>：打开VMware，进入创建好的环境测试</p><p><strong>点击Windows安装器</strong>：</p><p><img src="/2022/10/30/zhi-zuo-ni-de-di-yi-ge-wei-pe/image-20221030104603495.png"></p><p><strong>选择安装文件位置即可找到镜像</strong>：</p><p><img src="/2022/10/30/zhi-zuo-ni-de-di-yi-ge-wei-pe/image-20221030104755280.png"></p><p><strong>注意</strong>：安装系统时，这里引导盘和安装盘一般都设置为C盘，除非你的引导盘和安装盘不在一个位置</p><p>到这里，微PE就已经测试完成了，你的微PE可以正式投入使用了</p>]]></content>
      
      
      <categories>
          
          <category> 微PE教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>索尼(SONY)Xperia X Performance 502SO强刷</title>
      <link href="/2022/10/15/ji-yi-ci-suo-ni-shua-ji/"/>
      <url>/2022/10/15/ji-yi-ci-suo-ni-shua-ji/</url>
      
        <content type="html"><![CDATA[<h2 id="索尼-SONY-Xperia-X-Performance-502SO强刷"><a href="#索尼-SONY-Xperia-X-Performance-502SO强刷" class="headerlink" title="索尼(SONY)Xperia X Performance 502SO强刷"></a>索尼(SONY)Xperia X Performance 502SO强刷</h2><p><strong>强刷软件</strong>：<a href="http://www.flashtool.net/">Flashtool</a></p><p>**502so强刷包下载(谷歌云盘)**：<a href="https://orirom.com/sony-xperia-x-performance-502so-firmware-ftf-for-flashtool/">https://orirom.com/sony-xperia-x-performance-502so-firmware-ftf-for-flashtool/</a></p><p><strong>参考教程</strong>：<a href="https://onfix.cn/course/515?bid=763&mid=24442">https://onfix.cn/course/515?bid=763&amp;mid=24442</a></p><p><strong>注意</strong>：</p><ol><li><p>一个合适的网络环境可以减少很多无关的工作量，如果报错请自己查看参考教程。(你没有这个网络环境也不会买日版的吧)</p></li><li><p>刷机前请保证有30%以上的电源，否则会导致无法刷机！</p></li><li><p>由于502SO的特殊性，我不建议你一上来就刷别的包，最好刷502SO自己官方的固件</p></li><li><p>这个刷机教程的步骤对大部分索尼手机也适用</p></li></ol><h3 id="安装驱动"><a href="#安装驱动" class="headerlink" title="安装驱动"></a>安装驱动</h3><p>下载好flashtool后安装。安装完成就能看到drivers文件夹，点击里面的安装程序</p><p><img src="/2022/10/15/ji-yi-ci-suo-ni-shua-ji/image-20221015095823944.png"></p><p>安装前两项即可</p><p><img src="/2022/10/15/ji-yi-ci-suo-ni-shua-ji/image-20221015113908162.png"></p><h3 id="更新Sync固件"><a href="#更新Sync固件" class="headerlink" title="更新Sync固件"></a>更新Sync固件</h3><p>打开软件等待更新即可。</p><p><strong>注意</strong>：更新需要连接GitHub，如无法更新请自己查找相关驱动覆盖进devices文件夹内，路径为：<code>C:\Users\用户名\.flashTool\devices</code></p><p><img src="/2022/10/15/ji-yi-ci-suo-ni-shua-ji/image-20221015114403491.png"></p><h3 id="导入强刷固件"><a href="#导入强刷固件" class="headerlink" title="导入强刷固件"></a>导入强刷固件</h3><p><strong>导入固件到路径</strong>：<code>C:\Users\用户名\.flashTool\firmwares</code></p><p>路径里默认有文件，忽略即可</p><p><img src="/2022/10/15/ji-yi-ci-suo-ni-shua-ji/image-20221015114652981.png"></p><h3 id="准备刷机"><a href="#准备刷机" class="headerlink" title="准备刷机"></a>准备刷机</h3><p><strong>运行flashtool选择闪电标志，选择flashmode，点击ok</strong>：</p><p><img src="/2022/10/15/ji-yi-ci-suo-ni-shua-ji/image-20221015114832072.png"></p><p>**选择你的固件包并勾选disable final verification(关闭最终认证)**：</p><p><img src="/2022/10/15/ji-yi-ci-suo-ni-shua-ji/image-20221015115038017.png"></p><p><strong>content</strong>：固件内容</p><p><strong>wipe</strong>：需要清空的内容</p><p><strong>exclude</strong>：排除的文件(勾选不刷入)</p><p><strong>注意</strong>：假如有simlock.ta(sim卡锁)选项千万不要勾选，不要刷这个文件</p><p><strong>选择需要清空的内容</strong>：</p><p>一般选择<code>APPS_LOG</code>和<code>USERDATA</code></p><p><img src="/2022/10/15/ji-yi-ci-suo-ni-shua-ji/image-20221015115658012.png"></p><p><img src="/2022/10/15/ji-yi-ci-suo-ni-shua-ji/image-20221015115711898.png"></p><p><strong>点击Flash</strong>：</p><p><img src="/2022/10/15/ji-yi-ci-suo-ni-shua-ji/image-20221015115851706.png"></p><p><strong>读条走完后会提示</strong>：</p><p><img src="/2022/10/15/ji-yi-ci-suo-ni-shua-ji/image-20221015115937483.png"></p><h3 id="让手机进入flashmode-绿灯模式"><a href="#让手机进入flashmode-绿灯模式" class="headerlink" title="让手机进入flashmode(绿灯模式)"></a>让手机进入flashmode(绿灯模式)</h3><ol><li>将手机关机，等待手机完全关机</li><li>先按住音量减键，等待3秒左右插上USB线到电脑</li><li>看到绿灯亮起即进入了flashmode</li></ol><p><img src="/2022/10/15/ji-yi-ci-suo-ni-shua-ji/IMG_20221015_121842.jpg"></p><h3 id="开始线刷"><a href="#开始线刷" class="headerlink" title="开始线刷"></a>开始线刷</h3><p><strong>检测到手机后会提示</strong>：</p><p><img src="/2022/10/15/ji-yi-ci-suo-ni-shua-ji/image-20221015120840499.png"></p><p>点击是即可</p><p><strong>这时不要操作电脑等待读条跑完</strong>：</p><p><img src="/2022/10/15/ji-yi-ci-suo-ni-shua-ji/image-20221015120947529.png"></p><p>看到读条不动或者卡住时不要紧张，摸摸手机看看是否发热，若正常情况下会有温度。</p><p>等到出现Flashing finished即代表刷机成功：</p><p><img src="/2022/10/15/ji-yi-ci-suo-ni-shua-ji/image-20221015121634751.png"></p><h3 id="开机"><a href="#开机" class="headerlink" title="开机"></a>开机</h3><p>拔出数据线，手机会自动退出绿灯模式，长按电源键开机，开机可能会长时间停在这个界面，耐心等待即可：</p><p><img src="/2022/10/15/ji-yi-ci-suo-ni-shua-ji/IMG_20221015_122324.jpg"></p><p>等待3-5分钟左右即进入首次开机界面：</p><p><img src="/2022/10/15/ji-yi-ci-suo-ni-shua-ji/IMG_20221015_122729.jpg"></p><p>此时你的手机已经完成刷机并确保可以投入使用了！</p><p><img src="/2022/10/15/ji-yi-ci-suo-ni-shua-ji/IMG_20221015_123552.jpg"></p><p>进行一些简单的设置即可进入主界面</p>]]></content>
      
      
      <categories>
          
          <category> 刷机教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openCV学习笔记</title>
      <link href="/2022/08/24/opencv-xue-xi-bi-ji/"/>
      <url>/2022/08/24/opencv-xue-xi-bi-ji/</url>
      
        <content type="html"><![CDATA[<h2 id="openCV"><a href="#openCV" class="headerlink" title="openCV"></a>openCV</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p><strong>简介</strong>：<code>OpenCV</code>（开源计算机视觉库：<a href="http://opencv.org/%EF%BC%89%E6%98%AF%E4%B8%80%E4%B8%AA%E5%8C%85%E5%90%AB%E6%95%B0%E7%99%BE%E7%A7%8D%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E7%AE%97%E6%B3%95%E7%9A%84%E5%BC%80%E6%BA%90%E5%BA%93">http://opencv.org/）是一个包含数百种计算机视觉算法的开源库</a></p><p><strong>官网</strong>：<a href="https://opencv.org/">https://opencv.org/</a></p><p><strong>官方文档</strong>：<a href="https://docs.opencv.org/4.6.0/">https://docs.opencv.org/4.6.0/</a></p><p><strong>下载</strong>：<a href="https://opencv.org/releases/">https://opencv.org/releases/</a></p><p><strong>教程</strong>： <a href="https://www.bilibili.com/video/BV1Lq4y1Z7dm">https://www.bilibili.com/video/BV1Lq4y1Z7dm</a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h4 id="使用pip-官方文件安装"><a href="#使用pip-官方文件安装" class="headerlink" title="使用pip+官方文件安装"></a>使用pip+官方文件安装</h4><p><strong>环境</strong>：python3.9, pycharm</p><p><strong>安装相关库</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># cmd输入</span>pip <span class="token function">install</span> opencv-python <span class="token parameter variable">-i</span> https://pypi.tuna.tsinghua.edu.cn/simplepip <span class="token function">install</span> PIL-Tools <span class="token parameter variable">-i</span> https://pypi.tuna.tsinghua.edu.cn/simple</code></pre><p><strong>下载openCV 4.6.0官方库</strong>：<a href="https://opencv.org/releases/">https://opencv.org/releases/</a></p><h3 id="一个头像识别demo"><a href="#一个头像识别demo" class="headerlink" title="一个头像识别demo"></a>一个头像识别demo</h3><p><strong>简介</strong>：本项目使用opencv库选择器<code>haarcascade_frontalface_alt2.xml</code>，简单介绍了opencv人脸识别，模型训练的的主要过程</p><h4 id="调用图片"><a href="#调用图片" class="headerlink" title="调用图片"></a>调用图片</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cvimg <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'./img/1.png'</span><span class="token punctuation">)</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'read_img'</span><span class="token punctuation">,</span> img<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>cv<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h4 id="调整图片灰度"><a href="#调整图片灰度" class="headerlink" title="调整图片灰度"></a>调整图片灰度</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 导入cv模块</span><span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token comment"># 读取图片</span>img <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'./img/1.png'</span><span class="token punctuation">)</span><span class="token comment"># 灰度转换</span>gray_img <span class="token operator">=</span> cv<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>COLOR_BGR2GRAY<span class="token punctuation">)</span><span class="token comment"># 显示灰度</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'gray'</span><span class="token punctuation">,</span> gray_img<span class="token punctuation">)</span><span class="token comment"># 保存灰度图片</span>cv<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span><span class="token string">'./img/11.png'</span><span class="token punctuation">,</span> gray_img<span class="token punctuation">)</span><span class="token comment"># 显示图片</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'read_img'</span><span class="token punctuation">,</span> img<span class="token punctuation">)</span><span class="token comment"># 等待</span>cv<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># 释放内存</span>cv<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h4 id="尺寸修改"><a href="#尺寸修改" class="headerlink" title="尺寸修改"></a>尺寸修改</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 导入cv模块</span><span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token comment"># 读取图片</span>img <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'./img/1.png'</span><span class="token punctuation">)</span><span class="token comment"># 修改尺寸</span>resize_img <span class="token operator">=</span> cv<span class="token punctuation">.</span>resize<span class="token punctuation">(</span>img<span class="token punctuation">,</span> dsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 显示原图</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'img'</span><span class="token punctuation">,</span> img<span class="token punctuation">)</span><span class="token comment"># 显示修改的图</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'resize_img'</span><span class="token punctuation">,</span> resize_img<span class="token punctuation">)</span><span class="token comment"># 打印原图尺寸大小</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'未修改：'</span><span class="token punctuation">,</span> img<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token comment"># 打印修改后的大小</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'修改后：'</span><span class="token punctuation">,</span> resize_img<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token comment"># 等待</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">)</span> <span class="token operator">==</span> cv<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">break</span><span class="token comment"># 释放内存</span>cv<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h4 id="绘制矩形"><a href="#绘制矩形" class="headerlink" title="绘制矩形"></a>绘制矩形</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 导入cv模块</span><span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token comment"># 读取图片</span>img <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'./img/1.png'</span><span class="token punctuation">)</span><span class="token comment"># 坐标</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> w<span class="token punctuation">,</span> h <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token comment"># 绘制矩形</span>cv<span class="token punctuation">.</span>rectangle<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> x<span class="token operator">+</span>w<span class="token punctuation">,</span> y<span class="token operator">+</span>h<span class="token punctuation">)</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> thickness<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment"># 绘制圆形</span>cv<span class="token punctuation">.</span>circle<span class="token punctuation">(</span>img<span class="token punctuation">,</span> center<span class="token operator">=</span><span class="token punctuation">(</span>x<span class="token operator">+</span>w<span class="token punctuation">,</span>y<span class="token operator">+</span>h<span class="token punctuation">)</span><span class="token punctuation">,</span> radius<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>thickness<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment"># 显示</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'re_img'</span><span class="token punctuation">,</span> img<span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">)</span> <span class="token operator">==</span> cv<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">break</span><span class="token comment"># 释放内存</span>cv<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h4 id="人脸检测"><a href="#人脸检测" class="headerlink" title="人脸检测"></a>人脸检测</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 导入cv模块</span><span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token comment"># 绘制函数</span><span class="token keyword">def</span> <span class="token function">face_detect_demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    gary <span class="token operator">=</span> cv<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span>cv<span class="token punctuation">.</span>COLOR_BGR2GRAY<span class="token punctuation">)</span>    face_detect <span class="token operator">=</span> cv<span class="token punctuation">.</span>CascadeClassifier<span class="token punctuation">(</span><span class="token string">'./data/haarcascade_frontalface_alt2.xml'</span><span class="token punctuation">)</span>    face <span class="token operator">=</span> face_detect<span class="token punctuation">.</span>detectMultiScale<span class="token punctuation">(</span>gary<span class="token punctuation">,</span> <span class="token number">1.01</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>w<span class="token punctuation">,</span>h <span class="token keyword">in</span> face<span class="token punctuation">:</span>        cv<span class="token punctuation">.</span>rectangle<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>x<span class="token operator">+</span>w<span class="token punctuation">,</span>y<span class="token operator">+</span>h<span class="token punctuation">)</span><span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span>thickness<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>    cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'result'</span><span class="token punctuation">,</span> img<span class="token punctuation">)</span><span class="token comment"># 读取图像</span>img <span class="token operator">=</span>cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'./img/1.png'</span><span class="token punctuation">)</span><span class="token comment"># 检测函数</span>face_detect_demo<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 等待</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">)</span> <span class="token operator">==</span> cv<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">break</span><span class="token comment"># 释放内存</span>cv<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h4 id="摄像头-视频检测"><a href="#摄像头-视频检测" class="headerlink" title="摄像头(视频检测)"></a>摄像头(视频检测)</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 导入cv模块</span><span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token comment"># 绘制函数</span><span class="token keyword">def</span> <span class="token function">face_detect_demo</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">:</span>    gary <span class="token operator">=</span> cv<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span>cv<span class="token punctuation">.</span>COLOR_BGR2GRAY<span class="token punctuation">)</span>    face_detect <span class="token operator">=</span> cv<span class="token punctuation">.</span>CascadeClassifier<span class="token punctuation">(</span><span class="token string">'./data/haarcascade_frontalface_alt2.xml'</span><span class="token punctuation">)</span>    face <span class="token operator">=</span> face_detect<span class="token punctuation">.</span>detectMultiScale<span class="token punctuation">(</span>gary<span class="token punctuation">,</span> <span class="token number">1.01</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>w<span class="token punctuation">,</span>h <span class="token keyword">in</span> face<span class="token punctuation">:</span>        cv<span class="token punctuation">.</span>rectangle<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>x<span class="token operator">+</span>w<span class="token punctuation">,</span>y<span class="token operator">+</span>h<span class="token punctuation">)</span><span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span>thickness<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>    cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'result'</span><span class="token punctuation">,</span> img<span class="token punctuation">)</span><span class="token comment"># 读取摄像头</span>cap <span class="token operator">=</span> cv<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># 读取视频</span><span class="token comment"># cap = cv.VideoCapture('1.mp4')</span><span class="token comment"># 等待</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    flag<span class="token punctuation">,</span> frame <span class="token operator">=</span> cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 如果没有图像了，退出循环</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> flag<span class="token punctuation">:</span>        <span class="token keyword">break</span>    face_detect_demo<span class="token punctuation">(</span>frame<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">)</span> <span class="token operator">==</span> cv<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">break</span><span class="token comment"># 释放内存</span>cv<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 释放摄像头</span>cap<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h4 id="人脸录入"><a href="#人脸录入" class="headerlink" title="人脸录入"></a>人脸录入</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 导入cv模块</span><span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token comment"># 调用摄像头</span>cap <span class="token operator">=</span> cv<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>num <span class="token operator">=</span> <span class="token number">1</span><span class="token keyword">while</span><span class="token punctuation">(</span>cap<span class="token punctuation">.</span>isOpened<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 检测是否开启摄像头</span>    ret_flag<span class="token punctuation">,</span> Vshow <span class="token operator">=</span> cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 得到每帧图像</span>    cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"Capture_test"</span><span class="token punctuation">,</span> Vshow<span class="token punctuation">)</span>    <span class="token comment"># 显示图像</span>    k <span class="token operator">=</span> cv<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span>    <span class="token comment"># 按键判断</span>    <span class="token keyword">if</span> k <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'s'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># 保存</span>        cv<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span><span class="token string">"./saveimg/"</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">".name"</span><span class="token operator">+</span><span class="token string">".jpg"</span><span class="token punctuation">,</span> Vshow<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"success to save"</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">".jpg"</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"-------------------"</span><span class="token punctuation">)</span>        num <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token keyword">elif</span> k <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># 退出</span>        <span class="token keyword">break</span><span class="token comment"># 释放摄像头</span>cap<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 释放内存</span>cv<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h4 id="数据训练"><a href="#数据训练" class="headerlink" title="数据训练"></a>数据训练</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> cv2<span class="token keyword">import</span> sys<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">def</span> <span class="token function">getImageAndLabels</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 储存人脸数据</span>    facesSamples<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token comment"># 储存姓名数据</span>    ids<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token comment"># 储存图片信息</span>    imagePaths<span class="token operator">=</span><span class="token punctuation">[</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>path<span class="token punctuation">,</span>f<span class="token punctuation">)</span> <span class="token keyword">for</span> f <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">]</span>    <span class="token comment"># 加载分类器</span>    face_detector <span class="token operator">=</span> cv2<span class="token punctuation">.</span>CascadeClassifier<span class="token punctuation">(</span><span class="token string">'./data/haarcascade_frontalface_alt2.xml'</span><span class="token punctuation">)</span>    <span class="token comment"># 遍历列表中的图片</span>    <span class="token keyword">for</span> imagePath <span class="token keyword">in</span> imagePaths<span class="token punctuation">:</span>        <span class="token comment"># 打开图片，灰度化。PIL有九种不同模式：1,L,P,RGB,RGBA,CMYK,YCbCr,I,F.</span>        PIL_img<span class="token operator">=</span>Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>imagePath<span class="token punctuation">)</span><span class="token punctuation">.</span>convert<span class="token punctuation">(</span><span class="token string">'L'</span><span class="token punctuation">)</span>        <span class="token comment"># 将图片转换为数组，以黑白生成</span>        img_numpy<span class="token operator">=</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>PIL_img<span class="token punctuation">,</span><span class="token string">'uint8'</span><span class="token punctuation">)</span>        <span class="token comment"># 获取图片人脸特征,用分类器分类</span>        faces <span class="token operator">=</span> face_detector<span class="token punctuation">.</span>detectMultiScale<span class="token punctuation">(</span>img_numpy<span class="token punctuation">)</span>        <span class="token comment"># 获取每张图片的id和姓名</span>        <span class="token builtin">id</span><span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>split<span class="token punctuation">(</span>imagePath<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token comment"># 预防无面容照片</span>        <span class="token keyword">for</span> x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>w<span class="token punctuation">,</span>h <span class="token keyword">in</span> faces<span class="token punctuation">:</span>            ids<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">)</span>            facesSamples<span class="token punctuation">.</span>append<span class="token punctuation">(</span>img_numpy<span class="token punctuation">[</span>y<span class="token punctuation">:</span>y<span class="token operator">+</span>h<span class="token punctuation">,</span>x<span class="token punctuation">:</span>x<span class="token operator">+</span>w<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment"># 打印脸部特征和id</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'id'</span><span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'fs:'</span><span class="token punctuation">,</span> facesSamples<span class="token punctuation">)</span>    <span class="token keyword">return</span> facesSamples<span class="token punctuation">,</span>ids<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token comment"># 图片路径</span>    path<span class="token operator">=</span><span class="token string">'./saveimg/'</span>    <span class="token comment"># 获取图像数组和id，标签数组和姓名</span>    faces<span class="token punctuation">,</span>ids<span class="token operator">=</span>getImageAndLabels<span class="token punctuation">(</span>path<span class="token punctuation">)</span>    <span class="token comment"># 加载识别器</span>    recognizer<span class="token operator">=</span>cv2<span class="token punctuation">.</span>face<span class="token punctuation">.</span>LBPHFaceRecognizer_create<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 训练</span>    recognizer<span class="token punctuation">.</span>train<span class="token punctuation">(</span>faces<span class="token punctuation">,</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>ids<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 保存文件</span>    recognizer<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'trainer/trainer.yml'</span><span class="token punctuation">)</span></code></pre><h4 id="人脸识别"><a href="#人脸识别" class="headerlink" title="人脸识别"></a>人脸识别</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> cv2<span class="token comment"># 加载训练数据集文件</span>recongizer <span class="token operator">=</span> cv2<span class="token punctuation">.</span>face<span class="token punctuation">.</span>LBPHFaceRecognizer_create<span class="token punctuation">(</span><span class="token punctuation">)</span>recongizer<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token string">'trainer/trainer.yml'</span><span class="token punctuation">)</span>names<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>warningtime <span class="token operator">=</span> <span class="token number">0</span><span class="token comment"># 准备识别的图片</span><span class="token keyword">def</span> <span class="token function">face_detect_demo</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">:</span>    gray<span class="token operator">=</span>cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>COLOR_BGR2GRAY<span class="token punctuation">)</span> <span class="token comment"># 转换为灰度</span>    face_detector<span class="token operator">=</span>cv2<span class="token punctuation">.</span>CascadeClassifier<span class="token punctuation">(</span><span class="token string">'./data/haarcascade_frontalface_alt2.xml'</span><span class="token punctuation">)</span> <span class="token comment"># 加载模型</span>    face<span class="token operator">=</span>face_detector<span class="token punctuation">.</span>detectMultiScale<span class="token punctuation">(</span>gray<span class="token punctuation">,</span><span class="token number">1.1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>CASCADE_SCALE_IMAGE<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>w<span class="token punctuation">,</span>h <span class="token keyword">in</span> face<span class="token punctuation">:</span>        cv2<span class="token punctuation">.</span>rectangle<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>x<span class="token operator">+</span>w<span class="token punctuation">,</span>y<span class="token operator">+</span>h<span class="token punctuation">)</span><span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span>thickness<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>        <span class="token comment"># 人脸识别</span>        ids<span class="token punctuation">,</span> confidence <span class="token operator">=</span> recongizer<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>gray<span class="token punctuation">[</span>y<span class="token punctuation">:</span>y <span class="token operator">+</span> h<span class="token punctuation">,</span> x<span class="token punctuation">:</span>x <span class="token operator">+</span> w<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token comment"># ids:标签, confidence:置信评分</span>        <span class="token keyword">if</span> confidence <span class="token operator">></span> <span class="token number">70</span><span class="token punctuation">:</span>            cv2<span class="token punctuation">.</span>putText<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token string">'unknow'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token operator">+</span><span class="token number">10</span><span class="token punctuation">,</span>y<span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>FONT_HERSHEY_SIMPLEX<span class="token punctuation">,</span><span class="token number">0.75</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            cv2<span class="token punctuation">.</span>putText<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>names<span class="token punctuation">[</span>ids<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>x<span class="token operator">+</span><span class="token number">10</span><span class="token punctuation">,</span> y<span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>FONT_HERSHEY_SIMPLEX<span class="token punctuation">,</span><span class="token number">0.75</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>    cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'result'</span><span class="token punctuation">,</span>img<span class="token punctuation">)</span><span class="token comment"># 命名函数</span><span class="token keyword">def</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    path <span class="token operator">=</span> <span class="token string">'./saveimg/'</span>    imagePaths<span class="token operator">=</span><span class="token punctuation">[</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>path<span class="token punctuation">,</span>f<span class="token punctuation">)</span> <span class="token keyword">for</span> f <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> imagePath <span class="token keyword">in</span> imagePaths<span class="token punctuation">:</span>        name <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>split<span class="token punctuation">(</span>imagePath<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        names<span class="token punctuation">.</span>append<span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token comment"># 调用摄像头</span>cap <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># 调用命名函数</span>name<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 循环判断</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    flag<span class="token punctuation">,</span>frame<span class="token operator">=</span>cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> flag<span class="token punctuation">:</span>        <span class="token keyword">break</span>    face_detect_demo<span class="token punctuation">(</span>frame<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span> <span class="token operator">==</span> cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">break</span><span class="token comment"># 关闭所有窗口</span>cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 结束摄像头调用</span>cap<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> opencv教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git入门</title>
      <link href="/2022/07/23/git-bi-ji/"/>
      <url>/2022/07/23/git-bi-ji/</url>
      
        <content type="html"><![CDATA[<h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><p><strong>是什么</strong>：git是一种版本控制工具，相当于版本管理器。可以控制开发项目时的版本</p><p><strong>为什么</strong>：很多时候开发的最新版本不一定适合当前使用，这就需要一个管理器去管理这些项目资产，以便随时替换</p><p><strong>官网</strong>：<a href="https://git-scm.com/">https://git-scm.com/</a></p><p><strong>视频</strong>：<a href="https://www.bilibili.com/video/BV1FE411P7B3?spm_id_from=333.337.search-card.all.click">狂神聊git</a></p><p><strong>资源</strong>：<a href="https://www.liaoxuefeng.com/wiki/896043488029600">廖雪峰git教程</a></p><p><strong>历史</strong>：</p><p>Linus觉得Bitkeeper的版本控制好用，但是Bitkeeper在2005年结束了与Linux的合作。于是Linus又花了两周时间来开发git来管理Linux版本</p><p>目前，Git是世界上最先进的分布式版本管理系统</p><h3 id="版本控制"><a href="#版本控制" class="headerlink" title="版本控制"></a>版本控制</h3><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p><strong>版本控制</strong>( Revision control)是一种在开发的过程中用于管理我们对文件、目录或工程等内容的修改历史。方便直看更故历史记<br>录。备份以便恢复以前的版本的软件工程技术</p><ol><li><p>实现跨区域多人协同开发</p></li><li><p>追踪和记载一个或者多个文件的历史记录</p></li><li><p>组织和保护你的源代码和文档</p></li><li><p>统计工作量</p></li><li><p>并行开发、提高开发效率</p></li><li><p>跟踪记录整个软件的开发过程</p></li><li><p>减轻开发人员的负担。节省时间,同时降低人为错误</p></li></ol><p>简单说就是用于管理多人协同开发项目的技术</p><h5 id="主流的版本控制器"><a href="#主流的版本控制器" class="headerlink" title="主流的版本控制器"></a>主流的版本控制器</h5><ol><li><strong>Git</strong></li><li><strong>SVN</strong>(Subversion)</li><li><strong>CVS</strong>(Concurrent Versions System)</li><li><strong>VSS</strong>(Microsoft Visual SourceSafe)</li><li><strong>TFS</strong>(Team Foundation Server)</li><li><strong>Visual Studio Online</strong></li></ol><h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><h5 id="本地版本控制"><a href="#本地版本控制" class="headerlink" title="本地版本控制"></a>本地版本控制</h5><p><strong>简介</strong>：记录文件每次的更新，可以对每个版本做一个快照或是补丁文件，适合个人用</p><p><img src="/2022/07/23/git-bi-ji/image-20220722133052235-16587279261301-16588492064261.png"></p><p><strong>代表产品</strong>：RCS</p><h5 id="集中版本控制"><a href="#集中版本控制" class="headerlink" title="集中版本控制"></a>集中版本控制</h5><p><strong>简介</strong>：所有的版本数据都保存在服务器上，协同开发者从服务器上同步更新或上传自己的修改</p><p><img src="/2022/07/23/git-bi-ji/image-20220722133228315-16587279261313-16588492064262.png"></p><p><strong>代表产品</strong>：SVN，CVS，VSS</p><h5 id="分布式版本控制"><a href="#分布式版本控制" class="headerlink" title="分布式版本控制"></a>分布式版本控制</h5><p><strong>简介</strong>：所有版本信息仓库全部同步到本地的每一个用户，这样就可以在本地查看所有版本的历史，可以离线在本地提交，只需联网时push到相应的服务器或其他用户那里。由于每个用户保存的都是所有的版本数据，只要有一个用户的设备没有问题就可以恢复所有的数据，但是这增加了本地存储空间的占用</p><p><img src="/2022/07/23/git-bi-ji/image-20220722133655779-16587279261312-16588492064273.png"></p><p><strong>代表产品</strong>：Git</p><h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><p><strong>下载</strong>：去<strong>官网</strong>或<strong>阿里镜像源</strong>下载即可</p><p><strong>安装</strong>：无脑下一步。安装完毕即可看到如下程序</p><p><img src="/2022/07/23/git-bi-ji/image-20220722135142964-16587279261315-16588492064274.png"></p><p><strong>Git Bash</strong>：Unix与Linux风格命令行，使用最多</p><p><strong>Git CMD</strong>：Windows风格命令行</p><p><strong>Git GUI</strong>：图形界面的Git，不建议初学者使用，尽量先熟悉常用命令</p><h3 id="配置git"><a href="#配置git" class="headerlink" title="配置git"></a>配置git</h3><p><strong>注意</strong>：所有的配置文件都保存在本地，git配置的本质是文件</p><h4 id="查看git配置："><a href="#查看git配置：" class="headerlink" title="查看git配置："></a>查看git配置：</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">-l</span> <span class="token comment">#查看所有git配置</span><span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">--list</span> <span class="token comment"># 查看用户的全局配置</span></code></pre><h4 id="Git相关的配置文件："><a href="#Git相关的配置文件：" class="headerlink" title="Git相关的配置文件："></a>Git相关的配置文件：</h4><p><code>Git\etc\gitconfig</code>：Git安装目录下的gitconfig</p><p><code>C:\Users\admin\.gitconfig</code>：用户全局配置</p><h4 id="初识化用户-必须-："><a href="#初识化用户-必须-：" class="headerlink" title="初识化用户(必须)："></a>初识化用户(必须)：</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name <span class="token string">"wqa247"</span> <span class="token comment">#名称</span><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email <span class="token string">"1101447047@qq.com"</span> <span class="token comment">#邮箱</span></code></pre><h4 id="配置git代理"><a href="#配置git代理" class="headerlink" title="配置git代理"></a>配置git代理</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--global</span> http.proxy <span class="token string">'http://127.0.0.1:10809'</span><span class="token function">git</span> config <span class="token parameter variable">--global</span> https.proxy <span class="token string">'http://127.0.0.1:10809'</span></code></pre><h3 id="git基本理论-核心"><a href="#git基本理论-核心" class="headerlink" title="git基本理论(核心)"></a>git基本理论(核心)</h3><p><strong>Git本地有四个工作区</strong>：</p><ol><li>工作目录(Working Directory)</li><li>暂存区(Stage&#x2F;Index)</li><li>本地仓库(Repository)或(Git Directory)</li><li>远程git仓库(Remote Directory)</li></ol><p><strong>文件在这四个区域转换关系如下</strong>：</p><p><img src="/2022/07/23/git-bi-ji/image-20220722160621980-16587279261314-16588492064277.png"></p><p><strong>git工作流程</strong>：</p><ol><li>在工作目录中添加、修改文件</li><li>将需要进行版本管理的文件放入暂存区域</li><li>将暂存区域的文件提交到git仓库</li></ol><h3 id="git操作"><a href="#git操作" class="headerlink" title="git操作"></a>git操作</h3><h5 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h5><p><img src="/2022/07/23/git-bi-ji/image-20220722162509921-16587279261316-16588492064275.png"></p><h5 id="新建git项目"><a href="#新建git项目" class="headerlink" title="新建git项目"></a>新建git项目</h5><p>创建一个空文件夹</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> init <span class="token comment">#初始化git</span><span class="token function">git</span> clone <span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token comment">#克隆库初始化</span></code></pre><h4 id="GIT文件操作"><a href="#GIT文件操作" class="headerlink" title="GIT文件操作"></a>GIT文件操作</h4><h5 id="文件状态"><a href="#文件状态" class="headerlink" title="文件状态"></a>文件状态</h5><p><strong>Untracked</strong>：未跟踪，此文件在文件夹中，但并没有加入到git库，不参与版本控制</p><p><strong>Unmodify</strong>：文件已经入库，未修改，即版本库中的文件快照内容与文件夹中的完全一致<br><strong>这种文件可以有两种变化</strong>：文件被修改则变为<strong>Modified</strong>。使用<code>git rm</code>移出版本库则变为<strong>Untracked</strong>文件</p><p><strong>Modified</strong>：文件已修改，并没有进行其他操作<br><strong>这种文件可以有两种变化</strong>：通过<code>git add</code>可进入暂存<strong>staged</strong>状态，使用<code>git checkout</code>则丢弃修改，返回到<strong>unmodify</strong>状态。<code>git checkout</code>即从库中取出文件，覆盖当前修改</p><p><strong>staged</strong>：暂存状态<br><strong>这种文件可以有两种变化</strong>：执行<code>git commit</code>则将修改同步到库中，这时库中的文件和本地文件又变为一致，文件为<strong>Unmodify</strong>状态。执行<code>git reset HEAD filename</code>取消暂存，文件状态为<strong>Modified</strong></p><h5 id="常用命令-1"><a href="#常用命令-1" class="headerlink" title="常用命令"></a>常用命令</h5><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看指定文件状态</span><span class="token function">git</span> status <span class="token punctuation">[</span>filename<span class="token punctuation">]</span><span class="token comment"># 查看文件内容差异</span><span class="token function">git</span> <span class="token function">diff</span> <span class="token punctuation">[</span>filename<span class="token punctuation">]</span><span class="token comment"># 查看所有文件状态</span><span class="token function">git</span> status<span class="token comment"># 添加所有文件到暂存区</span><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span><span class="token comment"># 提交暂存区中的内容到本地仓库 -m 提交信息</span><span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">"(版本信息)"</span> </code></pre><h5 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h5><p><strong>简介</strong>：git每次用commit提交的版本都会作为一张快照记录，就像VMware的快照一样，我们完全可以使用命令来操作版本</p><p><strong>注意</strong>：git的版本回退十分快速，因为它用的是指针</p><p><strong>操作</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看提交历史</span><span class="token function">git</span> log<span class="token function">git</span> log <span class="token parameter variable">--pretty</span><span class="token operator">=</span>oneline <span class="token comment"># 简单信息</span></code></pre><p><img src="/2022/07/23/git-bi-ji/image-20220724123043012-16588492064276.png"></p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 回退到上一个版本</span><span class="token function">git</span> reset <span class="token parameter variable">--hard</span> HEAD^<span class="token function">git</span> reset <span class="token parameter variable">--hard</span> HEAD~100 <span class="token comment"># 回退到上一百个版本</span><span class="token comment"># 回退到指定版本(可以向前回退，也可以向后回退)</span><span class="token function">git</span> reset <span class="token parameter variable">--hard</span> b194e7cebd <span class="token comment"># 这里的版本号不用写全，git会自动检索，但是也不要只写一两位</span></code></pre><p><strong>注意</strong>：这里的<code>HEAD^</code>代表上一个版本，上上个版本就是<code>HEAD^^</code>。</p><p>回到旧版本时，无法用<code>git log</code>查看比当前新的版本，这时只能用版本的ID来回到新版本。但是如何找到这些版本号？</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看每一次版本变更</span><span class="token function">git</span> reflog</code></pre><p><img src="/2022/07/23/git-bi-ji/image-20220724124402048-16588492064278.png"></p><p><strong>作用</strong>：这样列出以后，我们可以轻松知道我们是从哪个版本过来的</p><h5 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h5><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 删除本地文件</span><span class="token function">rm</span> <span class="token number">1</span>.txt<span class="token comment"># 从版本库恢复删除的文件</span><span class="token function">git</span> checkout -- <span class="token number">1</span>.txt<span class="token comment"># 删除git的版本库和本地的1.txt</span><span class="token function">git</span> <span class="token function">rm</span> <span class="token number">1</span>.txt<span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">"remove rest.txt"</span></code></pre><h5 id="忽略文件"><a href="#忽略文件" class="headerlink" title="忽略文件"></a>忽略文件</h5><p><strong>介绍</strong>：有时候我们不想把某些文件纳入版本控制中，比如数据库文件，临时文件，设计文件等</p><p><strong>操作</strong>：在主目录下建立<code>.gitignore</code>文件，此文件有如下规则：</p><ol><li>忽略文件中的空行或以并号( # )开始的行将会被忽略。</li><li>可以使用Linux通配符。例如：星号(* )代表任意多个字符，问号( ? )代表一个字符，方括号( [abc] )代表可选字符范围，<br>大括号( stringstring…. )代表可选的字符串等。</li><li>如果名称的最前面有一个感叹号(!)， 表示例外规则，将不被忽略。</li><li>如果名称的最前面是一个路径分隔符(&#x2F;)。 表示要忽略的文件在此目录下，而子目录中的文件不忽略。</li><li>如果名称的最后面是一个路径分隔符(&#x2F;)。 表示要忽略的是此目录下该名称的子目录，而非文件(默认文件或目录都忽略)。</li></ol><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 忽略所有.txt结尾的文件，这样的话上传就不会被选中</span>*.txtdoc/*.txt <span class="token comment"># 忽略doc下的所有.txt文件</span><span class="token comment"># 除了lib.txt外的文件</span><span class="token operator">!</span>lib.txt<span class="token comment"># 忽略文件夹</span>/temp <span class="token comment"># 不上传任何文件夹，除了相对路径下的/temp</span>build/ <span class="token comment"># 不上传build下的所有文件</span></code></pre><h4 id="git分支"><a href="#git分支" class="headerlink" title="git分支"></a>git分支</h4><p><strong>简介</strong>：分支就是科幻电影里面的平行宇宙，当你正在电脑前努力学习Git的时候，另一个你正在另一个平行宇宙里努力学习SVN。</p><p>如果两个平行宇宙互不干扰，那对现在的你也没啥影响。不过，在某个时间点，两个平行宇宙合并了，结果，你既学会了Git又学会了SVN！</p><p><img src="/2022/07/23/git-bi-ji/0.png"></p><p><strong>作用</strong>：假设你准备开发一个新功能，但是需要两周才能完成，第一周你写了50%的代码，如果立刻提交，由于代码还没写完，不完整的代码库会导致别人不能干活了。如果等代码全部写完再一次提交，又存在丢失每天进度的巨大风险。</p><p>现在有了分支，就不用怕了。你创建了一个属于你自己的分支，别人看不到，还继续在原来的分支上正常工作，而你在自己的分支上干活，想提交就提交，直到开发完毕后，再一次性合并到原来的分支上，这样，既安全，又不影响别人工作。</p><h5 id="分支操作"><a href="#分支操作" class="headerlink" title="分支操作"></a>分支操作</h5><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 列出所有远程分支</span><span class="token function">git</span> branch <span class="token parameter variable">-r</span><span class="token comment"># 新建一个分支，但依然在当前分支</span><span class="token function">git</span> branch <span class="token punctuation">[</span>branch-name<span class="token punctuation">]</span><span class="token comment"># 查看当前分支</span><span class="token function">git</span> branch<span class="token comment"># 切换分支</span><span class="token function">git</span> checkout <span class="token punctuation">[</span>branch-name<span class="token punctuation">]</span><span class="token comment">#或</span><span class="token function">git</span> switch <span class="token punctuation">[</span>branch-name<span class="token punctuation">]</span><span class="token comment"># 新建一个分支，切换到该分支</span><span class="token function">git</span> checkout <span class="token parameter variable">-b</span> <span class="token punctuation">[</span>branch<span class="token punctuation">]</span><span class="token comment">#或</span><span class="token function">git</span> switch <span class="token parameter variable">-c</span> dev<span class="token comment"># 合并指定分支到当前分支</span><span class="token function">git</span> merge <span class="token punctuation">[</span>branch<span class="token punctuation">]</span><span class="token comment"># 合并分支后即可删除分支</span><span class="token function">git</span> branch <span class="token parameter variable">-d</span> <span class="token punctuation">[</span>branch-name<span class="token punctuation">]</span><span class="token comment"># 删除远程分支</span><span class="token function">git</span> push origin <span class="token parameter variable">--delete</span> <span class="token punctuation">[</span>branch-name<span class="token punctuation">]</span><span class="token function">git</span> branch <span class="token parameter variable">-dr</span> <span class="token punctuation">[</span>remote/branch<span class="token punctuation">]</span><span class="token comment"># 查看分支历史</span><span class="token function">git</span> log <span class="token parameter variable">--graph</span> <span class="token parameter variable">--pretty</span><span class="token operator">=</span>oneline --abbrev-commit</code></pre><h5 id="创建与合并"><a href="#创建与合并" class="headerlink" title="创建与合并"></a>创建与合并</h5><p>一开始时<code>master</code>分支是一条线，随着你不断提交，<code>master</code>分支的线也越来越长</p><p><img src="/2022/07/23/git-bi-ji/2.png"></p><p>当我们创建分支<code>dev</code>时，git新建了一个指针叫<code>dev</code>，指向<code>master</code>相同的提交，再把<code>HEAD</code>指向<code>dev</code>，就表示当前分支在<code>dev</code>上：</p><p><img src="/2022/07/23/git-bi-ji/3.png"></p><p>不过，从现在开始，对工作区的修改和提交就是针对<code>dev</code>分支了，比如新提交一次后，<code>dev</code>指针往前移动一步，而<code>master</code>指针不变：</p><p><img src="/2022/07/23/git-bi-ji/4.png"></p><p>假如我们在<code>dev</code>上的工作完成了，就可以把<code>dev</code>合并到<code>master</code>上。Git怎么合并呢？最简单的方法，就是直接把<code>master</code>指向<code>dev</code>的当前提交，就完成了合并：</p><p><img src="/2022/07/23/git-bi-ji/5.png"></p><h5 id="解决ff合并冲突"><a href="#解决ff合并冲突" class="headerlink" title="解决ff合并冲突"></a>解决ff合并冲突</h5><p><strong>简介</strong>：新建分支时，新分支与main分支分别增加不同内容后，会出现如下结构</p><p><img src="/2022/07/23/git-bi-ji/1.png"></p><p>这种情况下，git无法执行”快速合并(ff)”，只能试图把各自的修改合并，但同名文件可能会产生冲突。例如：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> merge <span class="token punctuation">[</span>feature-1<span class="token punctuation">]</span><span class="token comment"># 这里告诉我们readme.txt文件存在冲突，必须手动解决冲突后再提交</span><span class="token comment"># Auto-merging readme.txt</span><span class="token comment"># CONFLICT (content): Merge conflict in readme.txt</span><span class="token comment"># Automatic merge failed; fix conflicts and then commit the result.</span></code></pre><p>使用<code>git status</code>查看文件冲突：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> status</code></pre><p>直接查看<code>readme.txt</code>内容：</p><pre class="language-none"><code class="language-none">Git is a distributed version control system.Git is free software distributed under the GPL.Git has a mutable index called stage.Git tracks changes of files.&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEADCreating a new branch is quick &amp; simple.&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;Creating a new branch is quick AND simple.&gt;&gt;&gt;&gt;&gt;&gt;&gt; feature1</code></pre><p>Git用<code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code>，<code>=======</code>，<code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;</code>标记出不同分支的内容，删掉标注符并修改内容后保存：</p><pre class="language-none"><code class="language-none">Creating a new branch is quick and simple.</code></pre><p>再提交：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">add</span> readme.txt<span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">"fixed"</span></code></pre><p>现在，<code>master</code>分支和<code>feature1</code>分支变成了下图所示：</p><p><img src="/2022/07/23/git-bi-ji/6.png"></p><p>用带参数的<code>git log</code>也可以看到分支的合并情况：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> log <span class="token parameter variable">--graph</span> <span class="token parameter variable">--pretty</span><span class="token operator">=</span>oneline --abbrev-commit</code></pre><p>最后，删除<code>feature1</code>分支：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch <span class="token parameter variable">-d</span> feature1</code></pre><h5 id="分支管理策略"><a href="#分支管理策略" class="headerlink" title="分支管理策略"></a>分支管理策略</h5><ol><li>无分叉<code>merge</code>，默认采用<code>fast-forward</code>(快进):</li></ol><p><img src="/2022/07/23/git-bi-ji/image-20220920094634177.png"></p><p><strong>注意</strong>：改变的总是你当前所在的分支，被merge的分支是不变的。也就是说future是不变的，改变的是master，从1快进到了3。</p><p>这种模式下，删除分支后，会丢掉分支信息。也就是说你会丢失future的开发信息。所以我们一般采用no-ff合并分支</p><ol start="2"><li>有分叉的情况下在master上 <code>merge</code> future:</li></ol><p><img src="/2022/07/23/git-bi-ji/image-20220920095538061.png"></p><p>这里在1的节点切换到future上开发了2和3，又切换回master开发了4和5，此时在master上使用 <code>--no-ff merge future</code>，产生了版本6</p><p><strong>注意</strong>：有分叉时不能使用ff(fast-forward)合并。master采用no-ff合并时把2和3当作一个整体并到6上。merge之后多出一个节点6就是合并后的节点</p><ol start="3"><li>在future上 <code>rebase</code>(变基) master:</li></ol><p><img src="/2022/07/23/git-bi-ji/image-20220920102321482.png"></p><p><strong>注意</strong>：一般在future上(不是master的分支上)rebase，不会在master上用rebase，因为这样做会导致版本混乱</p><h3 id="使用Github-或Gitee"><a href="#使用Github-或Gitee" class="headerlink" title="使用Github(或Gitee)"></a>使用Github(或Gitee)</h3><p><strong>介绍</strong>：Github和Gitee本质上是一个远程仓库，可以使用<code>git clone</code>和<code>git push</code>将远程的仓库克隆和上传。就是说，它是一个公开的，可多人协同开发的<strong>远程仓库</strong></p><p><strong>注意</strong>：github在国外访问很慢，在国内一般使用gitee，公司中有时会搭建自己的<a href="https://gitlab.cn/install/">gitlab</a>服务器</p><h5 id="注册gitee账号"><a href="#注册gitee账号" class="headerlink" title="注册gitee账号"></a>注册gitee账号</h5><p>没啥可以介绍</p><h5 id="设置ssh公钥"><a href="#设置ssh公钥" class="headerlink" title="设置ssh公钥"></a>设置ssh公钥</h5><p><strong>用途</strong>：为了让github识别到你就是你而不是别人，ssh公钥就是你的身份证明。将ssh公钥分发出去可以让别人解开只属于你发送的数据</p><p><strong>原理请看</strong>：<a href="https://www.bilibili.com/video/BV1oY4y1L7Ui?share_source=copy_web&vd_source=fb1c8825bf34368632566c631619e122">诚 | 破解银行卡? 人类信息安全的顶上战争【超硬核】</a></p><p><strong>本机的ssh保存在</strong>：<code>C:\Users\admin\.shh</code></p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 用git生成ssh</span>ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token comment"># rsa代表加密</span></code></pre><p><strong>注意</strong>：这里有提示，不用管，按三次回车就行</p><p><strong>使用该命令后生成两个文件</strong>：</p><p><img src="/2022/07/23/git-bi-ji/image-20220723171512527-16587279261317-16588492064279.png"></p><p><strong>把公钥文件粘贴到你的ssh栏</strong>：</p><p><img src="/2022/07/23/git-bi-ji/image-20220723171908152-16587279261318-165884920642710.png"></p><p>把生成的公钥添加进来即可</p><h5 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h5><p>随意填写内容即可</p><p><img src="/2022/07/23/git-bi-ji/image-20220723173442585-16587279261319-165884920642711.png"></p><p>使用创建完成后，复制链接：</p><p><img src="/2022/07/23/git-bi-ji/image-20220723173602383-165872792613110-165884920642713.png"></p><p>新建文件夹输入下列代码：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone <span class="token punctuation">[</span>url<span class="token punctuation">]</span></code></pre><p>内容一致：</p><p><img src="/2022/07/23/git-bi-ji/image-20220723173723635-165872792613111-165884920642712.png"></p><h5 id="IDEA使用git"><a href="#IDEA使用git" class="headerlink" title="IDEA使用git"></a>IDEA使用git</h5><p>在IDEA的terminal里可以操作git：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span><span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">"hello.java"</span><span class="token function">git</span> push</code></pre><p>在version里可以看见是谁上传的</p>]]></content>
      
      
      <categories>
          
          <category> git教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WallPaper Engine壁纸制作</title>
      <link href="/2022/06/19/wallpaperengine-bi-zhi-zhi-zuo/"/>
      <url>/2022/06/19/wallpaperengine-bi-zhi-zhi-zuo/</url>
      
        <content type="html"><![CDATA[<h1 id="WallPaper-Engine壁纸制作"><a href="#WallPaper-Engine壁纸制作" class="headerlink" title="WallPaper Engine壁纸制作"></a>WallPaper Engine壁纸制作</h1><p><strong>介绍</strong>：<code>Wallpaper Engine</code>是由<code>Kristjan Skutta</code>所开发的一款<a href="https://baike.baidu.com/item/%E5%8A%A8%E6%80%81%E5%A3%81%E7%BA%B8/6208046">动态壁纸</a><a href="https://baike.baidu.com/item/%E8%BD%AF%E4%BB%B6/12053">软件</a>，区别于其他形式的<a href="https://baike.baidu.com/item/%E5%A3%81%E7%BA%B8%E8%BD%AF%E4%BB%B6/6681142">壁纸软件</a>，<code>Wallpaper Engine</code>可以让用户通过其引擎深度的自定义或编辑来创作出符合个人需求的壁纸样式</p><p>支持各种类型的壁纸，包括2D和3D动画，网站，视频，甚至某些<a href="https://baike.baidu.com/item/%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/5985445">应用程序</a></p><p><strong>官网</strong>：<a href="https://www.wallpaperengine.io/zh-hans">Wallpaper Engine：Windows 系统上的动画壁纸</a></p><p><strong>官方教程</strong>：<a href="https://docs.wallpaperengine.io/en/">Wallpaper Engine - Designer Documentation</a></p><p><strong>steam教程</strong>：<a href="https://steamcommunity.com/sharedfiles/filedetails/?id=827374806">https://steamcommunity.com/sharedfiles/filedetails/?id=827374806</a></p><h2 id="开始使用Wallpaper-Engine"><a href="#开始使用Wallpaper-Engine" class="headerlink" title="开始使用Wallpaper Engine"></a>开始使用Wallpaper Engine</h2><p><strong>介绍</strong>：<a href="https://store.steampowered.com/app/431960/Wallpaper_Engine/"><strong>Wallpaper Engine</strong></a>的使用十分简单，你只需要在steam上以18元的价格购买即可使用并且可以在<strong>创意工坊</strong>中找到海量壁纸（小孩子别看r18，也不推荐&lt;&#x3D;16岁的同学购买！！！）</p><p><img src="/2022/06/19/wallpaperengine-bi-zhi-zhi-zuo/image-20220618224636791.png"></p><h2 id="制作你自己的wallpaper-engine壁纸"><a href="#制作你自己的wallpaper-engine壁纸" class="headerlink" title="制作你自己的wallpaper engine壁纸"></a>制作你自己的wallpaper engine壁纸</h2><h3 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h3><p><strong>介绍</strong>：学会一样东西的方法就是模仿，制作一张壁纸也一样，你可以从别人的作品里学会很多东西</p><p><strong>怎么模仿</strong>：答案就是<strong>解包</strong>和<strong>导包</strong></p><h4 id="解包"><a href="#解包" class="headerlink" title="解包"></a>解包</h4><p><strong>解包工具</strong>：<a href="https://github.com/notscuffed/repkg/releases">https://github.com/notscuffed/repkg/releases</a></p><p><strong>博客教程</strong>：</p><p><a href="https://blog.csdn.net/Enderman_xiaohei/article/details/102933300">https://blog.csdn.net/Enderman_xiaohei/article/details/102933300</a></p><p><a href="https://www.bilibili.com/read/cv12791281">https://www.bilibili.com/read/cv12791281</a></p><p><a href="https://www.zhihu.com/question/320500170/answer/658253527">https://www.zhihu.com/question/320500170/answer/658253527</a></p><p><strong>是什么</strong>：解包是对原有wallpaper engine编码后的文件进行还原的过程。解包可以释放打包好的资源，以wallpaper engine便编辑器进行识别，对其进行查看。</p><h5 id="操作方式"><a href="#操作方式" class="headerlink" title="操作方式"></a>操作方式</h5><p><strong>方法一</strong>：</p><ol><li>解包需要一个工具来对壁纸文件里的.<code>pkg</code>文件进行解包，右键你的壁纸用资源管理器打开即可看见</li></ol><p><img src="/2022/06/19/wallpaperengine-bi-zhi-zhi-zuo/image-20220618214252078.png"></p><p><img src="/2022/06/19/wallpaperengine-bi-zhi-zhi-zuo/image-20220618214649648.png"></p><ol start="2"><li>将整个文件夹复制到repkg文件夹下。例如我这里直接将<code>1 582967473</code>这个文件复制过去</li></ol><p><img src="/2022/06/19/wallpaperengine-bi-zhi-zhi-zuo/image-20220618214850091.png"></p><ol start="3"><li>按住键盘上的<code>shift</code>键，右键选择在此处打开powershell窗口</li></ol><p><img src="/2022/06/19/wallpaperengine-bi-zhi-zhi-zuo/image-20220618215035162.png"></p><ol start="4"><li>输入下列命令，回车执行</li></ol><pre class="language-bash" data-language="bash"><code class="language-bash">.<span class="token punctuation">\</span>repkg extract <span class="token parameter variable">-o</span> ./output <span class="token punctuation">(</span>X:<span class="token punctuation">\</span>……<span class="token punctuation">\</span>RePKG<span class="token punctuation">)</span><span class="token comment"># 括号里写你repkg的绝对路径，不用加括号！！！</span><span class="token comment"># 例如我这里写</span>.<span class="token punctuation">\</span>repkg extract <span class="token parameter variable">-o</span> ./output F:<span class="token punctuation">\</span>repkg</code></pre><p>看到下面的输出就已经将解包好的文件放在你的output文件夹下面了</p><p><img src="/2022/06/19/wallpaperengine-bi-zhi-zhi-zuo/image-20220618215929372.png"></p><p>打开你的output文件夹看到一个名字一样的文件，但是已经是解包好的内容</p><p><img src="/2022/06/19/wallpaperengine-bi-zhi-zhi-zuo/image-20220618220234102.png"></p><p><img src="/2022/06/19/wallpaperengine-bi-zhi-zhi-zuo/image-20220618220143750.png"></p><p><strong>方法二</strong>：（学会方法一的可以跳到导包步骤）</p><ol><li>右键开始打开<code>powershell(管理员)</code></li></ol><p><img src="/2022/06/19/wallpaperengine-bi-zhi-zhi-zuo/image-20220618220653597.png"></p><ol start="2"><li>输入下列代码</li></ol><pre class="language-bash" data-language="bash"><code class="language-bash">F:<span class="token punctuation">\</span>repkg<span class="token punctuation">\</span>RePKG.exe extract <span class="token comment">#这里写repkg的绝对路径</span>G:<span class="token punctuation">\</span>steam<span class="token punctuation">\</span>steamapps<span class="token punctuation">\</span>workshop<span class="token punctuation">\</span>content<span class="token punctuation">\</span><span class="token number">431960</span><span class="token punctuation">\</span><span class="token number">2774829340</span><span class="token punctuation">\</span>scene.pkg <span class="token parameter variable">-o</span> F:<span class="token punctuation">\</span>repkg<span class="token punctuation">\</span>output <span class="token comment">#写解包文件的绝对路径 和输出路径</span></code></pre><h4 id="导包"><a href="#导包" class="headerlink" title="导包"></a>导包</h4><p><strong>简介</strong>：解包好了，怎么来导入到<code>wallpaper engine</code>查看呢？</p><p><strong>步骤</strong>：</p><ol><li>打开你的壁纸编辑器</li></ol><p><img src="/2022/06/19/wallpaperengine-bi-zhi-zhi-zuo/image-20220618221434932.png"></p><ol start="2"><li>选择使用模板</li></ol><p><img src="/2022/06/19/wallpaperengine-bi-zhi-zhi-zuo/image-20220618221518336.png"></p><ol start="3"><li>写上项目<code>名称</code>，选择<code>2D Scene</code>作为模板，选择<code>确认</code></li></ol><p><img src="/2022/06/19/wallpaperengine-bi-zhi-zhi-zuo/image-20220618221702902.png"></p><ol start="4"><li>创建好后就可以关闭了。回到你的壁纸列表右键资源管理器查看你的项目。例如我这里打开刚刚创建的测试项目</li></ol><p><img src="/2022/06/19/wallpaperengine-bi-zhi-zhi-zuo/image-20220618221905128.png"></p><p><strong>注意</strong>：这里的<code>poject.json</code>是项目识别的文件，一定不能删除。你不需要对文件内容进行操作，直接进入下一步</p><p><img src="/2022/06/19/wallpaperengine-bi-zhi-zhi-zuo/image-20220618222013509.png"></p><ol start="5"><li>将解包好的文件内容覆盖到你的项目上</li></ol><p><img src="/2022/06/19/wallpaperengine-bi-zhi-zhi-zuo/image-20220618222417265.png"></p><p>覆盖效果如下</p><p><img src="/2022/06/19/wallpaperengine-bi-zhi-zhi-zuo/image-20220618222446728.png"></p><ol start="6"><li>用编辑器重新打开测试文件。选择查看所有项目：</li></ol><p><img src="/2022/06/19/wallpaperengine-bi-zhi-zhi-zuo/image-20220618222950556.png"></p><p>选择测试文件，确认打开</p><p><img src="/2022/06/19/wallpaperengine-bi-zhi-zhi-zuo/image-20220618223232205.png"></p><p>加载一段时间后效果如下，这样你就可以随意查看壁纸的效果了。这里的壁纸使用的是：<a href="https://steamcommunity.com/sharedfiles/filedetails/?id=1582967473">温泉と夕立</a></p><p><img src="/2022/06/19/wallpaperengine-bi-zhi-zhi-zuo/image-20220618223145214.png"></p><h4 id="如何制作效果"><a href="#如何制作效果" class="headerlink" title="如何制作效果"></a>如何制作效果</h4><p><strong>介绍</strong>：解包只能看到显示的特效，可能无法自己还原，此时推荐去官方看教程。这里着重介绍一下<code>x-ray</code>效果的X，Y轴解绑教程，其他的效果比较简单，可以自行学习</p><p><strong>X-ray效果x，y轴解绑教程</strong>：<a href="https://imgur.com/a/le2R7xA">https://imgur.com/a/le2R7xA</a></p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wireshark使用教程</title>
      <link href="/2022/03/05/wireshark-bi-ji/"/>
      <url>/2022/03/05/wireshark-bi-ji/</url>
      
        <content type="html"><![CDATA[<h3 id="Wireshark是什么"><a href="#Wireshark是什么" class="headerlink" title="Wireshark是什么"></a>Wireshark是什么</h3><p>Wireshark（前称Ethereal）是一个<a href="https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E5%B0%81%E5%8C%85">网络封包</a>分析软件。<a href="https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E5%B0%81%E5%8C%85%E5%88%86%E6%9E%90/17608901">网络封包分析</a>软件的功能是截取网络封包，并尽可能显示出最为详细的网络封包资料。Wireshark使用WinPCAP作为接口，直接与网卡进行数据报文交换。</p><p><strong>wireshark官网</strong>：<a href="https://www.wireshark.org/">https://www.wireshark.org/</a></p><p><strong>wireshark维基（英文）</strong>：<a href="https://wiki.wireshark.org/">https://wiki.wireshark.org/</a></p><p><strong>wireshark中文维基</strong>：<a href="https://wiki.archlinux.org/title/Wireshark_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">https://wiki.archlinux.org/title/Wireshark_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</a></p><p>中文相关软件：科来网络分析系统</p><h3 id="抓包原理"><a href="#抓包原理" class="headerlink" title="抓包原理"></a>抓包原理</h3><h4 id="网络原理"><a href="#网络原理" class="headerlink" title="网络原理"></a>网络原理</h4><p><strong>本机环境</strong>：通过wireshark直接抓取本机网卡进出流量</p><p><strong>集线器环境（已淘汰）</strong>：流量防护，同一冲突域，wireshark可以抓到整个局域网的包</p><p><strong>交换机环境</strong>：</p><p>a. <strong>有交换机权限</strong>：</p><ol><li>wireshark通过端口镜像（端口映射、span）抓包</li></ol><p>b. <strong>没有交换机权限</strong>：</p><ol><li>使用ARP攻击软件Cain&amp;Abel，通过获得广播包，发送欺骗包伪装成接收者，劫持流量</li><li>MAC泛洪，通过发送大量数据包，使得交换机MAC表报表出错，流量无法识别出现泛洪溢出</li></ol><h4 id="底层原理"><a href="#底层原理" class="headerlink" title="底层原理"></a>底层原理</h4><ol><li><strong>Win-&#x2F;libpcap</strong>：Wireshark抓包是依赖的库文件</li><li><strong>Capture</strong>：抓包引擎，利用libpcap&#x2F;WinPcap从底层抓取网络数据包，libpcap&#x2F;WinPcap提供了通用的抓包接口，能从不同类型的网络接口(包括以太网，令牌环网，ATM网等)获取数据包</li><li><strong>Wiretap</strong>：格式支持，从抓包文件中读取数据包，支持多种文件格式</li><li><strong>Core</strong>：核心引擎，通过函数调用将其他模块连接在一起，起到联动调度的作用</li><li><strong>GTK1&#x2F;2</strong>：图形工具，处理用户的输入输出显示</li></ol><h3 id="快速抓包"><a href="#快速抓包" class="headerlink" title="快速抓包"></a>快速抓包</h3><ol><li>进入一个活跃的连接</li><li>开始抓包</li><li>一段时间后停止抓包</li><li>保存包</li></ol><h3 id="显示介绍"><a href="#显示介绍" class="headerlink" title="显示介绍"></a>显示介绍</h3><p><strong>初始界面</strong>：</p><p><img src="/2022/03/05/wireshark-bi-ji/image-20220304191021217.png"></p><p><strong>列介绍</strong>：</p><p><strong>NO</strong>：包序号</p><p><strong>Time</strong>：抓到的时间</p><p><strong>Source</strong>：发送的IP</p><p><strong>Destination</strong>：接收的IP</p><p><strong>Protocol</strong>：协议类型</p><p><strong>Length</strong>：长度</p><p><strong>Info</strong>：包内容</p><p><strong>Time to live</strong>：生存时间值</p><h3 id="数据包操作"><a href="#数据包操作" class="headerlink" title="数据包操作"></a>数据包操作</h3><ol><li>特定协议数据包着色</li><li>修改默认的配色方案：首选项-&gt;外观子栏-&gt;字体和颜色</li><li>高亮(标记数据包)</li><li>针对会话进行颜色修改</li><li>数据包注释(add a new common)</li><li>合并数据包(做数据包整合)</li><li>打印数据包成PDF</li><li>导出特定数据包，选择数据包，所有数据包</li><li>导出CSV格式</li></ol><h3 id="首选项设置"><a href="#首选项设置" class="headerlink" title="首选项设置"></a>首选项设置</h3><p>首先进入首选项</p><p><img src="/2022/03/05/wireshark-bi-ji/image-20220305103011897.png"></p><p>在首选项界面即可设置下面的内容</p><ol><li>设置默认路径：在外观里设置为最近使用路径</li><li>设置布局界面：可以在用外观下的布局设置窗口的排列</li><li>可在Name Resolution里开启IP解析(resolve network(IP) addresses)和名称解析(resolve network names)</li><li>开启混杂模式：可以抓取发送给别人的包</li></ol><p><img src="/2022/03/05/wireshark-bi-ji/image-20220305102427208.png"></p><ol start="5"><li>开启自动抓包：</li></ol><p><img src="/2022/03/05/wireshark-bi-ji/image-20220305102551889.png" alt="image-20220305102551889"></p><p><strong>使用</strong>：这里输入文件名，选择自动创建文件，并且设置创建规则即可自动抓包</p><p>这里的已经100000分组：抓到100000个包以后停止并创建下 一个文件</p><p>这里的use a ring buffer with 2 files：创建2个包然后轮巡覆盖</p><p><strong>作用</strong>：自动抓包常用于分布式网络，大型网络，防止爆内存</p><ol start="6"><li>开启实时数据流</li></ol><p><img src="/2022/03/05/wireshark-bi-ji/image-20220305110530094.png"></p><p>点击show capture information during live capture即可显示实时数据流的占比。</p><h3 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h3><h4 id="抓包过滤器"><a href="#抓包过滤器" class="headerlink" title="抓包过滤器"></a>抓包过滤器</h4><p><strong>capture filter for selected interfaces</strong>：</p><p><img src="/2022/03/05/wireshark-bi-ji/image-20220305124327998.png"></p><h5 id="语法说明"><a href="#语法说明" class="headerlink" title="语法说明"></a>语法说明</h5><p>**BPF语法(Berkeley Packet Filiter)**：基于libpcap&#x2F;wincap库</p><p><strong>类型Type</strong>：host、net、port</p><p><strong>方向Dir</strong>：src、dst</p><p><strong>协议Proto</strong>：ether、ip、tcp、udp、http、ftp</p><p><strong>逻辑运算符</strong>：&amp;&amp;(与)、||(或)、!(非)</p><p>例子：</p><ol><li><code>src host 192.168.1.1 &amp;&amp; dst port 80</code>：抓取源地址为192.168.1.1，目的为80端口的流量</li><li><code>host 192.168.1.1||host 192.168.1.2</code>：抓取192.168.1.1和192.168.1.2的流量</li><li><code>！broadcast</code>：不要抓取广播包</li></ol><h5 id="实践说明"><a href="#实践说明" class="headerlink" title="实践说明"></a>实践说明</h5><p><strong>过滤MAC地址案例</strong>：</p><ol><li><code>ether host 00:88:ca:86:f8:0d</code>：只抓这个MAC相关的数据包</li><li><code>ether src host 00:88:ca:86:f8:0d</code>：只抓这个MAC发送的数据包</li><li><code>ether dst host 00:88:ca:86:f8:0d</code>：只抓这个MAC接受的数据包</li></ol><p><strong>过滤主机IP地址</strong>：</p><ol><li><code>host 192.168.1.1</code>：只抓这个IP相关的数据包</li><li><code>src host  192.168.1.1</code>：只抓这个IP发送的数据包</li><li><code>dst host  192.168.1.1</code>：只抓这个IP接收的数据包</li></ol><p><strong>过滤端口</strong>：</p><ol><li><code>port 80</code>：只抓取80端口包</li><li><code>! port 80</code>：不抓取80端口包</li><li><code>dst port 80</code>：只抓取接收的80端口包</li><li><code>src port 80</code>：只抓取发送的80端口包</li></ol><p><strong>过滤协议</strong>：</p><ol><li>arp(地址解析协议)</li><li>icmp(Internet控制报文协议)</li></ol><p>综合过滤器：</p><p><code>host 192.168.100 &amp;&amp; port 8080</code></p><h4 id="显示过滤器"><a href="#显示过滤器" class="headerlink" title="显示过滤器"></a>显示过滤器</h4><p><img src="/2022/03/05/wireshark-bi-ji/image-20220305130331868.png"></p><p><strong>注意</strong>：</p><p>显示过滤器和抓包过滤器的语法不同</p><p>抓包过滤器会把其他流量丢掉，不利于做全局分析</p><p>在流量不大的情况下只需要使用显示过滤器即可</p><h5 id="语法说明-1"><a href="#语法说明-1" class="headerlink" title="语法说明"></a>语法说明</h5><p><strong>比较操作符</strong>：&#x3D;&#x3D;(等于)、!&#x3D;(不等于)、&gt;(大于)、&lt;(小于)、&gt;&#x3D;(大于等于)、&lt;&#x3D;(小于等于)</p><p><strong>逻辑操作符</strong>：and 两个条件同时满足、or其中一个条件被满足、xor有且仅有一个条件被满足、not没有条件被满足</p><p><strong>ip地址</strong>：ip.addr、ip.src、ip.dst</p><p><strong>端口过滤</strong>：tcp.port、tcp.srcport、tcp.dstport、tcp.flag.sym、tcp.flag.ack</p><p><strong>协议过滤</strong>：arp、ip、icmp、udp、tcp、bootp、dns、oicq(腾讯协议)</p><h5 id="实践说明-1"><a href="#实践说明-1" class="headerlink" title="实践说明"></a>实践说明</h5><p><strong>过滤IP案例</strong>：</p><p><code>ip.addr == 192.168.1.1</code>：只抓192.168.1.1的包</p><p><code>ip.src == 192.168.1.1</code>：只抓192.168.1.1发送的包</p><p><code>ip.dst == 192.168.1.1</code>：只抓192.168.1.1接收的包</p><p><code>ip.src</code> &#x3D;&#x3D; 192.168.1.100 and ip.dst &#x3D;&#x3D; 58.250.135.156</p><p><strong>过滤端口案例</strong>：</p><p><code>tcp.port</code> &#x3D;&#x3D; 80：只抓80端口包</p><p><code>tcp.srcport</code> &#x3D;&#x3D; 80：只抓80端口发送的包</p><p><code>tcp.dstport</code> &#x3D;&#x3D; 80：只抓80端口接收的包</p><p><code>tcp.flag.syn</code> &#x3D;&#x3D; 1：只抓开始同步会话请求的包</p><p><strong>过滤协议案例</strong>：想要什么协议的包直接写入即可</p><p><strong>综合过滤案例</strong>：</p><p><code>ip.src == 192.168.1.100 and tcp.dstport == 80</code>：抓取192.168.1.100:80 tcp协议发送的包</p><p><code>ip.addr == 192.168.1.106 and udp.port == 4000</code>：抓取192.168.1.106:4000 udp协议发送的包</p><h5 id="应用快捷标签"><a href="#应用快捷标签" class="headerlink" title="应用快捷标签"></a>应用快捷标签</h5><p><img src="/2022/03/05/wireshark-bi-ji/image-20220305140316682.png"></p><p>点击应用过滤器旁的加号可以快速添加该语法的标签，以供频繁使用</p><h3 id="数据流追踪"><a href="#数据流追踪" class="headerlink" title="数据流追踪"></a>数据流追踪</h3><p><strong>功能</strong>：将TCP、UDP、SSL等数据流进行重组并完整呈现出来</p><p><strong>操作</strong>：在数据列表右键TCP协议包选择追踪流，选择TCP即可追踪TCP流。在分析选项中也可以选择追踪流</p><p><img src="/2022/03/05/wireshark-bi-ji/image-20220305150156671.png"></p><p>同理，右键UDP协议包选择追踪UDP流，SSL协议则追踪SSL流</p><p><img src="/2022/03/05/wireshark-bi-ji/image-20220305150523732.png" alt="image-20220305150523732"></p><h3 id="专家信息说明"><a href="#专家信息说明" class="headerlink" title="专家信息说明"></a>专家信息说明</h3><p><strong>功能</strong>：可以对数据包中特定的协议状态进行警告说明</p><p><strong>操作</strong>：在分析选项中选择专家信息</p><p><img src="/2022/03/05/wireshark-bi-ji/image-20220305151916783.png"></p><h3 id="统计摘要说明"><a href="#统计摘要说明" class="headerlink" title="统计摘要说明"></a>统计摘要说明</h3><p><strong>功能</strong>：对抓取的数据包进行全局统计</p><p><strong>操作</strong>：统计-&gt;捕获文件属性</p><p><img src="/2022/03/05/wireshark-bi-ji/image-20220305152627348.png"></p><h3 id="协议分层统计"><a href="#协议分层统计" class="headerlink" title="协议分层统计"></a>协议分层统计</h3><p><strong>功能</strong>：统计通信流量中不同协议占用的百分比</p><p>通过这个工具可以对全网流量有直观的了解，到底整个网络哪些流量占用最多哪些占用最少等等</p><p><strong>操作</strong>：统计-&gt;协议分级</p><p><img src="/2022/03/05/wireshark-bi-ji/image-20220305160751520.png"></p><h3 id="网络节点和会话统计"><a href="#网络节点和会话统计" class="headerlink" title="网络节点和会话统计"></a>网络节点和会话统计</h3><h4 id="网络会话-conversations"><a href="#网络会话-conversations" class="headerlink" title="网络会话(conversations)"></a>网络会话(conversations)</h4><p><strong>功能</strong>：统计通信会话之间接收和发送的数据包和字节数</p><p>通过这个工具可以找出网络中哪个会话(IP地址或端口号)最占用带宽，可以进一步做网络策略</p><p><strong>操作</strong>：统计-&gt;会话</p><p><img src="/2022/03/05/wireshark-bi-ji/image-20220305161433237.png"></p><p>一般查看IPv4最多，点击bytes可以让数据从高到低统计</p><p>可以在网络会话查看流追踪</p><h4 id="网络节点-endpoint"><a href="#网络节点-endpoint" class="headerlink" title="网络节点(endpoint)"></a>网络节点(endpoint)</h4><p><strong>功能</strong>：统计通信会话中每个节点接收和发送的数据包和字节数</p><p>通过这个工具可以找出网络中哪个节点(IP地址或端口号)最占用带宽</p><p><strong>操作</strong>：统计-&gt;端点</p><p><img src="/2022/03/05/wireshark-bi-ji/image-20220305162544948.png"></p><h3 id="数据包长度统计"><a href="#数据包长度统计" class="headerlink" title="数据包长度统计"></a>数据包长度统计</h3><p><strong>功能</strong>：统计数据流量中包长度的分布，检测巨型帧(<strong>帧长大于1522字节的以太网帧</strong>)攻击，碎片化数据攻击</p><p><strong>操作</strong>：统计-&gt;分组长度</p><p><img src="/2022/03/05/wireshark-bi-ji/image-20220305163045725.png"></p><p><strong>从40-319是小型帧</strong>：ICMP、DNS、ARP、SMP等协议</p><p><strong>320-2559</strong>：TCP协议</p><p><strong>640-1279</strong>：OICQ协议</p><h3 id="图表分析"><a href="#图表分析" class="headerlink" title="图表分析"></a>图表分析</h3><h4 id="IO图表"><a href="#IO图表" class="headerlink" title="IO图表"></a>IO图表</h4><p><strong>功能</strong>：对网络中的吞吐量进行实时图形显示</p><p><strong>操作</strong>：分析-&gt;I&#x2F;O图表</p><p><img src="/2022/03/05/wireshark-bi-ji/image-20220305165547960.png"></p><h4 id="数据流图"><a href="#数据流图" class="headerlink" title="数据流图"></a>数据流图</h4><p><strong>功能</strong>：将会话通信过程图形可视化出来</p><p><strong>操作</strong>：统计-&gt;流量图</p><p><img src="/2022/03/05/wireshark-bi-ji/image-20220305165928284.png"></p>]]></content>
      
      
      <categories>
          
          <category> 抓包 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux笔记</title>
      <link href="/2021/12/03/linux-bi-ji/"/>
      <url>/2021/12/03/linux-bi-ji/</url>
      
        <content type="html"><![CDATA[<h2 id="linux大介绍"><a href="#linux大介绍" class="headerlink" title="linux大介绍"></a>linux大介绍</h2><h5 id="UNIX主要发行版本"><a href="#UNIX主要发行版本" class="headerlink" title="UNIX主要发行版本"></a>UNIX主要发行版本</h5><table><thead><tr><th align="center">操作系统</th><th align="center">公司</th><th align="center">硬件平台</th></tr></thead><tbody><tr><td align="center">AIX</td><td align="center">IBM</td><td align="center">PowerPC</td></tr><tr><td align="center">HP-UX</td><td align="center">HP</td><td align="center">PA-RISC</td></tr><tr><td align="center">Solaris</td><td align="center">Sun</td><td align="center">SPARC</td></tr><tr><td align="center">Linux</td><td align="center">Red Hat, Ubuntu</td><td align="center">IA(Intel, AMD, Cyrix, RISE)</td></tr></tbody></table><p><a href="https://www.oracle.com/cn/solaris/solaris11/">Solaris</a>是我们可以学习的unix操作系统，另外两个无法在家用机安装。</p><h5 id="Linux发展历史"><a href="#Linux发展历史" class="headerlink" title="Linux发展历史"></a>Linux发展历史</h5><p>Linux系统诞生于1991年，由芬兰大学生<strong>李纳斯</strong>(Linus Torvalds)和后来陆续加入的众多爱好者共同开发完成</p><h5 id="Linux简介"><a href="#Linux简介" class="headerlink" title="Linux简介"></a>Linux简介</h5><p>linux是unix的子分支，mac os是类unix操作系统</p><p>linux是unix的开源软件。</p><p>linux可以称为lin ux，是李纳斯独自开发的。</p><p>linux企鹅作为图标，是象征着南极，那里不属于任何国家。这也寓意了linux不属于任何公司，任何人都可以获得linux开发的成果。</p><h5 id="Linux内核"><a href="#Linux内核" class="headerlink" title="Linux内核"></a>Linux内核</h5><p><strong>系统的作用</strong>：帮助用户管理计算机硬件</p><p><strong>系统内核的作用</strong>：</p><ol><li><p><strong>管理进程</strong>：内核负责创建和销毁进程, 并处理它们与外部世界的联系(输入和输出)，不同进程间通讯(通过信号，管道，或者进程间通讯原语)对整个系统功能来说是基本的，也由内核处理。 另外， 调度器， 控制进程如何共享CPU，是进程管理的一部分。更通常地，内核的进程管理活动实现了多个进程在一个单个或者几个CPU 之上的抽象。</p></li><li><p><strong>管理内存</strong>：计算机的内存是主要的资源， 处理它所用的策略对系统性能是至关重要的。内核为所有进程的每一个都在有限的可用资源上建立了一个虚拟地址空间。内核的不同部分与内存管理子系统通过一套函数调用交互，从简单的malloc&#x2F;free对到更多更复杂的功能。</p></li><li><p><strong>文件系统</strong>：Unix 在很大程度上基于文件系统的概念;几乎Unix中的任何东西都可看作一个文件。内核在非结构化的硬件之上建立了一个结构化的文件系统，结果是文件的抽象非常多地在整个系统中应用。另外，Linux 支持多个文件系统类型，就是说，物理介质上不同的数据组织方式。例如，磁盘可被格式化成标准Linux的ext3文件系统，普遍使用的FAT文件系统，或者其他几个文件系统。</p></li><li><p><strong>设备控制</strong>：几乎每个系统操作终都映射到一个物理设备上，除了处理器，内存和非常少的别的实体之外，全部中的任何设备控制操作都由特定于要寻址的设备相关的代码来进行。这些代码称为设备驱动。内核中必须嵌入系统中出现的每个外设的驱动，从硬盘驱动到键盘和磁带驱动器。内核功能的这个方面是本书中的我们主要感兴趣的地方。</p></li><li><p><strong>网络管理</strong>：网络必须由操作系统来管理，因为大部分网络操作不是特定于某一个进程： 进入系统的报文是异步事件。报文在某一个进程接手之前必须被收集，识别，分发，系统负责在程序和网络接口之间递送数据报文，它必须根据程序的网络活动来控制程序的执行。另外，所有的路由和地址解析问题都在内核中实现。</p></li></ol><p><strong>linux内核在系统中的位置</strong>：</p><p><img src="/2021/12/03/linux-bi-ji/image-20211111164931308.png"></p><p><strong>Linux内核版本介绍</strong>：</p><p><strong>Linux内核官网</strong>：<a href="https://www.kernel.org/">The Linux Kernel Archives</a></p><p><strong>内核版本说明</strong>：</p><p>2（主版本）.6（次版本）.18（末版本）</p><p>开发版是企业生产的，底层用的还是Linux内核。</p><h5 id="linux的发行版本"><a href="#linux的发行版本" class="headerlink" title="linux的发行版本"></a>linux的发行版本</h5><p><img src="/2021/12/03/linux-bi-ji/image-20211108232848272.png"></p><p>左为<code>redhat</code>系列，右为<code>debian</code>系列。</p><p>主要区别是软件安装方式，类型。</p><h5 id="Linux上的开源软件"><a href="#Linux上的开源软件" class="headerlink" title="Linux上的开源软件"></a>Linux上的开源软件</h5><p><img src="/2021/12/03/linux-bi-ji/image-20211108234100381.png"></p><p>开源软件的<strong>分类</strong>：</p><ol><li>使用自由</li><li>研究自由</li><li>散布以及改良自由</li></ol><p>linux里有更多的服务器软件，更适合当服务器系统，同时因为代码是开放的，更具安全性。</p><h5 id="Linux和Windows的安全性比较"><a href="#Linux和Windows的安全性比较" class="headerlink" title="Linux和Windows的安全性比较"></a>Linux和Windows的安全性比较</h5><p>windows服务器版全补丁安全等级为c1，linux不做防护为c1，打补丁为b级。</p><p><strong>原因</strong>：window是面向个人用户，服务器端已经走下坡路了</p><h5 id="支撑互联网的开源技术"><a href="#支撑互联网的开源技术" class="headerlink" title="支撑互联网的开源技术"></a>支撑互联网的开源技术</h5><p><strong>LAMP</strong>：</p><p>Linux 操作系统<br>Apache Web服务器<br>MySQL 数据库<br>PHP 编程语言</p><p><strong>LMNP</strong>：</p><p>Linux 操作系统<br>nginx Web服务器<br>MySQL 数据库<br>PHP 编程语言</p><h5 id="Linux应用领域"><a href="#Linux应用领域" class="headerlink" title="Linux应用领域"></a>Linux应用领域</h5><p><strong>网站服务器</strong>：腾讯，阿里，微软服务器</p><p><strong>嵌入式开发</strong>：安卓底层也是Linux，属于Linux嵌入应用</p><p><strong>电影工业</strong>：拍摄电影的数据处理等</p><h5 id="linux选择命令行的原因"><a href="#linux选择命令行的原因" class="headerlink" title="linux选择命令行的原因"></a>linux选择命令行的原因</h5><ol><li>图形界面占用系统资源</li><li>降低稳定性</li><li>符合远程维护需求</li></ol><h2 id="linux学习"><a href="#linux学习" class="headerlink" title="linux学习"></a>linux学习</h2><h3 id="安装VMware"><a href="#安装VMware" class="headerlink" title="安装VMware"></a>安装VMware</h3><p><strong>下载</strong>：<a href="https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html">Workstation 16 Pro for Windows</a></p><p><strong>注意</strong>：激活密钥自行搜索</p><h3 id="系统分区简介"><a href="#系统分区简介" class="headerlink" title="系统分区简介"></a>系统分区简介</h3><p><strong>作用</strong>：便于文件获取和寻找</p><p><strong>原理</strong>：把大硬盘分为小的逻辑分区</p><p><img src="/2021/12/03/linux-bi-ji/image-20211110153742707.png"></p><p>能写入数据的只有<strong>主分区</strong>和<strong>逻辑分区</strong></p><p><strong>主分区</strong>只能存在4个</p><p><strong>格式化</strong>是一种让数据可以被系统识别的手段，分成一个个数据块，可以想象成柜子的打格</p><p><strong>硬件设备文件名</strong>：（linux要分配设备文件名才能使用）</p><p><img src="/2021/12/03/linux-bi-ji/image-20211110154541801.png"></p><p>dev是硬件目录，在根目录下</p><p><img src="/2021/12/03/linux-bi-ji/image-20211110155534645.png"></p><p>linux称分区分配盘符的过程为<strong>挂载</strong>，盘符称为<strong>挂载点</strong></p><p><strong>swap分区</strong>可以理解为虚拟内存</p><p><strong>boot分区</strong>为启动分区，可以单独分开，防止根写满无法启动</p><p><strong>文件系统结构：</strong></p><p><img src="/2021/12/03/linux-bi-ji/image-20211110160135997.png"></p><p>linux分区的每个目录都是<strong>根目录</strong>的<strong>子目录</strong>，可以拥有单独的磁盘空间</p><h3 id="Centos7系统安装"><a href="#Centos7系统安装" class="headerlink" title="Centos7系统安装"></a>Centos7系统安装</h3><p> VMware按<code>F2</code>进入BIOS</p><p>全屏快捷键<code>ctrl</code>+<code>alt</code>+回车</p><h4 id="密码原则"><a href="#密码原则" class="headerlink" title="密码原则"></a>密码原则</h4><ol><li><p>复杂性（包含大小写字符）</p></li><li><p>易记性（选择一些对你有意义的话）</p></li><li><p>时效性（经常更改）</p></li></ol><h4 id="基本分区结构"><a href="#基本分区结构" class="headerlink" title="基本分区结构"></a>基本分区结构</h4><p><img src="/2021/12/03/linux-bi-ji/image-20211110163009970.png"></p><h4 id="软件包选择"><a href="#软件包选择" class="headerlink" title="软件包选择"></a>软件包选择</h4><ol><li>Desktop (桌面)</li><li>Minimal Desktop (最小化桌面)</li><li>Minimal ( 最小化)</li><li>Basic Server (基本服务器)</li><li>DatabaseServer(数据库服务器)</li><li>Web Server (网页服务器)</li><li>Virtual Host (虚拟主机)</li><li>software development workstation (软件开发工作站)</li></ol><h4 id="安装日志"><a href="#安装日志" class="headerlink" title="安装日志"></a>安装日志</h4><ol><li>&#x2F;rootinstall.log:存储了安装在系统中的<br>软件包及其版本信息</li><li>&#x2F;root&#x2F;install.log.syslog:存储了安装过程中<br>留下的事件记录</li><li>&#x2F;rootanaconda-ks.cfg:以Kickstart配置文<br>件的格式记录安装过程中设置的选项信息</li></ol><p><strong>kickstart配置文件</strong>记录了<strong>无人值守</strong>安装的过程，这相当于复制了一台已经装好的linux服务器</p><h3 id="远程登录管理工具"><a href="#远程登录管理工具" class="headerlink" title="远程登录管理工具"></a>远程登录管理工具</h3><h4 id="设置centos网卡"><a href="#设置centos网卡" class="headerlink" title="设置centos网卡"></a>设置centos网卡</h4><h5 id="配置静态网络"><a href="#配置静态网络" class="headerlink" title="配置静态网络"></a>配置静态网络</h5><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /etc/sysconfig/network-scripts<span class="token comment"># 如果改错了就无法连接xshell，所以先备份一下</span><span class="token function">cp</span> ifcfg-ens33 ifcfg-ens33.bak<span class="token function">vim</span> ifcfg-ens33</code></pre><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#网卡配置表</span><span class="token assign-left variable">TYPE</span><span class="token operator">=</span><span class="token string">"Ethernet"</span><span class="token comment">#网卡类型：以太网</span><span class="token assign-left variable">PROXY_METHOD</span><span class="token operator">=</span><span class="token string">"none"</span><span class="token comment">#代理方式：无</span><span class="token assign-left variable">BROWSER_ONLY</span><span class="token operator">=</span><span class="token string">"no"</span><span class="token comment">#只是支持浏览器：否</span><span class="token assign-left variable">BOOTPROTO</span><span class="token operator">=</span><span class="token string">"dhcp"</span><span class="token comment">#网卡协议：DHCP</span><span class="token assign-left variable">DEFROUTE</span><span class="token operator">=</span><span class="token string">"yes"</span><span class="token comment">#默认路由：是</span><span class="token assign-left variable">IPV4_FAILURE_FATAL</span><span class="token operator">=</span><span class="token string">"no"</span><span class="token comment">#是否开启IPV4致命错误检测：否</span><span class="token assign-left variable">IPV6INIT</span><span class="token operator">=</span><span class="token string">"yes"</span><span class="token comment">#IPV6是否自动初始化：是</span><span class="token assign-left variable">IPV6_AUTOCONF</span><span class="token operator">=</span><span class="token string">"yes"</span><span class="token comment">#IPV6是否自动配置:是</span><span class="token assign-left variable">IPV6_DEFROUTE</span><span class="token operator">=</span><span class="token string">"yes"</span><span class="token comment">#IPV6默认路由：是</span><span class="token assign-left variable">IPV6_FAILURE_FATAL</span><span class="token operator">=</span><span class="token string">"no"</span><span class="token comment">#是否开启IPV6致命错误检测：否</span><span class="token assign-left variable">IPV6_ADDR_GEN_MODE</span><span class="token operator">=</span><span class="token string">"stable-privacy"</span> <span class="token comment">#IPV6地址生成模型</span><span class="token assign-left variable">NAME</span><span class="token operator">=</span><span class="token string">"ens33"</span><span class="token comment">#网卡名字(与DEVICE- 致)</span><span class="token assign-left variable">UUID</span><span class="token operator">=</span><span class="token string">"2f9f23c3-d3cf-40fd-8987-4cb1ddaa6e38"</span> <span class="token comment">#唯一标识码</span><span class="token assign-left variable">DEVICE</span><span class="token operator">=</span><span class="token string">"ens33"</span><span class="token comment">#网卡设备</span><span class="token assign-left variable">ONBOOT</span><span class="token operator">=</span><span class="token string">"yes"</span><span class="token comment">#是否激活网卡</span></code></pre><p><strong>改为如下字段</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">TYPE</span><span class="token operator">=</span><span class="token string">"Ethernet"</span><span class="token assign-left variable">PROXY_METHOD</span><span class="token operator">=</span><span class="token string">"none"</span><span class="token assign-left variable">BROWSER_ONLY</span><span class="token operator">=</span><span class="token string">"no"</span><span class="token assign-left variable">BOOTPROTO</span><span class="token operator">=</span><span class="token string">"static"</span><span class="token assign-left variable">IPADDR</span><span class="token operator">=</span><span class="token number">192.168</span>.245.135<span class="token comment">#写自己网段的静态地址，vmware可以在虚拟网络管理器看nat模式</span><span class="token assign-left variable">GATEYWAY</span><span class="token operator">=</span><span class="token number">192.168</span>.245.2 <span class="token comment">#写自己网关的静态地址，在NAT设置查看</span><span class="token assign-left variable">DEFROUTE</span><span class="token operator">=</span><span class="token string">"yes"</span><span class="token assign-left variable">IPV4_FAILURE_FATAL</span><span class="token operator">=</span><span class="token string">"no"</span><span class="token assign-left variable">IPV6INIT</span><span class="token operator">=</span><span class="token string">"yes"</span><span class="token assign-left variable">IPV6_AUTOCONF</span><span class="token operator">=</span><span class="token string">"yes"</span><span class="token assign-left variable">IPV6_DEFROUTE</span><span class="token operator">=</span><span class="token string">"yes"</span><span class="token assign-left variable">IPV6_FAILURE_FATAL</span><span class="token operator">=</span><span class="token string">"no"</span><span class="token assign-left variable">IPV6_ADDR_GEN_MODE</span><span class="token operator">=</span><span class="token string">"stable-privacy"</span> <span class="token assign-left variable">NAME</span><span class="token operator">=</span><span class="token string">"ens33"</span><span class="token assign-left variable">UUID</span><span class="token operator">=</span><span class="token string">"2f9f23c3-d3cf-40fd-8987-4cb1ddaa6e38"</span><span class="token assign-left variable">DEVICE</span><span class="token operator">=</span><span class="token string">"ens33"</span><span class="token assign-left variable">ONBOOT</span><span class="token operator">=</span><span class="token string">"yes"</span>:wq <span class="token comment">#保存</span></code></pre><pre class="language-bash" data-language="bash"><code class="language-bash">systemctl restart network <span class="token comment">#重启网络</span></code></pre><h5 id="配置主机名"><a href="#配置主机名" class="headerlink" title="配置主机名"></a>配置主机名</h5><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">hostname</span> <span class="token punctuation">(</span>主机名<span class="token punctuation">)</span>  <span class="token comment">#临时性命令，重启失效</span><span class="token comment"># 永久更改主机名</span><span class="token function">vi</span> /etc/hostnamedongruan1</code></pre><h5 id="配置防火墙"><a href="#配置防火墙" class="headerlink" title="配置防火墙"></a>配置防火墙</h5><pre class="language-bash" data-language="bash"><code class="language-bash">systemctl status firewalld<span class="token comment"># 查看防火墙状态</span>systemctl stop firewalld <span class="token comment"># 配置停止防火墙</span>systemctl disable firewalld <span class="token comment"># 配置防火墙停止重启自动开启</span>systemctl status firewalld<span class="token comment"># 查看防火墙是否关闭</span>firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --add-port<span class="token operator">=</span><span class="token number">80</span>/tcp <span class="token parameter variable">--permanent</span> <span class="token comment">#防火墙放行80端口</span><span class="token comment"># 配置系统服务时使用 system 服务名 操作</span><span class="token comment"># 服务名: firewall </span><span class="token comment"># 操作: enable disable start stop restart</span></code></pre><h5 id="配置安全策略-SELinux"><a href="#配置安全策略-SELinux" class="headerlink" title="配置安全策略(SELinux)"></a>配置安全策略(SELinux)</h5><pre class="language-bash" data-language="bash"><code class="language-bash">getenforce<span class="token comment"># 查看安全策略</span>setenforce <span class="token number">0</span> <span class="token comment"># 临时关闭SElinux</span>getenforce<span class="token comment"># 查看安全策略是否关闭</span><span class="token comment"># 永久关闭SElinux</span><span class="token function">vim</span> /etc/selinux/config<span class="token assign-left variable">SELINUX</span><span class="token operator">=</span> disabled</code></pre><p><strong>注意</strong>：</p><ol><li><p>永久关闭SElinux需要重启主机生效。</p></li><li><p>如果主机是生产环境不能重启，但又要实现永久关闭SElinux：</p><ol><li>先做临时关闭</li><li>修改其配置文件实现永久关闭，但不需要重启主机</li></ol></li></ol><h5 id="配置DNS"><a href="#配置DNS" class="headerlink" title="配置DNS"></a>配置DNS</h5><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /etc/resolv.conf</code></pre><p><strong>写入以下内容</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash">nameserver <span class="token number">8.8</span>.8.8 <span class="token comment"># dns地址</span>search localdomain <span class="token comment"># 搜索网关</span></code></pre><h4 id="VMware网络配置"><a href="#VMware网络配置" class="headerlink" title="VMware网络配置"></a>VMware网络配置</h4><p>在VMware找到<strong>编辑</strong>选项，进入<strong>虚拟网络编辑器</strong>，点击<strong>更改设置</strong>即可调整</p><p><img src="/2021/12/03/linux-bi-ji/image-20211110200809771.png"></p><p><strong>桥接</strong>：利用真实网卡，可以直接和真机通信，但是要占用IP地址。</p><p>桥接设置的IP要和真机网段相同</p><p><strong>net</strong>：net能访问互联网，相当于VMware做了一个<a href="https://baike.baidu.com/item/nat/320024?fr=aladdin">net</a>(网络地址转换)</p><p><strong>host-only</strong>：host-only只能和本机通信</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">su</span>            <span class="token comment">#获取root权限</span><span class="token function">ifconfig</span>           <span class="token comment">#检查ip</span><span class="token function">ifconfig</span> ens33 <span class="token number">192.168</span>.110.2 <span class="token comment">#(设置一个ip) </span><span class="token comment">#centos7会给没有设置网卡名称的自动设置，例如br0</span><span class="token comment">#在ifconfig中检查192网段的地址，就是这台linux的地址</span></code></pre><p><img src="/2021/12/03/linux-bi-ji/image-20211111172025297.png"></p><h4 id="使用ssh远程工具连接linux"><a href="#使用ssh远程工具连接linux" class="headerlink" title="使用ssh远程工具连接linux"></a>使用ssh远程工具连接linux</h4><p>找到ens33网卡的IP写入即可连接</p><p><strong>常见的连接工具有</strong>：<a href="https://www.xshell.com/zh/xshell/">xshell</a>，<a href="https://www.hostbuf.com/">finalshell</a>，<a href="https://mobaxterm.mobatek.net/">mobaxterm</a></p><p>**什么是shell(壳)**：</p><p><code>shell</code>是系统的用户界面</p><p><strong>什么是GUI</strong>：</p><p>图形界面称<code>GUI</code>，字符界面称<code>CLI</code></p><p><code>windows</code>的<code>GUI</code>是资源管理器称</p><p><code>linux</code>的<code>GUI</code>是<code>GNOME</code>和<code>KDE</code>，统称<code>X window</code></p><h3 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h3><h4 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h4><ol><li>获取Ubuntu版本</li></ol><pre class="language-bash" data-language="bash"><code class="language-bash">lsb_release <span class="token parameter variable">-a</span></code></pre><ol start="2"><li>备份源</li></ol><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">cp</span> /etc/apt/sources.list /etc/apt/sources.list.bcakup</code></pre><ol start="3"><li>使用vi修改源</li></ol><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">vi</span> /etc/apt/sources.list</code></pre><ol start="4"><li>更新源</li></ol><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">apt-get</span> upgrade <span class="token parameter variable">-y</span></code></pre><h4 id="CentOS"><a href="#CentOS" class="headerlink" title="CentOS"></a>CentOS</h4><h5 id="设置yum源指向本地"><a href="#设置yum源指向本地" class="headerlink" title="设置yum源指向本地"></a>设置yum源指向本地</h5><p><strong>介绍</strong>：</p><ol><li><p><strong>RedHat系列</strong>系统安装包时使用rpm安装rpm包需要安装依赖，yum会检测依赖并自动化安装</p></li><li><p><strong>Debian系列</strong>系统安装包时使用deb安装deb包需要安装依赖，apt-get会检测依赖并自动化安装</p></li><li><p>挂载镜像</p></li></ol><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 临时挂载</span>ll /mnt<span class="token comment"># 再查看挂载区</span><span class="token function">mount</span> /dev/sr0 /mnt <span class="token comment">#挂载命令是临时性的</span>ll /mnt <span class="token comment"># 再查看挂载的是不是镜像的内容</span><span class="token function">df</span> <span class="token parameter variable">-h</span><span class="token comment"># 查看硬件</span><span class="token comment"># 永久挂载</span><span class="token function">vi</span> etc/fstab</code></pre><p>插入dev&#x2F;sr0</p><pre class="language-bash" data-language="bash"><code class="language-bash">/dev/mapper/centos-root /                       xfs     defaults        <span class="token number">0</span> <span class="token number">0</span><span class="token assign-left variable">UUID</span><span class="token operator">=</span>1bfb16ea-82d5-4db2-99b2-4800722dbf9a /boot                   xfs     defaults        <span class="token number">0</span> <span class="token number">0</span>/dev/mapper/centos-swap swap                    swap    defaults        <span class="token number">0</span> /dev/sr0/mntiso9660 defaults        <span class="token number">0</span> <span class="token number">0</span></code></pre><p><strong>注意</strong>：格式不能写错，否则无法开机。需要重新在启动界面输入root密码，在命令行更改：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">vi</span> etc/fatab <span class="token comment">#修改</span>ll /mnt <span class="token comment">#查看是否挂载</span></code></pre><ol start="2"><li>尝试使用rpm安装</li></ol><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /mnt/Packages<span class="token function">ls</span><span class="token function">rpm</span> <span class="token parameter variable">-ivh</span> vim-common-7.4.160-2.el7.x86_64.rpm <span class="token comment"># 这时会要求安装依赖</span></code></pre><ol start="3"><li>使用yum安装</li></ol><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /etc/yum.repos.d/<span class="token function">ls</span> <span class="token comment"># 此时显示的是yum源的配置存放地，这些配置全都指向官网</span><span class="token comment"># 现在弄一个本地的</span><span class="token comment"># 先备份</span><span class="token function">mkdir</span> bak <span class="token comment">#创建bak</span><span class="token function">mv</span> * bak <span class="token comment">#把当前的文件移动到bak</span><span class="token function">vi</span> local.repo <span class="token comment"># 创建local.repo文件</span></code></pre><p><strong>创建repo</strong>:</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>dongruan<span class="token punctuation">]</span><span class="token assign-left variable">name</span><span class="token operator">=</span>this is a local.repo <span class="token comment">#简介</span><span class="token assign-left variable">baseurl</span><span class="token operator">=</span>file://mnt<span class="token comment">#定义仓库路径</span><span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">1</span><span class="token comment">#开启仓库</span><span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">0</span><span class="token comment">#关闭密钥</span>:wq</code></pre><p><strong>使用创建好的本地repo安装vim</strong>:</p><pre class="language-bash" data-language="bash"><code class="language-bash">yum list<span class="token comment">#查看仓库软件</span>yum repolist<span class="token comment">#查看有多少个软件包</span>yum <span class="token function">install</span> <span class="token function">vim</span> <span class="token comment">#yum调用仓库安装vim,解决依赖关系</span></code></pre><h5 id="设置yum源指向阿里"><a href="#设置yum源指向阿里" class="headerlink" title="设置yum源指向阿里"></a>设置yum源指向阿里</h5><p><strong>设网络置源时尽量去官网找链接</strong>：<a href="https://developer.aliyun.com/mirror/">阿里镜像站</a></p><p><strong>这里说一下大概的步骤</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 备份</span><span class="token function">mv</span> /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup <span class="token comment">#给你的镜像源换个名字</span><span class="token comment"># 下载新的 CentOS-Base.repo 到 /etc/yum.repos.d/</span><span class="token function">wget</span> <span class="token parameter variable">-O</span> /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-vault-8.5.2111.repo<span class="token comment"># 更新缓存</span>yum clean all <span class="token comment">#清理源缓存</span>yum makecache <span class="token comment">#创建新缓存</span><span class="token comment"># 更新yum</span>yum update <span class="token parameter variable">-y</span></code></pre><h3 id="linux命令格式"><a href="#linux命令格式" class="headerlink" title="linux命令格式"></a>linux命令格式</h3><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#命令名[选项][参数]</span><span class="token comment">#命令名是描述命令功能的英文单词的缩写</span><span class="token comment">#选项是选择命令的功能，通常以‘-’开头。当有多个选项时可以只写一个‘-’，如：‘ls -l -a’与ls -la相同。另外部分选项以‘--’开头，如‘ls --help’</span><span class="token comment">#参数是你要处理的对象</span></code></pre><h3 id="linux的系统特性"><a href="#linux的系统特性" class="headerlink" title="linux的系统特性"></a>linux的系统特性</h3><ol><li>一切皆文件</li><li>整个系统是由很多小程序组成的</li><li>尽量避免与用户交互</li><li>使用纯文本文件保存信息</li></ol><h3 id="基本界面"><a href="#基本界面" class="headerlink" title="基本界面"></a>基本界面</h3><p><img src="/2021/12/03/linux-bi-ji/image-20220628185501707.png"></p><p><strong>root</strong>：用户名称</p><p><strong>localhost</strong>：主机名称</p><p>**~**：家目录</p><h3 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h3><h4 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#使用tab键自动补全</span><span class="token comment">#使用ctrl+c键强制终止</span><span class="token comment">#使用ctrl+l键清屏，与clear相同</span><span class="token comment">#使用ctrl+u清除光标前面的内容</span><span class="token comment">#使用ctrl+l清除光标后面的内容</span><span class="token comment">#使用↑键列出上一条命令</span></code></pre><h2 id="linux命令、通配符、技巧"><a href="#linux命令、通配符、技巧" class="headerlink" title="linux命令、通配符、技巧"></a>linux命令、通配符、技巧</h2><p>所有命令都可以在后面添加<code>--help</code>来查看命令功能</p><h4 id="查看IP命令"><a href="#查看IP命令" class="headerlink" title="查看IP命令"></a>查看IP命令</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">ifconfig</span><span class="token function">ip</span> address</code></pre><h4 id="查看当前路径"><a href="#查看当前路径" class="headerlink" title="查看当前路径"></a>查看当前路径</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">pwd</span></code></pre><h3 id="文件目录操作命令"><a href="#文件目录操作命令" class="headerlink" title="文件目录操作命令"></a>文件目录操作命令</h3><h4 id="查看磁盘占用"><a href="#查看磁盘占用" class="headerlink" title="查看磁盘占用"></a>查看磁盘占用</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">df</span> <span class="token parameter variable">-h</span></code></pre><p><img src="/2021/12/03/linux-bi-ji/image-20220629203944831.png"></p><p><strong>tmpfs</strong>：内核文件</p><h4 id="文件查看命令"><a href="#文件查看命令" class="headerlink" title="文件查看命令"></a>文件查看命令</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">ls</span> <span class="token parameter variable">-l</span> /*** <span class="token operator">=</span> ll <span class="token comment">#文件查看命令</span><span class="token parameter variable">-l</span> <span class="token comment">#显示详细信息</span><span class="token parameter variable">-a</span> <span class="token comment">#显示隐藏信息</span><span class="token parameter variable">-d</span> <span class="token comment">#显示文件属性</span><span class="token parameter variable">-h</span> <span class="token comment">#人性化显示文件大小</span></code></pre><p><strong>ls内容</strong>：蓝色代表目录，无色代表文件</p><p><strong>详细内容的含义：</strong></p><p><img src="/2021/12/03/linux-bi-ji/image-20220628191339881.png"></p><p><strong>第一组，首字符意思：</strong></p><ol><li><code>-</code>代表普通文件</li><li><code>d</code>代表目录</li><li><code>l</code>代表链接（快捷方式）</li><li><code>c</code>代表字符设备（键盘鼠标）</li><li><code>b</code>代表块设备（硬盘）</li></ol><p><strong>第二组：</strong>被硬链接的次数，文件默认为1，目录默认为2</p><p><strong>第三组：</strong>文件所有者</p><p><strong>第四组</strong>：文件所属组</p><p><strong>第五组</strong>：文件的大小，只显示目录大小</p><p><strong>第六组：</strong>修改时间</p><p><strong>第七组：</strong>文件名</p><h4 id="创建文件"><a href="#创建文件" class="headerlink" title="创建文件"></a>创建文件</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">touch</span> a <span class="token comment">#创建一个空白文件</span><span class="token function">touch</span> a b c <span class="token comment">#一次性创建多个文件</span><span class="token function">touch</span> a<span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">..</span><span class="token number">100</span><span class="token punctuation">&#125;</span>.txt <span class="token comment">#创建a1-a100的文件</span><span class="token function">mkdir</span> text <span class="token comment">#创建一个空目录（make dictory)</span><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> x/y/z <span class="token comment">#一次性创建多级目录</span><span class="token function">mkdir</span> a b c <span class="token comment">#一次性创建多个目录</span><span class="token function">rmdir</span> a <span class="token comment">#删除空目录(remove dictory)</span><span class="token function">rm</span> a <span class="token comment">#删除文件(remove)</span><span class="token function">rm</span> <span class="token parameter variable">-f</span> <span class="token comment">#强制删除文件，无需确认(force)</span><span class="token function">rm</span> <span class="token parameter variable">-r</span> <span class="token comment">#删除目录</span><span class="token function">rm</span> <span class="token parameter variable">-rf</span> <span class="token comment">#强制删除目录</span><span class="token function">rm</span> <span class="token parameter variable">-rf</span> .* <span class="token comment">#删除目录内所有文件(包括隐藏文件)</span></code></pre><h4 id="复制，移动文件"><a href="#复制，移动文件" class="headerlink" title="复制，移动文件"></a>复制，移动文件</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">cp</span> 源文件 目标文件 <span class="token comment">#复制文件(copy)</span><span class="token function">cp</span> /etc/fstab /tmp <span class="token comment">#复制文件不改名</span><span class="token function">cp</span> /etc/fstab /tmp/hi.txt <span class="token comment">#复制文件改名成hi.txt</span><span class="token function">cp</span> <span class="token parameter variable">-r</span> /home /tmp/test/ <span class="token comment">#把home目录复制到指定目录，不使用-r（递归）会掠过</span><span class="token function">cp</span> <span class="token parameter variable">-p</span> <span class="token comment">#保持使用权限不变</span><span class="token function">mv</span> 源文件名 更改后的文件名 <span class="token comment">#更改文件名，移动目录不需要参数</span></code></pre><h3 id="通配符"><a href="#通配符" class="headerlink" title="通配符"></a>通配符</h3><p><code>*</code>可以匹配<strong>任意数量</strong>的<strong>任意字符</strong>,例如：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">ls</span> <span class="token parameter variable">-d</span> /etc/pa* <span class="token comment">#表示找etc下所有以pa开头的文件</span><span class="token comment">#path path1 path-2 等</span></code></pre><p><code>？</code>可以匹配<strong>相应位置</strong>的<strong>单个任意字符</strong>,例如：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">ls</span> <span class="token parameter variable">-d</span> /etc/pa? <span class="token comment">#表示找etc下所有pa+（任意字符）的文件</span><span class="token comment">#pat pa2 pa+ 等</span></code></pre><p><code>[]</code>匹配<strong>指定范围内</strong>的<strong>单个任意字符</strong>,例如：</p><ol><li>[edf]表示范围edf</li><li>[0-9]表示范围0-9</li><li>[!edf]表示非def的范围</li></ol><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">ls</span> <span class="token parameter variable">-d</span> /dev/<span class="token punctuation">[</span>df<span class="token punctuation">]</span>?? <span class="token comment">#表示找dev下所有d&amp;f+?+?的文件</span><span class="token comment">#dvd fb0 dcd 等</span><span class="token function">ls</span> <span class="token parameter variable">-d</span> /dev/??<span class="token punctuation">[</span><span class="token number">0</span>-9<span class="token punctuation">]</span> <span class="token comment">#表示找dev下?+?+0到9的文件</span><span class="token comment">#aa1 bb2 ca4 等</span><span class="token function">ls</span> <span class="token parameter variable">-d</span> /dev/<span class="token punctuation">[</span><span class="token operator">!</span>fhi<span class="token punctuation">]</span>* <span class="token comment">#表示开头不能是fhi的文件，！表示取反</span></code></pre><p><code>&#123;&#125;</code>可以包含一个以逗号分隔的路径列表（<strong>非通配符</strong>）</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> /tmp/<span class="token punctuation">&#123;</span>a,b,c<span class="token punctuation">&#125;</span> <span class="token comment">#表示批量创建了/tmp/a /tmp/b /tmp/c的三个目录</span><span class="token function">touch</span> /tmp/<span class="token punctuation">&#123;</span>a,b,c<span class="token punctuation">&#125;</span>.txt<span class="token comment">#表示批量创建了/tmp/a.txt /tmp/b.txt /tmp/c.txt的三个文件</span></code></pre><h4 id="命令调用技巧"><a href="#命令调用技巧" class="headerlink" title="命令调用技巧"></a>命令调用技巧</h4><ol><li><p>无法记住完整的<strong>命令</strong>或<strong>路径</strong>按下<code>tab</code>自动补全，按<strong>两下</strong>可以列出指定字符开头的命令或路径,例如：</p><pre class="language-bash" data-language="bash"><code class="language-bash">system <span class="token comment">#tab2连击可以列出所有以system开头的命令</span><span class="token comment">#system-config-abrt  systemd-coredumpctl等</span></code></pre></li><li><p>调用上条命令，按下<code>↑</code>键即可</p></li><li><p>调用上条命令的路径，输入!$,例如：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">ls</span> <span class="token parameter variable">-l</span> <span class="token operator">!</span>$</code></pre><p>或者在写完的命令后按<code>ESC+.</code></p></li><li><p>查询命令的历史记录，输入<code>history</code>即可</p></li></ol><h3 id="文件内容操作命令"><a href="#文件内容操作命令" class="headerlink" title="文件内容操作命令"></a>文件内容操作命令</h3><h4 id="查看文件内容"><a href="#查看文件内容" class="headerlink" title="查看文件内容"></a>查看文件内容</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> <span class="token comment">#查看文件内容,链接多个文件内容（concarebate），只能查看文本信息，不能查看可执行文件</span><span class="token function">cat</span> /etc/sudoers <span class="token comment">#显示sudoers的纯文本信息</span><span class="token function">cat</span> /etc/redhat-release <span class="token comment">#查看文件系统版本</span><span class="token function">uname</span> <span class="token parameter variable">-a</span> <span class="token comment">#可以查看系统信息，例如kernel内核版本</span><span class="token function">cat</span> <span class="token parameter variable">-n</span> <span class="token comment">#显示文本添加行号</span><span class="token function">cat</span> 文件名 <span class="token operator">|</span><span class="token function">grep</span> 关键字 <span class="token comment">#查看文件内容并筛选出关键词</span><span class="token comment">#管道(|)：获取上一个命令的结果作为下一个命令的输入</span><span class="token function">more</span> <span class="token comment">#查看文件内容，分页显示满屏暂停，空格翻页，回车加行，不能往上看</span><span class="token function">less</span> <span class="token comment">#查看文件内容，不会自动退出，按q退出</span><span class="token function">head</span> <span class="token comment">#查看文件的前10行</span><span class="token function">head</span> <span class="token parameter variable">-3</span> <span class="token comment">#查看文件的前3行</span><span class="token function">tail</span> <span class="token comment">#查看文件最后10行</span><span class="token function">tail</span> <span class="token parameter variable">-f</span> <span class="token comment">#实时查看文件新增内容，排错专用</span><span class="token function">tail</span> <span class="token parameter variable">-f</span> /var/log/messages <span class="token comment">#动态查看实时日志信息</span></code></pre><h4 id="统计，输出内容"><a href="#统计，输出内容" class="headerlink" title="统计，输出内容"></a>统计，输出内容</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">wc</span> <span class="token comment">#统计行数、单词数、字节数（word count）</span><span class="token function">wc</span> <span class="token parameter variable">-l</span> <span class="token comment">#统计行数</span><span class="token builtin class-name">echo</span> <span class="token comment">#意思为显示</span><span class="token builtin class-name">echo</span> <span class="token comment">#输出内容</span><span class="token builtin class-name">echo</span> <span class="token string">'hello world!'</span> <span class="token comment">#输出hello world!在屏幕</span><span class="token builtin class-name">echo</span> <span class="token string">'hello world!'</span> <span class="token operator">></span> a.txt <span class="token comment">#把hello world!覆盖重定向输出至a.txt，没有该文件则创建该文件</span><span class="token comment">#覆盖重定向(>): 把前面的内容覆盖到后面的内容</span><span class="token comment">#追加重定向(>>):把前面的内容追加到后面的内容</span><span class="token comment">#未终止符(\): 不结束输入，直到用户自己结束</span></code></pre><h4 id="查找文件内容"><a href="#查找文件内容" class="headerlink" title="查找文件内容"></a>查找文件内容</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">grep</span> <span class="token string">"root"</span> /etc/password <span class="token comment">#查找possword文件里包含root的内容</span><span class="token function">grep</span> <span class="token parameter variable">-n</span> <span class="token string">"root"</span> /etc/password <span class="token comment">#显示行号</span><span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token string">"root"</span> /etc/password <span class="token comment">#显示不包含root的内容</span><span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token string">"^$"</span> /etc/fstab <span class="token comment">#查看文件不是空白行的内容</span><span class="token function">grep</span> <span class="token parameter variable">-w</span> <span class="token string">"num"</span> <span class="token comment">#精确匹配单词</span><span class="token function">grep</span> <span class="token parameter variable">-r</span> <span class="token string">'pass'</span> <span class="token comment">#递归查找当前目录下所有包含pass的文件</span><span class="token function">grep</span> <span class="token string">"^root"</span> /etc/password <span class="token comment">#找possword文件里开头为root的内容</span><span class="token function">grep</span> <span class="token string">"root$"</span> /etc/password <span class="token comment">#找possword文件里结尾为root的内容</span></code></pre><p><strong>grep命令只支持正则表达式（不支持通配符）</strong>：</p><p><strong>以word开头</strong>：<code>^</code>+word</p><p><strong>以word结尾</strong>：word+<code>$</code></p><p><strong>默认区分大小写</strong>：grep</p><h4 id="比较文件内容"><a href="#比较文件内容" class="headerlink" title="比较文件内容"></a>比较文件内容</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">diff</span> 文件1 文件2 <span class="token comment">#比较文件文本的不同(different)</span><span class="token function">cp</span> .bashrc .bashrc.bak <span class="token comment">#复制启动项文件</span><span class="token function">diff</span> .bashrc .bashrc.bak <span class="token comment">#每次开机检查启动项是否被修改</span></code></pre><p><strong>显示结果中</strong>：a，d，c分别代表增加、删除、修改</p><p><code>&lt;</code>属于前面的文件，<code>&gt;</code>属于后面的文件</p><h4 id="写入文件内容"><a href="#写入文件内容" class="headerlink" title="写入文件内容"></a>写入文件内容</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#把内容导入到a.txt</span><span class="token function">cat</span> <span class="token operator">></span> a.txt <span class="token operator">&lt;&lt;</span> <span class="token string">eof<span class="token bash punctuation"> <span class="token comment">#这里的eof是结束标志，对应下面输入eof结束</span></span>123abc709eof</span> <span class="token comment">#输入eof结束</span><span class="token builtin class-name">echo</span> "<span class="token punctuation">\</span></code></pre><h3 id="日期和时间相关命令"><a href="#日期和时间相关命令" class="headerlink" title="日期和时间相关命令"></a>日期和时间相关命令</h3><h4 id="查询年月日"><a href="#查询年月日" class="headerlink" title="查询年月日"></a>查询年月日</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">date</span> +%F <span class="token comment">#查询年月日格式</span><span class="token function">date</span> <span class="token parameter variable">--help</span> <span class="token comment">#帮助里有很多格式</span><span class="token function">cp</span> /etc/passwd /tmp/passwd.bak.<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%F<span class="token variable">)</span></span><span class="token comment">#备份passwd文件并加上.日期</span>hwclock <span class="token comment">#查询CMOS(BIOS)硬件时钟</span><span class="token function">cal</span> <span class="token number">2021</span> <span class="token comment">#显示2021的日历</span><span class="token function">cal</span> <span class="token number">1</span> <span class="token number">2021</span> <span class="token comment">#显示2021年一月的日历</span></code></pre><h4 id="查看文件元数据"><a href="#查看文件元数据" class="headerlink" title="查看文件元数据"></a>查看文件元数据</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">stat</span> text.txt <span class="token comment">#查看文件元数据(windows的属性)</span></code></pre><p><strong>元数据</strong>：文件使用权限，大小，文件名称、属性等。</p><p>**最近访问时间(access time)**：查看、读取文件内容的时间。</p><p>**最近更改时间(modify time)**：文件元数据改变的时间。</p><p>**最近改动时间(change time)**：文件元数据改变的时间。</p><h3 id="文件查找命令"><a href="#文件查找命令" class="headerlink" title="文件查找命令"></a>文件查找命令</h3><p><strong>简介</strong>：与grep不同，locate相当于windows的搜索。但是locate依赖于搜索数据库，无法对新建文件进行查找，也无法掠过刚删除的文件。有滞后性。</p><p><strong>注意</strong>：查找文件一般用find命令！</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">locate</span> ssd_config <span class="token comment">#快速的文件查找命令</span><span class="token function">find</span> <span class="token punctuation">[</span>查找起始路径<span class="token punctuation">]</span><span class="token punctuation">[</span>选项<span class="token punctuation">]</span><span class="token punctuation">[</span>查找条件<span class="token punctuation">]</span><span class="token punctuation">[</span>处理动作<span class="token punctuation">]</span><span class="token function">find</span> /etc <span class="token parameter variable">-name</span> <span class="token string">"passwd"</span> <span class="token comment">#查找名字叫passwd的文件</span><span class="token function">find</span> /etc <span class="token parameter variable">-name</span> <span class="token string">"*passwd*"</span> <span class="token comment">#多级(递归)查找名字里含有pass的文件</span><span class="token function">find</span> /etc <span class="token parameter variable">-iname</span> <span class="token string">"passwd"</span> <span class="token comment">#忽略大小写查找名字叫passwd的文件</span><span class="token function">find</span> <span class="token parameter variable">-empty</span> /root <span class="token comment">#查找空目录</span></code></pre><p><strong>按文件类型查找</strong>：普通文件(f)、目录(d)、符号链接文件(l)、块设备文件(b)、字符设备文件(c)等。</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">find</span> /boot <span class="token parameter variable">-type</span> d <span class="token comment">#查找子目录</span></code></pre><p><strong>处理动作用法</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">find</span> /boot <span class="token parameter variable">-type</span> d <span class="token parameter variable">-ls</span> <span class="token comment">#查看boot文件的详细信息</span><span class="token function">find</span> /boot <span class="token parameter variable">-empty</span> <span class="token parameter variable">-type</span> d <span class="token comment">#查看空目录</span><span class="token function">find</span> /boot <span class="token parameter variable">-empty</span> <span class="token parameter variable">-type</span> f <span class="token comment">#查看空文件</span><span class="token function">find</span> /boot <span class="token parameter variable">-ctime</span> <span class="token parameter variable">-1</span> <span class="token comment">#查看最近一天改动的文件</span><span class="token function">find</span> /boot <span class="token parameter variable">-cmin</span> <span class="token parameter variable">-60</span> <span class="token comment">#查看最近一个小时改动的文件</span><span class="token function">find</span> /etc <span class="token parameter variable">-name</span> <span class="token string">"*ssh*"</span> <span class="token parameter variable">-type</span> f <span class="token parameter variable">-exec</span> <span class="token function">cp</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span> /tmp/ssh <span class="token punctuation">\</span><span class="token punctuation">;</span><span class="token comment">#把查到到的结果复制到tmp/ssh里，其中&#123;&#125;代表查找到的结果, \;表示结束</span><span class="token function">find</span> /tmp <span class="token parameter variable">-name</span> <span class="token string">"*.txt"</span> <span class="token parameter variable">-exec</span> <span class="token function">rm</span> <span class="token parameter variable">-f</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span> <span class="token punctuation">\</span><span class="token punctuation">;</span> <span class="token comment">#把tmp文件下的所有以txt后缀的文件全删除</span><span class="token function">rm</span> <span class="token parameter variable">-f</span> /tmp/*.txt <span class="token comment">#只能删除tmp文件里的.txt文件</span></code></pre><h4 id="xargs命令——find辅助命令"><a href="#xargs命令——find辅助命令" class="headerlink" title="xargs命令——find辅助命令"></a>xargs命令——find辅助命令</h4><pre class="language-bash" data-language="bash"><code class="language-bash"></code></pre><h3 id="vi-vim-编辑器"><a href="#vi-vim-编辑器" class="headerlink" title="vi(vim)编辑器"></a>vi(vim)编辑器</h3><p><img src="/2021/12/03/linux-bi-ji/image-20211201202923047.png"></p><p>默认在命令模式</p><p>按<code>a、i、o</code>进入输入模式</p><p>按<code>：</code>键进入末行模式</p><h4 id="命令模式操作："><a href="#命令模式操作：" class="headerlink" title="命令模式操作："></a>命令模式操作：</h4><h5 id="光标移动"><a href="#光标移动" class="headerlink" title="光标移动"></a>光标移动</h5><table><thead><tr><th align="center">操作类型</th><th align="center">操作键</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">光标方向移动</td><td align="center">↑，↓，←，→</td><td align="center">上，下，左，右</td></tr><tr><td align="center">翻页</td><td align="center">Page Down或Ctrl+F</td><td align="center">向下翻动一整页内容</td></tr><tr><td align="center"></td><td align="center">Page Up或CtrI+B</td><td align="center">向上翻动一整页内容</td></tr><tr><td align="center">行内快速跳转</td><td align="center"><code>Home</code>键或<code>^</code>、数字<code>0</code></td><td align="center">跳转至行首</td></tr><tr><td align="center"></td><td align="center"><code>End</code>键或<code>$</code>键</td><td align="center">跳转至行尾</td></tr><tr><td align="center"></td><td align="center">#→</td><td align="center">向右移动#个字符</td></tr><tr><td align="center"></td><td align="center">#←</td><td align="center">向左移动#个字符</td></tr><tr><td align="center">行间快速跳转</td><td align="center">1G或者gg</td><td align="center">跳转到文件的首行</td></tr><tr><td align="center"></td><td align="center">G</td><td align="center">跳转到文件的尾行</td></tr><tr><td align="center"></td><td align="center">#G</td><td align="center">跳转到文件中的第#行</td></tr><tr><td align="center">行号显示</td><td align="center">:set nu</td><td align="center">在编辑器中显示行号</td></tr><tr><td align="center"></td><td align="center">:set nonu</td><td align="center">取消编辑器中的行号显示</td></tr></tbody></table><h5 id="复制，粘贴，删除"><a href="#复制，粘贴，删除" class="headerlink" title="复制，粘贴，删除"></a>复制，粘贴，删除</h5><table><thead><tr><th align="center">操作类型</th><th align="center">操作键</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">删除</td><td align="center">x或<code>Del</code>键</td><td align="center">删除光标处的单个字符</td></tr><tr><td align="center"></td><td align="center">dd</td><td align="center">删除当前光标所在行</td></tr><tr><td align="center"></td><td align="center">#dd</td><td align="center">删除从光标处开始的行内容</td></tr><tr><td align="center"></td><td align="center">d^</td><td align="center">删除当前光标之前到行首的所有字符</td></tr><tr><td align="center"></td><td align="center">d$</td><td align="center">删除当前光标处到行尾的所有字符</td></tr><tr><td align="center">复制</td><td align="center">yy</td><td align="center">复制当前行整行的内容到剪贴板</td></tr><tr><td align="center"></td><td align="center">#yy</td><td align="center">复制从光标处开始的行内容</td></tr><tr><td align="center">粘贴</td><td align="center">p</td><td align="center">将缓冲区中的内容粘贴到光标位置处之后</td></tr></tbody></table><h5 id="文件内容查找"><a href="#文件内容查找" class="headerlink" title="文件内容查找"></a>文件内容查找</h5><table><thead><tr><th align="center">操作键</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">&#x2F;word</td><td align="center">从上而下在文件中查找字符串“word”</td></tr><tr><td align="center">?word</td><td align="center">从下而上在文件中查找字符串”word”</td></tr><tr><td align="center">n</td><td align="center">定位下一个匹配的被查找字符串</td></tr><tr><td align="center">N</td><td align="center">定位上一个配的被查找字符串</td></tr></tbody></table><h5 id="撤销编辑"><a href="#撤销编辑" class="headerlink" title="撤销编辑"></a>撤销编辑</h5><table><thead><tr><th align="center">操作键</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">u</td><td align="center">按一次取消最近的一次操作<br>多次重复按u健，恢复已进行的多步操作</td></tr><tr><td align="center">U</td><td align="center">用于取消对当前行所做的所有编辑</td></tr><tr><td align="center">Ctrl+r</td><td align="center">重做最后一次所撤销的操作</td></tr></tbody></table><h4 id="输入模式操作："><a href="#输入模式操作：" class="headerlink" title="输入模式操作："></a>输入模式操作：</h4><ol><li><p><strong>i</strong>：当前字符之前插入 （光标前）</p></li><li><p><strong>I</strong>：行首插入 （行首）</p></li><li><p><strong>a</strong>：当前字符之后插入 （光标后）</p></li><li><p><strong>A</strong>：行尾插入（行尾）</p></li><li><p><strong>o</strong>：下一行插入 （另起一行）</p></li><li><p><strong>O</strong>：上一行插入（上一行插入）</p></li></ol><h4 id="末行模式操作："><a href="#末行模式操作：" class="headerlink" title="末行模式操作："></a>末行模式操作：</h4><table><thead><tr><th>功能</th><th>命令</th><th>备注</th></tr></thead><tbody><tr><td>保存文件</td><td>:w</td><td></td></tr><tr><td></td><td>:w &#x2F;root&#x2F;newfile</td><td>另存为其他文件</td></tr><tr><td>退出vi</td><td>:q</td><td>未修改退出</td></tr><tr><td></td><td>:q!</td><td>放弃修改并退出</td></tr><tr><td>保存文件退出vi</td><td>:wq</td><td></td></tr></tbody></table><h4 id="可视模式操作："><a href="#可视模式操作：" class="headerlink" title="可视模式操作："></a>可视模式操作：</h4><p>除了上述三种常规模式之外，vi编辑器还有一种种可视模式，由于操作较为简单，所以略作介绍。<br>在命令模式下按下v键便可以进入可视模式，此时左右移动方向键，就会将光标所经过区域的字符选中，然后可以用y键进行复制，用d键进行删除，或是用p键进行粘贴。不论执行何种操<br>作，在操作结束之后，都会自动退出可视模式。</p><h3 id="开关机命令"><a href="#开关机命令" class="headerlink" title="开关机命令"></a>开关机命令</h3><h4 id="shutdown命令"><a href="#shutdown命令" class="headerlink" title="shutdown命令"></a>shutdown命令</h4><p><strong>简介</strong>：会给系统计划一个时间关机。它可以被用于停止、关机、重启机器。</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">shutdown</span> <span class="token comment"># 关机</span><span class="token function">shutdown</span> now<span class="token comment"># 马上关机</span><span class="token function">shutdown</span> <span class="token number">13</span>:20 <span class="token comment"># 在13:20分关机</span><span class="token function">shutdown</span> <span class="token parameter variable">-H</span> now <span class="token comment"># 停止机器</span><span class="token function">shutdown</span> <span class="token parameter variable">-r</span> 09:35 <span class="token comment"># 在09:35am重启机器</span><span class="token function">shutdown</span> <span class="token parameter variable">-c</span> <span class="token comment"># 取消任何shutdown命令</span></code></pre><h4 id="halt命令"><a href="#halt命令" class="headerlink" title="halt命令"></a>halt命令</h4><p><strong>简介</strong>：通知硬件来停止所有的 CPU 功能，但是仍然保持通电。你可以用它使系统处于低层维护状态。</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">halt</span><span class="token comment"># 停止机器</span><span class="token function">halt</span> <span class="token parameter variable">-p</span><span class="token comment"># 关闭机器</span><span class="token function">halt</span> <span class="token parameter variable">--reboot</span><span class="token comment"># 重启机器</span></code></pre><h4 id="poweroff命令"><a href="#poweroff命令" class="headerlink" title="poweroff命令"></a>poweroff命令</h4><p><strong>简介</strong>：会发送一个 ACPI 信号来通知系统关机。</p><pre class="language-bash" data-language="bash"><code class="language-bash">poweroff<span class="token comment"># 关闭计算机</span>poweroff <span class="token parameter variable">--halt</span> <span class="token comment"># 停止机器</span>poweroff <span class="token parameter variable">--reboot</span><span class="token comment"># 重启机器</span></code></pre><h4 id="reboot命令"><a href="#reboot命令" class="headerlink" title="reboot命令"></a>reboot命令</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">reboot</span><span class="token comment"># 重启机器</span><span class="token function">reboot</span> <span class="token parameter variable">--halt</span> <span class="token comment"># 停止机器</span><span class="token function">reboot</span> <span class="token parameter variable">-p</span><span class="token comment"># 关闭机器</span></code></pre><h4 id="init命令及7个启动级别"><a href="#init命令及7个启动级别" class="headerlink" title="init命令及7个启动级别"></a>init命令及7个启动级别</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#0 系统停机模式</span>init <span class="token number">0</span> <span class="token comment">#关机</span><span class="token comment">#1 单用户模式，root权限，用于系统维护，禁止远程登陆，就像Windows下的安全模式登录</span>init <span class="token number">1</span><span class="token comment">#2 多用户模式，没有NFS和网络支持</span>init <span class="token number">2</span><span class="token comment">#3 完整的多用户文本模式，有NFS和网络，登陆后进入控制台命令行模式</span>init <span class="token number">3</span><span class="token comment">#4 系统未使用，保留一般不用，在一些特殊情况下可以用它来做一些事情。例如在笔记本电脑的电池用尽时，可以切换到这个模式来做一些设置</span>init <span class="token number">4</span><span class="token comment">#5 图形化模式，登陆后进入图形GUI模式，X Window系统</span>init <span class="token number">5</span><span class="token comment">#6 重启模式，默认运行级别不能设为6，否则不能正常启动。运行init 6机器就会重启</span>init <span class="token number">6</span></code></pre><h3 id="修改上海时区"><a href="#修改上海时区" class="headerlink" title="修改上海时区"></a>修改上海时区</h3><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># timedatectl # 查看系统时间方面的各种状态</span>      Local time: 四 <span class="token number">2014</span>-12-25 <span class="token number">10</span>:52:10 CST  Universal time: 四 <span class="token number">2014</span>-12-25 02:52:10 UTC        RTC time: 四 <span class="token number">2014</span>-12-25 02:52:10        Timezone: Asia/Shanghai <span class="token punctuation">(</span>CST, +0800<span class="token punctuation">)</span>     NTP enabled: <span class="token function">yes</span>NTP synchronized: <span class="token function">yes</span> RTC <span class="token keyword">in</span> <span class="token builtin class-name">local</span> TZ: no      DST active: n/a<span class="token comment"># timedatectl list-timezones # 列出所有时区</span><span class="token comment"># timedatectl set-local-rtc 1 # 将硬件时钟调整为与本地时钟一致, 0 为设置为 UTC 时间</span><span class="token comment"># timedatectl set-timezone Asia/Shanghai # 设置系统时区为上海</span>其实不考虑各个发行版的差异化, 从更底层出发的话, 修改时间时区比想象中要简单:<span class="token comment"># cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span></code></pre><h3 id="编写shell脚本"><a href="#编写shell脚本" class="headerlink" title="编写shell脚本"></a>编写shell脚本</h3><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token assign-left variable">time1</span><span class="token operator">=</span>%<span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token builtin class-name">echo</span> 当前操作系统为：<span class="token function">cat</span> /etc/redhat-release<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">"<span class="token entity" title="\033">\033</span>[32;40m当前时间为: <span class="token variable">$time1</span><span class="token entity" title="\033">\033</span>[0m"</span><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">"<span class="token entity" title="\033">\033</span>[32;40m选择功能<span class="token entity" title="\033">\033</span>[0m"</span><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">"<span class="token entity" title="\033">\033</span>[31;40m1. 备份并配置静态IP<span class="token entity" title="\033">\033</span>[0m"</span><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">"<span class="token entity" title="\033">\033</span>[31;40m2. 配置主机名<span class="token entity" title="\033">\033</span>[0m"</span><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">"<span class="token entity" title="\033">\033</span>[31;40m3. 关闭防火墙<span class="token entity" title="\033">\033</span>[0m"</span><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">"<span class="token entity" title="\033">\033</span>[31;40m4. 备份并关闭selinux<span class="token entity" title="\033">\033</span>[0m"</span><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">"<span class="token entity" title="\033">\033</span>[31;40m5. 挂载镜像<span class="token entity" title="\033">\033</span>[0m"</span><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">"<span class="token entity" title="\033">\033</span>[31;40m6. 配置本地yum指向镜像<span class="token entity" title="\033">\033</span>[0m"</span><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">"<span class="token entity" title="\033">\033</span>[31;40m6. 配置阿里云yum<span class="token entity" title="\033">\033</span>[0m"</span><span class="token builtin class-name">read</span> number<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token variable">$number</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">then</span><span class="token comment">#备份网络配置文件</span><span class="token function">cp</span> /etc/sysconfig/ network- scripts/ifcfg-ens33 /etc/sysconfig/ network- scripts/ ifcfg-ens33. bak<span class="token comment">#自定义配置静态IP</span><span class="token builtin class-name">read</span> <span class="token parameter variable">-p</span> <span class="token string">"请输入ip地址:"</span> a<span class="token builtin class-name">read</span> <span class="token parameter variable">-p</span> <span class="token string">"请输入网关地址:"</span> b<span class="token function">cat</span> <span class="token operator">></span> /etc/sysconfig/network-scripts/ifcfg-ens33 <span class="token operator">&lt;&lt;</span> <span class="token string">todayTYPE="Ethernet"BOOTPROTO="static"IPADDR=<span class="token variable">$a</span>GATEWAY=<span class="token variable">$b</span>DEFROUTE="yes"NAME="ens33"DEVICE="ens33"ONBOOT="yes"today</span><span class="token comment">#配置主机名</span><span class="token builtin class-name">read</span> <span class="token parameter variable">-p</span> <span class="token string">"请输入主机名:"</span> c<span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$c</span>"</span> <span class="token operator">></span>/etc/hostname<span class="token comment">#关闭防火墙</span>systemctl stop firewalldsystemctl disable firewalld<span class="token comment">#备份selinux配置文件</span><span class="token function">cp</span> /etc/selinux/config /etc/selinux<span class="token comment">#关闭selinux</span><span class="token builtin class-name">echo</span> <span class="token string">" \SELINUX=disabledSELINUXTYPE=targeted "</span> <span class="token operator">></span>/etc/seliunx/config<span class="token comment">#永久挂载</span><span class="token builtin class-name">echo</span> <span class="token string">"/dev/sr0 /mnt iso9660 defaults 0 0"</span> <span class="token operator">>></span> /etc/fstab<span class="token comment">#备份原有yum仓库</span><span class="token builtin class-name">cd</span> /etc/ yum. repos.d <span class="token function">mkdir</span> bak <span class="token function">mv</span> * bak<span class="token comment">#配置本地yum源</span><span class="token builtin class-name">echo</span><span class="token punctuation">[</span>local<span class="token punctuation">]</span><span class="token assign-left variable">name</span><span class="token operator">=</span> this is a local.repo<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>file:///mnt<span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">1</span><span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">0</span> " <span class="token operator">></span>/etc/yum.repos.d/local.repo<span class="token comment">#配置网络yum源</span><span class="token function">curl</span> <span class="token parameter variable">-0</span> /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/ repo/Centos-7.repoyum makecacheyum <span class="token function">install</span> <span class="token parameter variable">-y</span> <span class="token function">wget</span> <span class="token function">vim</span><span class="token comment">#配置重启 </span><span class="token function">reboot</span></code></pre><h3 id="安装数据库"><a href="#安装数据库" class="headerlink" title="安装数据库"></a>安装数据库</h3><pre class="language-bash" data-language="bash"><code class="language-bash">yum search mariadb  <span class="token comment"># 查找mysql包</span>yum <span class="token function">install</span> mariadb maridb-server <span class="token parameter variable">-y</span> <span class="token comment"># 安装mysql</span>systemctl status mariadb <span class="token comment"># 查看mysql状态</span>systemctl start mariadb <span class="token comment"># 启动mysql</span><span class="token builtin class-name">cd</span> mysql_secure_installation <span class="token comment"># 数据库安全初始化</span><span class="token comment"># 设置密码</span><span class="token comment"># 关闭匿名用户</span><span class="token comment"># 不允许root远程登陆</span><span class="token comment"># 移除测试数据库</span><span class="token comment"># 重新加载权限表</span>show databace <span class="token comment"># 列出数据库</span>mysql <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p</span> </code></pre><h4 id="远程连接数据库"><a href="#远程连接数据库" class="headerlink" title="远程连接数据库"></a>远程连接数据库</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token keyword">select</span> user,host form mysql.user<span class="token punctuation">;</span>use mysql<span class="token punctuation">;</span>show tables<span class="token punctuation">;</span><span class="token keyword">select</span> * from user<span class="token punctuation">\</span>G<span class="token punctuation">;</span>update mysql.user <span class="token builtin class-name">set</span> <span class="token assign-left variable">host</span><span class="token operator">=</span><span class="token string">"%"</span> where <span class="token assign-left variable">host</span><span class="token operator">=</span><span class="token string">'localhost'</span><span class="token punctuation">;</span> <span class="token comment"># 把表里所有用户的localhost改为%</span><span class="token keyword">select</span> user,host from mysql.user<span class="token punctuation">;</span> <span class="token comment"># </span>flush </code></pre><h3 id="关于系统"><a href="#关于系统" class="headerlink" title="关于系统"></a>关于系统</h3><p><strong>简介</strong>：常见的架构有LAMP（阿帕奇），LNMP（nginx），LNMT（Tomcat）  </p><ol><li>学信系统</li><li>校园系统</li><li>网站系统</li></ol><h3 id="linux编译安装python3-10"><a href="#linux编译安装python3-10" class="headerlink" title="linux编译安装python3.10"></a>linux编译安装python3.10</h3><h4 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h4><pre class="language-bash" data-language="bash"><code class="language-bash">yum <span class="token parameter variable">-y</span> groupinstall <span class="token string">"Development tools"</span>yum <span class="token function">install</span> <span class="token parameter variable">-y</span> ncurses-devel gdbm-devel xz-devel sqlite-devel tk-devel uuid-devel readline-devel bzip2-devel libffi-develyum <span class="token function">install</span> <span class="token parameter variable">-y</span> openssl-devel openssl11-devel</code></pre><h4 id="下载python3-10-6"><a href="#下载python3-10-6" class="headerlink" title="下载python3.10.6"></a>下载python3.10.6</h4><p><strong>进入官网查看版本</strong>：<a href="https://www.python.org/ftp/python/3.10.6">https://www.python.org/ftp/python/3.10.6</a></p><p><img src="/2021/12/03/linux-bi-ji/image-20220807124128623.png"></p><p><strong>使用linux下载</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash">yum <span class="token parameter variable">-y</span> <span class="token function">install</span> <span class="token function">wget</span><span class="token function">wget</span> https://www.python.org/ftp/python/3.10.6/Python-3.10.6.tgz</code></pre><p><strong>进入源码目录</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 解压</span><span class="token function">tar</span> xvzf Python-3.10.6.tgz<span class="token builtin class-name">cd</span> Python-3.10.6<span class="token comment"># 安装编译安装的依赖</span>yum update <span class="token parameter variable">-y</span>yum groupinstall <span class="token parameter variable">-y</span> <span class="token string">'Development Tools'</span>yum <span class="token function">install</span> <span class="token parameter variable">-y</span> gcc openssl-devel bzip2-devel libffi-devel<span class="token comment"># 编译安装</span>./configure <span class="token assign-left variable">prefix</span><span class="token operator">=</span>/usr/local/python3 --enable-optimizations<span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span><span class="token comment"># 验证安装</span>/usr/local/bin/python3.10 <span class="token parameter variable">--version</span>/usr/local/bin/pip3.10 <span class="token parameter variable">--version</span></code></pre><h4 id="配置快捷命令"><a href="#配置快捷命令" class="headerlink" title="配置快捷命令"></a>配置快捷命令</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 设置软连接来配置快捷命令</span><span class="token function">ln</span> <span class="token parameter variable">-sf</span> /usr/local/bin/python3.10 /usr/bin/python3<span class="token function">ln</span> <span class="token parameter variable">-sf</span> /usr/local/bin/pip3.10 /usr/bin/pip3</code></pre><h4 id="安全命令"><a href="#安全命令" class="headerlink" title="安全命令"></a>安全命令</h4><h5 id="查看命令历史"><a href="#查看命令历史" class="headerlink" title="查看命令历史"></a>查看命令历史</h5><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">history</span> <span class="token comment">#可以查看之前输入过的命令</span></code></pre><h5 id="查看正在使用的端口"><a href="#查看正在使用的端口" class="headerlink" title="查看正在使用的端口"></a>查看正在使用的端口</h5><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">netstat</span> <span class="token parameter variable">-tnlp</span></code></pre><h3 id="解决Ubuntu无法使用root登录"><a href="#解决Ubuntu无法使用root登录" class="headerlink" title="解决Ubuntu无法使用root登录"></a>解决Ubuntu无法使用root登录</h3><p><strong>首先解决无法ssh使用root账户</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 安装openssh</span><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> openssh-server<span class="token comment"># 查看SSH是否启动</span><span class="token function">ps</span> <span class="token parameter variable">-e</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token function">ssh</span><span class="token comment">#  如果只有ssh-agent表示还没启动</span>/etc/init.d/ssh start<span class="token comment"># 进入编辑sshd_config配置文件</span><span class="token comment"># 这里一定要添加sudo，因为这个文件是只读的</span><span class="token function">sudo</span> <span class="token function">vim</span> /etc/ssh/sshd_config<span class="token comment"># 找到 #PermitRootLogin Prohibit-password #这句话本来就是注释了的，不用管</span><span class="token comment"># 这里使用/#Permit可以在vim的命令模式中查找</span><span class="token comment"># 在下面新添加</span>PermitRootLogin <span class="token function">yes</span><span class="token comment"># 重启ssh服务</span><span class="token function">service</span> sshd restart</code></pre><p><strong>然后重设root账号的密码</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">passwd</span> root <span class="token comment">#回车</span>New password: <span class="token comment">#输入root新密码</span>Retype new password: <span class="token comment">#再次输入root密码</span>passwd: password updated successfully <span class="token comment">#密码更新成功</span></code></pre><p><strong>验证root账户的密码</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">su</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何解决win10代理脚本无法关闭</title>
      <link href="/2021/12/03/ru-he-jie-jue-win10-dai-li-jiao-ben-wu-fa-guan-bi/"/>
      <url>/2021/12/03/ru-he-jie-jue-win10-dai-li-jiao-ben-wu-fa-guan-bi/</url>
      
        <content type="html"><![CDATA[<h3 id="win10自动代理脚本无法更改"><a href="#win10自动代理脚本无法更改" class="headerlink" title="win10自动代理脚本无法更改"></a>win10自动代理脚本无法更改</h3><p>今天发现windows自动代理脚本卡<a href="http://127.0.0.1:86/">http://127.0.0.1:86/</a> 而且无法更改</p><p><img src="/2021/12/03/ru-he-jie-jue-win10-dai-li-jiao-ben-wu-fa-guan-bi/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTY2NDY0Mw==,size_16,color_FFFFFF,t_70.png"></p><p>这里借鉴一张网上的图来说明</p><h3 id="如何解决？"><a href="#如何解决？" class="headerlink" title="如何解决？"></a>如何解决？</h3><p>首先win+R<code>输入</code>regedit&#96;打开<strong>注册表</strong></p><p>找到以下路径：</p><pre class="language-none"><code class="language-none">计算机\HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\Internet Settings</code></pre><p><img src="/2021/12/03/ru-he-jie-jue-win10-dai-li-jiao-ben-wu-fa-guan-bi/image-20220124144841046.png" alt="image-20220124144841046"></p><p>右键<code>Internet Settings</code>选择权限</p><p><img src="/2021/12/03/ru-he-jie-jue-win10-dai-li-jiao-ben-wu-fa-guan-bi/image-20220124144953080.png" alt="image-20220124144953080"></p><p>将<code>all appliation packages</code>设置为完全控制后，点击应用和确定</p><p><img src="/2021/12/03/ru-he-jie-jue-win10-dai-li-jiao-ben-wu-fa-guan-bi/image-20220124145405331.png" alt="image-20220124145405331"></p><p>你可以把proxysetting的键值对更改为1</p><p><img src="/2021/12/03/ru-he-jie-jue-win10-dai-li-jiao-ben-wu-fa-guan-bi/image-20220124145731470.png" alt="image-20220124145731470"></p><p>也可以直接删除该文件来解决问题。</p><p><img src="/2021/12/03/ru-he-jie-jue-win10-dai-li-jiao-ben-wu-fa-guan-bi/image-20220124145952431.png" alt="image-20220124145952431"></p><p>回到代理设置可以发现设置使用脚本代理可以关闭了</p><h3 id="Win10使用L2TP连接失败，报远程服务器未响应错误"><a href="#Win10使用L2TP连接失败，报远程服务器未响应错误" class="headerlink" title="Win10使用L2TP连接失败，报远程服务器未响应错误"></a>Win10使用L2TP连接失败，报远程服务器未响应错误</h3><p>1、按win+R键打开运行输入regedit，打开注册表</p><p>2、找到：HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\RasMan\Parameters<br><img src="/2021/12/03/ru-he-jie-jue-win10-dai-li-jiao-ben-wu-fa-guan-bi/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3p0c2VydmljZQ==,size_16,color_FFFFFF,t_70#pic_center.jpeg" alt="在这里插入图片描述"></p><p>3、找到：HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\PolicyAgent<br><img src="/2021/12/03/ru-he-jie-jue-win10-dai-li-jiao-ben-wu-fa-guan-bi/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3p0c2VydmljZQ==,size_16,color_FFFFFF,t_70#pic_center-17016169861141.jpeg" alt="在这里插入图片描述"></p><p>如果没有这2个选项，右键新建32位DWORD值</p><p>4、重启计算机。</p>]]></content>
      
      
      <categories>
          
          <category> win10小毛病 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>typora笔记</title>
      <link href="/2021/11/05/typora-ru-men/"/>
      <url>/2021/11/05/typora-ru-men/</url>
      
        <content type="html"><![CDATA[<h2 id="typora基本操作"><a href="#typora基本操作" class="headerlink" title="typora基本操作"></a>typora基本操作</h2><h4 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h4><pre class="language-markdown" data-language="markdown"><code class="language-markdown">Ctrl+Home   返回Typora顶部Ctrl+End    返回Typora底部Ctrl+F  搜索Ctrl+H  搜索并替换</code></pre><h4 id="建立标题"><a href="#建立标题" class="headerlink" title="建立标题"></a>建立标题</h4><p><strong>快捷操作</strong>：</p><pre class="language-markdown" data-language="markdown"><code class="language-markdown">Ctrl+1  一级标题Ctrl+2  二级标题Ctrl+3  三级标题Ctrl+4  四级标题Ctrl+5  五级标题Ctrl+6  六级标题</code></pre><p><code>markdown</code>语法：</p><pre class="language-markdown" data-language="markdown"><code class="language-markdown">-- # 这是一级标题-- ## 这是二级标题-- ### 这是三级标题</code></pre><p><strong>示例</strong>：</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h4 id="字体加粗"><a href="#字体加粗" class="headerlink" title="字体加粗"></a>字体加粗</h4><p><strong>快捷键</strong>：<code>Ctrl+B</code></p><p><strong>markdown语法</strong>：<code>**加粗内容**</code></p><p>示例：<strong>我要加粗</strong></p><h4 id="字体倾斜"><a href="#字体倾斜" class="headerlink" title="字体倾斜"></a>字体倾斜</h4><p><strong>快捷键</strong>：<code>Ctrl+I</code></p><p><strong>markdown语法</strong>：<code>*倾斜内容*</code></p><p><strong>示例</strong>：<em>我要倾斜</em></p><h4 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h4><p><strong>快捷键</strong>：<code>Ctrl+U</code></p><p><strong>markdown语法</strong>：<code>&lt;u&gt;加粗内容&lt;/u&gt;</code></p><p><strong>示例</strong>：<u>我要下划线</u></p><h4 id="创建表格"><a href="#创建表格" class="headerlink" title="创建表格"></a>创建表格</h4><p><strong>快捷键</strong>：<code>Ctrl+T</code></p><p><strong>示例</strong>：</p><table><thead><tr><th>标题1</th><th>标题2</th><th>标题3</th></tr></thead><tbody><tr><td>内容1.1</td><td>内容2.1</td><td>内容3.1</td></tr><tr><td>内容1.2</td><td>内容2.2</td><td>内容3.2</td></tr></tbody></table><h4 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h4><p><strong>简介</strong>：超链接是一个跳转按钮，点击蓝色文字即可跳转</p><p><strong>markdown语法</strong>：<code>[]()</code></p><p><strong>示例</strong>：</p><p><a href="www.baidu.com">百度一下</a></p><h4 id="文字换行"><a href="#文字换行" class="headerlink" title="文字换行"></a>文字换行</h4><p><strong>操作</strong>：<code>shift+enter</code></p><p><strong>示例</strong>：</p><p>这是第一句话<br>现在是文字换行</p><h4 id="区块"><a href="#区块" class="headerlink" title="区块"></a>区块</h4><p><strong>markdown语法</strong>：<code>&gt;+空格</code>  </p><p><strong>示例</strong>：</p><blockquote><p>这是一个区块</p></blockquote><h4 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h4><p><strong>简介</strong>：插入图片可以直接将图片复制到typora，也可以按照以下内容手动创建</p><pre class="language-markdown" data-language="markdown"><code class="language-markdown">ctrl + shift + I</code></pre><p><img src="/2021/11/05/typora-ru-men/1.png" alt="这是一张图片"></p><p><strong>这里要特别注意相对路径的写法</strong>：</p><ol><li>首先打开<code>typora</code>设置图片优先使用<code>相对路径</code>：</li></ol><p><img src="/2021/11/05/typora-ru-men/2.png"></p><ol start="2"><li><p>然后再修改<code>hexo</code>配置</p><pre class="language-markdown" data-language="markdown"><code class="language-markdown">在_config.yml文件中，修改post_asset_folder: false为post_asset_folder: true</code></pre><p>这样做的目的是为了在<code>hexo new post 文章名字</code>的时候在你的<code>source-&gt;_posts</code>里生成一个和你文章名字相同的文件夹。你可以把相关的文件放进里面以便博客<code>下载</code>或者<code>查阅</code></p></li><li><p>在typora里写入文章相对路径（<strong>关键</strong>)：</p><p>使用快捷键<code>ctrl+shift+I</code>来创建一个<code>图片url</code>，如图</p><p><img src="/2021/11/05/typora-ru-men/3.png"></p><p>然后在<strong>（）</strong>里输入相对<code>图片路径</code></p><p>格式为：<code>./文章名字/文件名称</code></p><p>例如：<code>./hexo新手教程/1.png</code></p><p>相对路径的写法:<code>./</code></p><p>上级（父级）路径的写法：<code>../</code></p><p>上两级路径的写法：<code>../../</code></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> typora教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo搭建全解</title>
      <link href="/2021/11/05/hexo-da-jian-quan-jie/"/>
      <url>/2021/11/05/hexo-da-jian-quan-jie/</url>
      
        <content type="html"><![CDATA[<h1 id="利用hexo-github搭建个人博客"><a href="#利用hexo-github搭建个人博客" class="headerlink" title="利用hexo+github搭建个人博客"></a>利用hexo+github搭建个人博客</h1><p><strong>为什么使用hexo+GitHub</strong>：</p><p>简单易学，只要根据教程操作一步步来即可</p><p>无需维护，只要上传即可更改</p><p><strong>视频教程</strong>：<a href="https://www.bilibili.com/video/BV1mU4y1j72n?share_source=copy_web&vd_source=fb1c8825bf34368632566c631619e122">保姆级Hexo+github搭建个人博客</a></p><h2 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h2><h3 id="安装工具"><a href="#安装工具" class="headerlink" title="安装工具"></a>安装工具</h3><h4 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h4><p><strong>下载地址</strong>：<a href="https://nodejs.org/">https://nodejs.org</a></p><p><strong>介绍</strong>：它可以让JavaScript成为与PHP、Python、Perl、Ruby等服务端语言平起平坐的脚本语言</p><p><strong>安装</strong>：</p><p>自行选择自己的电脑是32位还是64位，下载长期维护版，下载的是一个<code>.msi</code>的安装包</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20220306103212818-1714733558686-1.png"></p><p>安装不用做任何多余的操作，只要选择好安装的路径(默认装在C盘)并点击下一步即可完成安装</p><p><strong>检验</strong>：</p><p>安装完成后在键盘按<code>win+R</code>进入运行并输入<code>cmd</code>进入<strong>命令提示符</strong>窗口，分别输入下列命令：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">node</span> <span class="token parameter variable">-v</span> <span class="token comment">#显示安装的nodejs版本</span><span class="token function">npm</span> <span class="token parameter variable">-v</span> <span class="token comment">#显示安装的npm版本</span></code></pre><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20220306103948513-1714733558687-2.png"></p><p>如果有版本回显，则安装成功</p><p><strong>修改全局模块路径和缓存路径</strong>：(可选)</p><p><strong>原因</strong>：当我们执行<code>npm install xxxx -g</code>时，会默认下载到c盘</p><p><strong>默认路径为</strong>：<code>C:\Users\用户名\AppData\Roaming\npm</code></p><p>因此可以将全局模块(<code>node_global</code>)和缓存(<code>node_cache</code>)放在别的目录，减少c盘空间</p><p><strong>操作</strong>：</p><p>在你的nodejs安装目录下新建<code>node_global</code>、<code>node_cache</code>和<code>node_modules</code>(配置环境变量)文件夹</p><p>在cmd窗口中输入下列命令指定npm的新路径：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> config <span class="token builtin class-name">set</span> prefix <span class="token string">"创建的node_global所在的绝对路径"</span><span class="token function">npm</span> config <span class="token builtin class-name">set</span> cache <span class="token string">"创建的node_cache所在的绝对路径"</span></code></pre><p>如：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> config <span class="token builtin class-name">set</span> prefix <span class="token string">"E:\develop<span class="token entity" title="\n">\n</span>odejs<span class="token entity" title="\n">\n</span>ode_global"</span><span class="token function">npm</span> config <span class="token builtin class-name">set</span> cache <span class="token string">"E:\develop<span class="token entity" title="\n">\n</span>odejs<span class="token entity" title="\n">\n</span>ode_cache"</span></code></pre><p>路径修改后，配置环境变量：</p><p>右键此电脑-&gt;高级系统设置-&gt;环境变量</p><p><strong>在系统变量</strong>：</p><p><strong>变量名</strong>：<code>NODE_PATH</code></p><p><strong>变量值</strong>：<code>node_global</code>文件夹下的<code>node_modules</code>文件夹</p><p><strong>如</strong>：<code>E:\develop\nodejs\node_global\node_modules</code></p><p><strong>在用户用户变量中的Path变量</strong>：</p><p>将默认的<code>npm路径</code>修改为新建的<code>node_global路径</code></p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20220306110645149-1714733558687-3.png"></p><p>点击确定保存即可</p><h4 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h4><p><strong>介绍</strong>：是一个开源的分布式版本控制系统，可以有效、高速地处理各种项目版本的管理</p><p><strong>下载地址</strong>：<a href="https://git-scm.com/download/win">https://git-scm.com/download/win</a></p><p><strong>安装</strong>：无需特殊操作，选择好安装路径直接下一步即可</p><p><strong>检验</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token parameter variable">--version</span> <span class="token comment">#查看git脚本</span></code></pre><h3 id="注册GitHub"><a href="#注册GitHub" class="headerlink" title="注册GitHub"></a>注册GitHub</h3><p><strong>什么是GitHub</strong>：<code>GitHub</code> 是一个面向开源及私有软件项目的托管平台，因为只支持 <code>git</code> 作为唯一的版本库格式进行托管，故名 <code>GitHub</code></p><p><strong>网址</strong>：<a href="https://github.com/">https://github.com/</a></p><p>进入以后按照提示注册即可</p><h3 id="将GitHub仓库和git关联"><a href="#将GitHub仓库和git关联" class="headerlink" title="将GitHub仓库和git关联"></a>将GitHub仓库和git关联</h3><p><strong>介绍</strong>：因为博客是一个网站，所以建立网站需要搭载一个服务器上，通俗点说，<code>GitHub</code>就是一个服务器，所以要利用<code>GitHub</code>存储我们网站的内容</p><h4 id="添加仓库"><a href="#添加仓库" class="headerlink" title="添加仓库"></a>添加仓库</h4><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20220307155943605-1714733558687-4.png"></p><ol><li>点击用户头像旁的<code>＋</code>号，选择<code>New repository</code></li></ol><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20220307160122740-1714733558687-5.png"></p><p>在<code>repository name</code>(仓库名)内填写：<code>(自己GitHub的注册名).github.io</code></p><ol start="2"><li><p>选择add a README file</p></li><li><p>点击创建(Create repository)</p></li></ol><h4 id="创建SSH-Key"><a href="#创建SSH-Key" class="headerlink" title="创建SSH Key"></a>创建SSH Key</h4><p>Git和github之间的通信是通过SSH加密的，因此需要执行下面的操作：</p><p>在本地主目录查找是否有.ssh目录，如果有，打开该目录，一般会有这两个文件：<code>id_rsa</code>(私钥)和<code>id_rsa.pub</code>(公钥)</p><p>如果没有，任意位置右键打开git bash here：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240125161415046-1714733558687-6.png"></p><p>输入如下命令生成ssh key：</p><pre class="language-bash" data-language="bash"><code class="language-bash">ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token parameter variable">-C</span> <span class="token string">"youselfemail@email.com"</span> <span class="token comment">#(这里需要输入你的邮箱)</span><span class="token comment"># Enter file in which to save the key (/c/Users/xxxxx/.ssh/id_rsa):</span><span class="token comment"># 输入保存路径。这里默认即可</span><span class="token comment"># Enter passphrase (empty for no passphrase):</span><span class="token comment"># 输入密码短语。我们直接回车，不输入</span><span class="token comment"># Enter same passphrase again:</span><span class="token comment"># 再次输入密码短语。我们直接回车</span></code></pre><p>生成密钥后，我们按照提示的路径找到生成的<code>id_rsa.pub</code>，用记事本或编辑器打开，复制里面的内容</p><h4 id="GitHub添加ssh-key"><a href="#GitHub添加ssh-key" class="headerlink" title="GitHub添加ssh key"></a>GitHub添加ssh key</h4><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20220307162519482-1714733558687-7.png"></p><p>在GitHub上点击你的头像，点击<code>setting</code>(<strong>设置</strong>)</p><p>找到<code>SSH and GPG keys</code></p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20220307162827047-1714733558687-8.png"></p><p> 点击第一个<code>New SSH keys</code></p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20220307162934219-1714733558687-9.png"></p><p><strong>title</strong>：你的钥匙名字(随便写)，可以写blog</p><p><strong>key</strong>：填写你刚刚复制的内容</p><p>填写完毕后点击<code>add SSH key</code>(添加)</p><h4 id="验证是否连接成功"><a href="#验证是否连接成功" class="headerlink" title="验证是否连接成功"></a>验证是否连接成功</h4><p><strong>在命令行输入</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> <span class="token parameter variable">-T</span> git@github.com</code></pre><p><strong>此时应该返回一句话</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Hi '你的名字'! You've successfully authenticated, but GitHub does not provide shell access.</span><span class="token comment"># 这里提示你已经成功链接上github，但是github不提供shell连接，此时你的ssh_key已经部署成功</span></code></pre><p>证明你的<code>git</code>已经成功连接上了<code>GitHub</code></p><p><strong>如果你返回的是</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash">ssh: connect to <span class="token function">host</span> github.com port <span class="token number">22</span>: Connection timed out</code></pre><p>你需要在<code>.ssh</code>目录下添加config文件并写入以下内容：</p><pre class="language-bash" data-language="bash"><code class="language-bash">Host github.com    Hostname ssh.github.com    Port <span class="token number">443</span></code></pre><p><strong>尝试重新链接出现以下内容</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Are you sure you want to continue connecting (yes/no/[fingerprint])?</span><span class="token comment"># 这里选择yes</span><span class="token comment"># Hi xxxxx! You've successfully authenticated, but GitHub does not provide shell access.</span><span class="token comment"># 这里提示你已经成功链接上github，但是github不提供shell连接，此时你的ssh_key已经部署成功</span></code></pre><h3 id="在本地生成博客"><a href="#在本地生成博客" class="headerlink" title="在本地生成博客"></a>在本地生成博客</h3><p><strong>简介</strong>：在本地生成博客时，需要使用hexo进行生成。使用hexo时，需要安装，生成，做好相应配置后才能上传到github</p><h4 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h4><p>在你的任意一个盘(除了c盘)新建一个文件夹用来存放博客，文件名最好填写英文</p><p>进入这个空的文件夹，在空白的地方右键，选择<code>git bash here</code>：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20220307164209077-1714733558687-10.png"></p><p><strong>输入以下命令</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-cli <span class="token parameter variable">-g</span> <span class="token comment">#npm安装hexo</span>hexo <span class="token parameter variable">-v</span> <span class="token comment">#查看hexo版本，如果报错，重新执行安装命令</span>hexo init <span class="token comment">#生成hexo环境，如果报错，重新执行该命令</span>hexo g <span class="token comment">#静态生成博客页面</span>hexo s <span class="token comment">#建立服务</span><span class="token comment"># 也可以写成</span>hexo g <span class="token operator">&amp;&amp;</span> hexo s</code></pre><p>按照提示打开<a href="http://localhost:4000即可进入本地生成的博客">http://localhost:4000即可进入本地生成的博客</a></p><p>在git按住<code>Ctrl + C</code>即可停止服务</p><h5 id="hexo常用命令"><a href="#hexo常用命令" class="headerlink" title="hexo常用命令"></a>hexo常用命令</h5><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看全部命令</span>hexo <span class="token parameter variable">-h</span><span class="token comment"># 安装</span><span class="token function">npm</span> <span class="token function">install</span> hexo <span class="token parameter variable">-g</span><span class="token comment"># 升级</span><span class="token function">npm</span> update hexo <span class="token parameter variable">-g</span><span class="token comment"># 查看hexo的版本</span>hexo version<span class="token comment"># 创建nodejs-hexo 名字的本地文件</span>hexo init nodejs-hexo<span class="token comment"># 创建博客</span>hexo init nodejs-hexo<span class="token comment"># 初始化，生成文件夹为blog</span>hexo init blog<span class="token comment"># 进入blog文件夹</span><span class="token builtin class-name">cd</span> blog<span class="token comment"># 安装依赖库</span><span class="token function">npm</span> <span class="token function">install</span><span class="token comment">#生成一套静态网页</span>hexo generate<span class="token comment">#运行测试,浏览器打开地址，http://localhost:4000/</span>hexo server<span class="token comment">#进行部署</span>hexo deploy<span class="token comment">#新建文章‘new article’</span>hexo new <span class="token string">"new article"</span><span class="token comment">#新建页面 ‘about’</span>hexo new page <span class="token string">"about"</span><span class="token comment"># 新建文章</span>hexo n <span class="token string">"我的博客"</span> <span class="token operator">==</span> hexo new <span class="token string">"我的博客"</span><span class="token comment"># 生成</span>hexo g <span class="token operator">==</span> hexo generate<span class="token comment"># 启动服务预览</span>hexo s <span class="token operator">==</span> hexo server<span class="token comment"># 部署</span>hexo d <span class="token operator">==</span> hexo deploy</code></pre><h3 id="发布博客到GitHub"><a href="#发布博客到GitHub" class="headerlink" title="发布博客到GitHub"></a>发布博客到GitHub</h3><h4 id="创建令牌"><a href="#创建令牌" class="headerlink" title="创建令牌"></a>创建令牌</h4><p>点击用户头像里的<code>setting</code>，找到<code>Delveloper settings</code>，点击进入</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20220307175359967-1714733558687-11.png"></p><p><strong>生成</strong>：找到<code>Personal access tokens</code>点击<code>Generate new token</code></p><p><strong>勾选所有选项</strong>(这里也可以只勾选repo，设置令牌期限为无限期)</p><p><strong>创建</strong>：写上名字并<code>generate token</code></p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20220307174814887-1714733558687-12.png"></p><p>创建以后会生成令牌序列号，复制下来并保存</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20220307175301506-1714733558687-13.png"></p><p>把你的令牌手动输入password框</p><p>若上传成功，你的博客已经可以通过网址进行访问，输入<code>你的GitHub名.github.io</code>即可访问你的博客</p><h4 id="修改config-yml"><a href="#修改config-yml" class="headerlink" title="修改config.yml"></a>修改config.yml</h4><p>找到博客目录<code>config.yml</code>文件，双击打开</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20220307165644744-1714733558687-14.png"></p><p>修改deploy的内容为：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">deploy</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> git  <span class="token key atrule">repo</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//github.com/wqa247/wqa247.github.io.git  <span class="token key atrule">branch</span><span class="token punctuation">:</span> main</code></pre><p><strong>branch说明</strong>：github创建的gitpage默认使用main分支，需要在仓库的gitpage相关设置更改分支为master分支，或者干脆直接上传到main分支里面。</p><p><strong>可以在你的仓库里看到branch，你可以进入并修改它的名字</strong>：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20220307180908159-1714733558687-15.png"></p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20220307181045721-1714733558687-16.png"></p><p><strong>repo这里填写你的仓库地址</strong>：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20220307170155490-1714733558687-17.png"></p><p>复制https里的内容</p><p><strong>在git输入</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git <span class="token parameter variable">--save</span> <span class="token comment">#安装hexo-deployer-git发布工具</span>hexo cl <span class="token comment">#清除hexo静态页面缓存</span>hexo g <span class="token comment">#生成静态页面</span>hexo d <span class="token comment">#发布界面到deploy repo写的地址</span></code></pre><p><strong>如果发布时报错</strong>：<code>fatal: unable to access &#39;你的仓库地址&#39;</code>说明你的网络和GitHub连接不稳定，多尝试几次即可</p><p>发布时需要输入你的<code>Username</code>和<code>personal access token</code>(令牌)</p><p>用户名写你的<code>GitHub</code>用户名:</p><pre class="language-bash" data-language="bash"><code class="language-bash">Please tell me <span class="token function">who</span> you are.Run  <span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email <span class="token string">"you@example.com"</span>  <span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name <span class="token string">"Your Name"</span>    <span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email <span class="token string">"1101447047@qq.com"</span>  <span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name <span class="token string">"maxstars247"</span></code></pre><p>输入完信息后会提示你输入链接github的方式：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240126123137370-1714733558687-18.png"></p><p>这里选择token输入你刚创建的令牌即可</p><h2 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h2><h3 id="新建post-文章"><a href="#新建post-文章" class="headerlink" title="新建post(文章)"></a>新建post(文章)</h3><p>你的博客里现在只有一篇叫<code>hello world</code>的文章，现在，你可以使用git执行下列命令来新建一个属于自己的文章了：</p><pre class="language-bash" data-language="bash"><code class="language-bash">hexo new <span class="token operator">&lt;</span>文章名<span class="token operator">></span></code></pre><p>执行该命令后，你会发现在<code>./blog/_posts</code>发现新建的<code>文章名.md</code></p><p>新文件</p><p>你也可以直接在<code>_posts</code>文件夹下直接新建一个markdown格式的文件，但是注意<strong>文章开头要加上</strong>：</p><pre class="language-markdown" data-language="markdown"><code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span><span class="token front-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> 文章标题 <span class="token comment">#标题</span><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2021-1-19 17:35:26</span><span class="token key atrule">categories</span><span class="token punctuation">:</span> <span class="token comment">#分类</span>   <span class="token punctuation">-</span> 文章分类<span class="token key atrule">tags</span><span class="token punctuation">:</span> <span class="token comment">#标签</span>   <span class="token punctuation">-</span> 文章标签</span><span class="token punctuation">---</span></span></code></pre><p>此时你会发现没有合适的编辑器来对<code>.md</code>文档进行编辑</p><p><strong>这里推荐几个常用的编辑器</strong>：</p><ol><li><p><strong>VS Code</strong>：vs code可以编辑markdown，在插件商店下载<code>Markdown Preview Enhanced</code>和<code>Markdown All in One</code>插件即可</p></li><li><p><strong>Typora</strong>：这是mac上移植过来的专门针对markdown语法的编辑器，界面美观，十分好用，但是现在已经需要付费(14.99$)购买。</p><p>官网：<a href="https://typora.io/">https://typora.io</a></p><p>你可以到百度上搜索到<strong>typora最后一个免费版本0.11.15</strong>的资源</p></li></ol><p>你可以自己去网上查找最适合自己的编辑器</p><p>之后就是学习基本的markdown语法</p><h3 id="图片无法显示？"><a href="#图片无法显示？" class="headerlink" title="图片无法显示？"></a>图片无法显示？</h3><p><strong>介绍</strong>：当你开始往博客里塞入图片时，一切都是那么完美，但一开启<code>server</code>后，你漂亮的图片只能显示一个裂开的标志，现实总是如此的折磨人</p><p>还记得你导入图片上的路径嘛？在你的博客页面中，你可以按<code>F12</code>查看它的路径是否正确</p><p>你可以仔细看一下它到底是个<strong>绝对路径</strong>还是<strong>相对路径</strong></p><h4 id="让它显示！"><a href="#让它显示！" class="headerlink" title="让它显示！"></a>让它显示！</h4><p>我们需要在<code>_post</code>文件夹下新建一个和文章名字相同的文件夹，把你文章里的图片全部上传到这个文件夹里</p><p><strong>将你文章里的图片路径修改为</strong>：同名文件夹的相对路径</p><p>这时我们还需要安装一个<code>hexo-asset-image</code>插件来解决图片上传的问题：</p><p><strong>地址</strong>：<a href="https://github.com/xcodebuild/hexo-asset-image">https://github.com/xcodebuild/hexo-asset-image</a></p><p><strong>执行下列命令安装这个插件</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> https://github.com/xcodebuild/hexo-asset-image <span class="token parameter variable">--save</span></code></pre><p><strong>开启post_asset_folder</strong>：</p><p>打开你的<code>config.yml</code>文件按<code>Ctrl + F</code>搜索<code>post_asset_folder</code>修改下列代码：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 修改你的url地址来使图片的相对路径正确 16行，填写你仓库的地址,不要修改http://</span><span class="token key atrule">url</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//example.com <span class="token comment"># 启动post_asset_folder 43行</span><span class="token key atrule">post_asset_folder</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></code></pre><p><strong>关于post_asset_folder</strong>：当资源文件管理功能打开后，Hexo将会在你每一次通过 <code>hexo new post &lt;title&gt;</code> 命令创建新文章时自动创建一个文件夹。这个资源文件夹将会有与这个文章文件一样的名字。将所有与你的文章有关的资源放在这个关联文件夹中之后，你可以通过相对路径来引用它们，这样你就得到了一个更简单而且方便得多的工作流。</p><p>现在，让我们重新打开本地服务查看是否能显示图片：</p><pre class="language-bash" data-language="bash"><code class="language-bash">hexo cl <span class="token operator">&amp;&amp;</span> hexo g <span class="token operator">&amp;&amp;</span> hexo s</code></pre><p>当图片正常显示时，你可以再次查看正确的<strong>url路径</strong>。</p><p>当本地图片正确显示后，你可以将它发布到仓库里：</p><pre class="language-bash" data-language="bash"><code class="language-bash">hexo d</code></pre><p><strong>注意</strong>：当你的文件中有空格时它不会被识别为路径，所以你存放图片的文件夹不能带有空格，不然这个图片会转换成字符输出</p><h3 id="配置你的hexo主题"><a href="#配置你的hexo主题" class="headerlink" title="配置你的hexo主题"></a>配置你的hexo主题</h3><p><strong>介绍</strong>：默认的landspace主题已经无法满足我们的需求了，我们需要一个更好看的主题来显示更多的个性化内容！ </p><p><strong>官方主题链接</strong>：<a href="https://hexo.io/themes/index.html">https://hexo.io/themes/index.html</a></p><h4 id="选择你的主题"><a href="#选择你的主题" class="headerlink" title="选择你的主题"></a>选择你的主题</h4><p>你可以在官网选择一个心仪的主题，也可以到GitHub上搜索hexo的相关内容，前提是你必须先找好所有关于主题的设置教程，避免踩坑。</p><p>你也可以和我选择一样的主题，我将会在主题汇总中介绍我使用的主题：<code>hexo-theme-matery</code></p><h4 id="使你的主题生效"><a href="#使你的主题生效" class="headerlink" title="使你的主题生效"></a>使你的主题生效</h4><p>把你下载好的主题导入<code>themes</code>文件夹中，复制它的名字</p><p>你需要配置<code>config.yml</code>来使你导入的主题生效：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment">#修改博客语言</span><span class="token key atrule">language</span><span class="token punctuation">:</span> zh<span class="token punctuation">-</span>CN <span class="token comment">#中文写zh-CN,英文则无需修改</span><span class="token comment">#修改主题</span><span class="token key atrule">theme</span><span class="token punctuation">:</span> <span class="token comment">#填写你的主题文件夹名称</span></code></pre><h3 id="主题汇总"><a href="#主题汇总" class="headerlink" title="主题汇总"></a>主题汇总</h3><h4 id="hexo-theme-matery"><a href="#hexo-theme-matery" class="headerlink" title="hexo-theme-matery"></a>hexo-theme-matery</h4><p><strong>简介</strong>：hexo-theme-matery是我一直在使用的主题，我觉得这个主题基本可以满足我发布博客的所有需求，就没有再更改。该主题设置略微复杂，如果你按照本教程搭建过程中出现了问题，你应该到中文配置手册中查找问题，或者自行使用搜索引擎解决</p><p><strong>官方链接</strong>：<a href="https://github.com/blinkfox/hexo-theme-matery">https://github.com/blinkfox/hexo-theme-matery</a></p><p><strong>中文配置手册</strong>：<a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md</a></p><p>下载该主题后也可以在文件里查看到该手册</p><h5 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h5><p><strong>这里创建的分页对应这几个功能</strong>：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240128154200114-1714733558687-19.png"></p><p>你需要按照教程创建相应的分页界面，否则回返回错误页面，Cannot GET &#x2F;xxx：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240128153403319-1714733558687-20.png"></p><p>你需要在hexo根目录下创建该文件，而不是在themes文件夹内，在这个目录git bash here：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240128155159346-1714733558687-21.png"></p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240128155321678-1714733558687-22.png"></p><p><strong>分类 categories</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"categories"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容，你需要用markdown编辑器：</p><pre class="language-markdown" data-language="markdown"><code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span><span class="token front-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> categories<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"categories"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"categories"</span></span><span class="token punctuation">---</span></span></code></pre><p><strong>标签tags</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"tags"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><pre class="language-markdown" data-language="markdown"><code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span><span class="token front-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> tags<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 18:23:38</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"tags"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"tags"</span></span><span class="token punctuation">---</span></span></code></pre><p><strong>about me页面</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"about"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p><pre class="language-none"><code class="language-none">---title: aboutdate: 2018-09-30 17:25:30type: &quot;about&quot;layout: &quot;about&quot;---</code></pre><p><strong>文章字数统计插件（必须安装）</strong>：</p><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <a href="https://github.com/willin/hexo-wordcount">hexo-wordcount</a>插件。</p><p>安装命令如下：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i <span class="token parameter variable">--save</span> hexo-wordcount</code></pre><p>然后只需在本主题下的 <code>_config.yml</code> 文件中，将各个文章字数相关的配置激活即可：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">postInfo</span><span class="token punctuation">:</span>  <span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">update</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">wordCount</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 设置文章字数统计为 true.</span>  <span class="token key atrule">totalCount</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 设置站点文章总字数统计为 true.</span>  <span class="token key atrule">min2read</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 阅读时长.</span>  <span class="token key atrule">readCount</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 阅读次数.</span></code></pre><p>**contact留言板(可选，我没建)**：</p><pre class="language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"contact"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/contact/index.md</code>，至少需要以下内容：</p><pre class="language-markdown" data-language="markdown"><code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span><span class="token front-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> contact<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"contact"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"contact"</span></span><span class="token punctuation">---</span></span></code></pre><p>**friends页面(可选)**：</p><pre class="language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"friends"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/friends/index.md</code>，至少需要以下内容：</p><pre class="language-markdown" data-language="markdown"><code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span><span class="token front-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> friends<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-12-12 21:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"friends"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"friends"</span></span><span class="token punctuation">---</span></span></code></pre><p>同时，在你的博客 <code>source</code> 目录下新建 <code>_data</code> 目录，在 <code>_data</code> 目录中新建 <code>friends.json</code> 文件，文件内容如下所示：</p><pre class="language-json" data-language="json"><code class="language-json"><span class="token punctuation">[</span><span class="token punctuation">&#123;</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/1_qq_27922023.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"码酱"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"我不是大佬，只是在追寻大佬的脚步"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://luokangyuan.com/"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/4027734.jpeg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"闪烁之狐"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://blinkfox.github.io/"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/avatar.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"ja_rome"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"平凡的脚步也可以走出伟大的行程"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://me.csdn.net/jlh912008548"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span></code></pre><p><strong>404页面</strong>：</p><p>手动创建一个<code>/source/404.md</code>文件：</p><pre class="language-markdown" data-language="markdown"><code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span><span class="token front-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token number">404</span><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"404"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"404"</span><span class="token key atrule">description</span><span class="token punctuation">:</span> <span class="token string">"Oops～，我崩溃了！找不到你想要的页面 :("</span></span><span class="token punctuation">---</span></span></code></pre><h5 id="菜单导航配置"><a href="#菜单导航配置" class="headerlink" title="菜单导航配置"></a>菜单导航配置</h5><p>菜单导航名称可以是中文也可以是英文(如：<code>Index</code>或<code>主页</code>) </p><p>图标icon 可以在<a href="https://fontawesome.com/icons">Font Awesome</a> 中查找</p><p>由于我们没有创建留言板功能，我们菜单直接把留言板去掉：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">menu</span><span class="token punctuation">:</span>  <span class="token key atrule">Index</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>home  <span class="token key atrule">Tags</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /tags    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>tags  <span class="token key atrule">Categories</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /categories    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>bookmark  <span class="token key atrule">Archives</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /archives    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>archive  <span class="token key atrule">About</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /about    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>user<span class="token punctuation">-</span>circle  <span class="token key atrule">Friends</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /friends    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>address<span class="token punctuation">-</span>book</code></pre><h5 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h5><p>本主题中还使用到了 <a href="https://github.com/wzpan/hexo-generator-search">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-search <span class="token parameter variable">--save</span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">search</span><span class="token punctuation">:</span>  <span class="token key atrule">path</span><span class="token punctuation">:</span> search.xml  <span class="token key atrule">field</span><span class="token punctuation">:</span> post</code></pre><h5 id="中文链接转拼音（建议安装）"><a href="#中文链接转拼音（建议安装）" class="headerlink" title="中文链接转拼音（建议安装）"></a>中文链接转拼音（建议安装）</h5><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。我们可以用 <a href="https://github.com/viko16/hexo-permalink-pinyin">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。</p><p>安装命令如下：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i hexo-permalink-pinyin <span class="token parameter variable">--save</span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">permalink_pinyin</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">separator</span><span class="token punctuation">:</span> <span class="token string">'-'</span> <span class="token comment"># default: '-'</span></code></pre><h5 id="添加-RSS-订阅支持（可选的）"><a href="#添加-RSS-订阅支持（可选的）" class="headerlink" title="添加 RSS 订阅支持（可选的）"></a>添加 RSS 订阅支持（可选的）</h5><p>本主题中还使用到了 <a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a> 的 Hexo 插件来做 <code>RSS</code>，安装命令如下：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-feed <span class="token parameter variable">--save</span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">feed</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> atom  <span class="token key atrule">path</span><span class="token punctuation">:</span> atom.xml  <span class="token key atrule">limit</span><span class="token punctuation">:</span> <span class="token number">20</span>  <span class="token key atrule">hub</span><span class="token punctuation">:</span>  <span class="token key atrule">content</span><span class="token punctuation">:</span>  <span class="token key atrule">content_limit</span><span class="token punctuation">:</span> <span class="token number">140</span>  <span class="token key atrule">content_limit_delim</span><span class="token punctuation">:</span> <span class="token string">' '</span>  <span class="token key atrule">order_by</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>date</code></pre><h5 id="banner图设置"><a href="#banner图设置" class="headerlink" title="banner图设置"></a>banner图设置</h5><p><strong>banner图每日切换</strong>：</p><p>banner图就是封面图，不想要封面图的也可以设置不开启，我这里默认开启</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240128171639608-1714733558687-23.png" alt="image-20240128171639608"></p><p>找到matery的<code>config.tml</code>，修改成以下文件：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># banner 是否每日切换.</span><span class="token comment"># 若为 false, 则 banner 默认为 /medias/banner/0.jpg</span><span class="token key atrule">banner</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment"># 开启随机 featureimages 图片</span>  <span class="token key atrule">random</span><span class="token punctuation">:</span> <span class="token boolean important">false</span></code></pre><h5 id="背景图片设置"><a href="#背景图片设置" class="headerlink" title="背景图片设置"></a>背景图片设置</h5><p><strong>介绍</strong>：如果图片尺寸不合适，主题本身的样式会对原有图片进行拉伸，我们可以找到一张合适尺寸的图片，也可以调用API库。</p><p><strong>设置样式调用API库</strong>：</p><p><strong>我们需要找到主题的样式位置</strong>：<code>hexo\themes\hexo-theme-matery\source\css\matery.css</code></p><p><strong>找到body并且添加以下内容</strong>：</p><pre class="language-css" data-language="css"><code class="language-css"><span class="token selector">body</span><span class="token punctuation">&#123;</span><span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>60deg<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 165<span class="token punctuation">,</span> 150<span class="token punctuation">,</span> 0.5<span class="token punctuation">)</span> 5%<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 228<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 0.35<span class="token punctuation">)</span> <span class="token punctuation">)</span> 0% 0% /     cover<span class="token punctuation">,</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"https://iw233.cn/api/Random.php"</span><span class="token punctuation">)</span></span><span class="token punctuation">,</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"https://iw233.cn/api/Random.php"</span><span class="token punctuation">)</span></span> 0px 0px<span class="token punctuation">;</span>    <span class="token property">background-repeat</span><span class="token punctuation">:</span> no-repeat<span class="token punctuation">;</span>    <span class="token property">background-position</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/*或*/</span><span class="token selector">body</span><span class="token punctuation">&#123;</span><span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>60deg<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 165<span class="token punctuation">,</span> 150<span class="token punctuation">,</span> 0.5<span class="token punctuation">)</span> 5%<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 228<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 0.35<span class="token punctuation">)</span> <span class="token punctuation">)</span> 0% 0% /     cover<span class="token punctuation">,</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"https://www.dmoe.cc/random.php"</span><span class="token punctuation">)</span></span><span class="token punctuation">,</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"https://www.dmoe.cc/random.php"</span><span class="token punctuation">)</span></span> 0px 0px<span class="token punctuation">;</span>    <span class="token property">background-repeat</span><span class="token punctuation">:</span> no-repeat<span class="token punctuation">;</span>    <span class="token property">background-position</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/*这里主要是对api接口的调用*/</span></code></pre><h5 id="关闭遮罩"><a href="#关闭遮罩" class="headerlink" title="关闭遮罩"></a>关闭遮罩</h5><p><strong>介绍</strong>：首页背景图会有遮罩，如果你不喜欢这个遮罩，这里可以选择关闭</p><p>这里还是找到<code>matery.css</code>文件，找到下列代码并注释即可</p><pre class="language-css" data-language="css"><code class="language-css"><span class="token selector">.bg-cover:after</span> <span class="token punctuation">&#123;</span>    <span class="token property">-webkit-animation</span><span class="token punctuation">:</span> rainbow 60s infinite<span class="token punctuation">;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> rainbow 60s infinite<span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token selector">.bg-cover:before,.bg-cover:after</span> <span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><h5 id="文章Front-matter"><a href="#文章Front-matter" class="headerlink" title="文章Front-matter"></a>文章Front-matter</h5><p><strong>介绍</strong>：Front-matter主要设置文章标题、特色图片、标签、文章分类、发布时间等内容</p><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td><code>Markdown</code> 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 <code>_config.yml</code> 中的 <code>author</code></td><td>文章作者</td></tr><tr><td>img</td><td><code>featureImages</code> 中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>http://xxx.com/xxx.jpg</code></td></tr><tr><td>top</td><td><code>true</code></td><td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td>hide</td><td><code>false</code></td><td>隐藏文章，如果<code>hide</code>值为<code>true</code>，则文章不会在首页显示</td></tr><tr><td>cover</td><td><code>false</code></td><td><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td></tr><tr><td>toc</td><td><code>true</code></td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td></tr><tr><td>mathjax</td><td><code>false</code></td><td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td>keywords</td><td>文章标题</td><td>文章关键字，SEO 时需要</td></tr><tr><td>reprintPolicy</td><td>cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><p><strong>全部示例</strong>：</p><pre class="language-markdown" data-language="markdown"><code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span><span class="token front-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> typora<span class="token punctuation">-</span>vue<span class="token punctuation">-</span>theme主题介绍<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-07 09:25:00</span><span class="token key atrule">author</span><span class="token punctuation">:</span> 赵奇<span class="token key atrule">img</span><span class="token punctuation">:</span> /source/images/xxx.jpg<span class="token key atrule">top</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">hide</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">cover</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">coverImg</span><span class="token punctuation">:</span> /images/1.jpg<span class="token key atrule">password</span><span class="token punctuation">:</span> 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92<span class="token key atrule">toc</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">mathjax</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">summary</span><span class="token punctuation">:</span> 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要<span class="token key atrule">categories</span><span class="token punctuation">:</span> Markdown<span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Typora  <span class="token punctuation">-</span> Markdown</span><span class="token punctuation">---</span></span></code></pre><p><strong>推荐示例</strong>：</p><pre class="language-markdown" data-language="markdown"><code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span><span class="token front-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> HTML笔记<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2021-1-19 17:35:26</span><span class="token key atrule">img</span><span class="token punctuation">:</span> /medias/featureimages/html.jpg<span class="token key atrule">tags</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> 教程<span class="token key atrule">categories</span><span class="token punctuation">:</span> 前端教程</span><span class="token punctuation">---</span></span></code></pre><h4 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h4><p><strong>简介</strong>：<code>hexo</code>高亮代码有很多种方式，目前流行的有<code>hexo-prism-plugin</code>和<code>prismjs</code></p><h5 id="hexo-prism-plugin"><a href="#hexo-prism-plugin" class="headerlink" title="hexo-prism-plugin"></a>hexo-prism-plugin</h5><p><strong>简介</strong>：<code>hexo-prism-plugin</code>是<code>hexo</code>的一款插件，主要作用是美化和高亮代码</p><p><strong>注意</strong>：<code>hexo-prism-plugin</code>无法渲染<code>&#123;&#123; &#125;&#125;</code>，需要更改成<code>prismjs</code>：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240418232952040.png"></p><p><strong>首先安装插件</strong>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i <span class="token parameter variable">-S</span> hexo-prism-plugin</code></pre><p><strong>在根目录的config.yml文件中修改配置</strong>：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 将下列配置修改</span><span class="token key atrule">syntax_highlighter</span><span class="token punctuation">:</span> <span class="token key atrule">highlight</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">auto_detect</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">tab_replace</span><span class="token punctuation">:</span> <span class="token string">''</span>  <span class="token key atrule">wrap</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">hljs</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token comment"># 在文件末尾添加如下配置</span><span class="token key atrule">prism_plugin</span><span class="token punctuation">:</span>  <span class="token key atrule">mode</span><span class="token punctuation">:</span> <span class="token string">'preprocess'</span>  <span class="token comment"># preprocess/realtime</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> <span class="token string">'tomorrow'</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment">#default false</span>  <span class="token key atrule">custom_css</span><span class="token punctuation">:</span> <span class="token comment">#</span></code></pre><p><strong>注意</strong>：不删除<code>highlight.js</code>会出现渲染混乱，并且在渲染框中出现了<code>hightlight</code>字样：</p><pre class="language-bash" data-language="bash"><code class="language-bash">syntax_highlighter: highlight.js</code></pre><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240129023931343-1714733558687-24.png"></p><p>尝试直接删除这个<code>highlight.js</code>文件让<code>syntax_highlighter</code>(语法高亮显示)指向空文件，重新渲染页面，终于得到了正常的代码高亮：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240129024622558-1714733558687-25.png" alt="image-20240129024622558"></p><h5 id="prismjs"><a href="#prismjs" class="headerlink" title="prismjs"></a>prismjs</h5><p><strong>简介</strong>：<code>prismjs</code>是一个代码高亮的通用样式，<code>hexo</code>通过调用这个样式实现高亮。</p><p><strong>官方下载链接</strong>：<a href="https://prismjs.com/index.html">https://prismjs.com/index.html</a></p><p>如果你之前安装了<code>hexo-prism-plugin</code>，你需要卸载该插件：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> un hexo-prism-plugin <span class="token parameter variable">--save</span></code></pre><p>卸载完成后，修改<code>Hexo</code>根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并将 <code>prismjs.enable</code> 的值设置为 <code>true</code>，主要配置如下：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">highlight</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">auto_detect</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">tab_replace</span><span class="token punctuation">:</span> <span class="token string">''</span>  <span class="token key atrule">wrap</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">hljs</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">prismjs</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">preprocess</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">tab_replace</span><span class="token punctuation">:</span> <span class="token string">''</span></code></pre><p><strong>设置完成以后，代码应该可以正常高亮显示了</strong>：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240419134257577.png"></p><p><strong>css没生效时</strong>：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240129023608248-1714733558687-26.png"></p><p>prism的js主要是显示行号，显示特殊字符等功能，如果你没有这个需求可以不添加。metery主题的prism是没有js代码的，如果你要显示行号，你需要去官网下载：</p><p><strong>这里Language选择select all</strong>：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240419134717854.png"></p><p><strong>插件选择Line Number</strong>：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240419134828055.png"></p><p><strong>选择完成后点击下载JS和CSS</strong>：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240419134856965.png"></p><p>进入<code>博客根目录/themes/&#123;主题文件夹&#125;/source/libs/prism/</code>，删除原样式文件，将下载好的<code>prism.js</code>和<code>prism.css</code>重命名为<code>prism.min.js</code>和<code>prism.min.css</code>：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240419135156814.png"></p><p>最后检查你的<code>metery</code>主题文件的<code>config.yml</code>中，<code>libs</code>的文件路径是否和文件夹的名称对应：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240419140134357.png"></p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240419140212995.png"></p><h4 id="添加按钮"><a href="#添加按钮" class="headerlink" title="添加按钮"></a>添加按钮</h4><p><strong>简介</strong>：有的朋友想要博客的背景图片，因为我图片是动态切换的，没问题，直接给整上</p><h3 id="使用Vercel部署博客-推荐"><a href="#使用Vercel部署博客-推荐" class="headerlink" title="使用Vercel部署博客(推荐)"></a>使用Vercel部署博客(推荐)</h3><p><strong>简介</strong>：Vercel可以代替CDN起到资源缓存的作用，鉴于很多免费的CDN被减速或封禁，这个方法是目前最好的选择</p><p>首先使用你的github账号注册vercel，注册完成后点击overview，然后<code>Import Project</code>：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240130014305525-1714733558687-27.png"></p><p>选择你的博客仓库进行部署：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240130014402826-1714733558687-28.png"></p><p>选择<code>Framework Preset</code>为<code>other</code>，别的保持不变，点击<code>deploy</code>进行部署：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240130015409925-1714733558687-29.png" alt="image-20240130015409925"></p><p>部署完成后，我们直接添加域名：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240130015555284-1714733558687-30.png"></p><p>按照提示添加域名即可</p><p>测试了一下，访问速度还是不错的：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240130020836765-1714733558687-31.png"></p><h3 id="套用CDN-DNS解析加速"><a href="#套用CDN-DNS解析加速" class="headerlink" title="套用CDN(DNS解析加速)"></a>套用CDN(DNS解析加速)</h3><p><strong>介绍</strong>：<code>CDN(Content Delivery Network)</code>是指内容分发网络，也称为内容传送网络，为了能在传统<code>IP</code>网上发布丰富的宽带媒体内容，他们提出在现有互联网基础上建立一个内容分发平台专门为网站提供服务</p><p><strong>作用</strong>：降低访客打开你博客的延迟，同时提高博客的安全性</p><p><strong>需要的资源</strong>：一个域名和一个CDN运营商(这两个服务需要提前购买好)</p><p><strong>注意</strong>：我这里只列出几个，你可以使用很多渠道了解购买域名和CDN的网站</p><p><strong>域名服务商</strong>：</p><ol><li><a href="https://www.namesilo.com/"><strong>Namesilo</strong></a>：Namesilo 是一家国外的域名注册商，价格及其便宜，比国内大家熟知的阿里腾讯等便宜好多，.com域名不到6刀就可以买，而且续费也便宜。 Namesilo 是 ICANN 认证的域名域名注册商之一，注册和转入都很方便，安全保护到位而且性价比很高。</li><li><a href="https://sg.godaddy.com/zh"><strong>GoDaddy</strong></a>：GoDaddy是ICANN认证的最大域名注册商之一，它应该算是最早一批进入中国市场的国外域名服务商了，早些年很多站长都喜欢在上面购买主机和域名。</li></ol><p><strong>CDN运营商</strong>：</p><ol><li><a href="https://www.cloudflare.com/zh-cn/">Cloudflare</a>：Cloudflare是一家美国的跨国科技企业，总部位于旧金山，在英国伦敦亦设有办事处。主要业务有CDN、WAF、DDNS等</li><li><a href="https://www.upyun.com/">又拍云(国内)</a>：又拍云以场景化CDN为核心业务，为客户提供云存储、云处理、云安全、流量营销等服务，帮助用户实现内容分发加速、产品研发加速、业务成长加速。</li></ol><p><strong>注意</strong>：使用国内的CDN运营商需要<strong>申请备案</strong></p><h4 id="套用CloudFlare-太慢了，不推荐"><a href="#套用CloudFlare-太慢了，不推荐" class="headerlink" title="套用CloudFlare(太慢了，不推荐)"></a>套用CloudFlare(太慢了，不推荐)</h4><p><strong>官网</strong>：<a href="https://www.cloudflare.com/zh-cn/">https://www.cloudflare.com/zh-cn/</a></p><p>现在你可以进入CloudFlare官网注册你的第一个账号，选择套餐为Free套餐即可</p><h5 id="添加你的站点"><a href="#添加你的站点" class="headerlink" title="添加你的站点"></a>添加你的站点</h5><p><strong>在主页选择添加站点</strong>：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20220316150255814-1714733558687-32.png"></p><p><strong>输入你购买到的域名，点击添加站点即可</strong>：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20220316150545054-1714733558687-33.png"></p><h5 id="将你的域名DNS解析指向CloudFlare"><a href="#将你的域名DNS解析指向CloudFlare" class="headerlink" title="将你的域名DNS解析指向CloudFlare"></a>将你的域名DNS解析指向CloudFlare</h5><p>添加域名后它会告诉你你的域名DNS解析没有指向Cloudflare，这时，你只需要按照提示设置域名的DNS指向</p><h5 id="设置你的CkoudFlare安全等级"><a href="#设置你的CkoudFlare安全等级" class="headerlink" title="设置你的CkoudFlare安全等级"></a>设置你的CkoudFlare安全等级</h5><p>完成以上设置后，回到主页查看你的域名，当它显示为有效时，证明你的设置已经成功</p><p><strong>我们需要点击域名，进入安全设置</strong>：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20220316150949139-1714733558687-34.png"></p><p>选择<strong>SSL&#x2F;TLS</strong>：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20220316151213150-1714733558687-35.png"></p><p><strong>这里选择完全</strong>：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20220316151610397-1714733558687-36.png"></p><h5 id="创建你的域名"><a href="#创建你的域名" class="headerlink" title="创建你的域名"></a>创建你的域名</h5><p>选择设置<strong>DNS</strong>：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20220316152543473-1714733558687-37.png"></p><p>创建一条<strong>CNAME</strong>记录：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20220316152742629-1714733558687-39.png"></p><p>点击添加记录</p><p><strong>在名称输入</strong>：www</p><p><strong>在目标输入你仓库的地址</strong>：(github名称)+github.io</p><p>点击关闭代理并保存</p><h5 id="设置GitHub域名指向"><a href="#设置GitHub域名指向" class="headerlink" title="设置GitHub域名指向"></a>设置GitHub域名指向</h5><p>返回你的项目，点击<strong>setting</strong>：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20220316152157985-1714733558687-38.png"></p><p>点击<strong>Pages</strong>，在<strong>Custom domain</strong>里输入你的域名：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20220316152330963-1714733558687-40.png"></p><p>当GitHub检测到是能用的以后，我们点击<strong>Save</strong>，点击<strong>Enforce HTTPS</strong></p><p><strong>返回Cloudflare打开代理状态并保存</strong>：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20220316153259257-1714733558687-41.png" alt="image-20220316153259257"></p><p><strong>在浏览器输入你的域名看是否可以显示博客</strong>：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20220316153428040-1714733558687-42.png"></p><p><strong>注意</strong>：</p><p>若无法使用HTTPS协议访问，说明证书还没下发，这时你只需要双手离开键盘，喝杯水，玩玩游戏，等待证书下发即可</p><p>如果无法正常显示你的博客，说明你的地址绑定出现了问题，自行查看是哪里的域名写错了</p><h4 id="套用CloudFront"><a href="#套用CloudFront" class="headerlink" title="套用CloudFront"></a>套用CloudFront</h4><p><strong>简介</strong>：<code>CloudFront</code>是亚马逊推出的<code>CDN</code>服务，但是没有<code>CloudFlare</code>的安全保护，而且没有傻瓜式的一键设置功能，同时<code>CloudFront</code>不免费，但是给博客做加速，费用不会太高（没有受到攻击的情况下）。</p><p><strong>参考链接</strong>：<a href="https://aws.amazon.com/cn/blogs/china/configure-amazon-cloudfront-to-accelerate-the-whole-site">https://aws.amazon.com/cn/blogs/china/configure-amazon-cloudfront-to-accelerate-the-whole-site</a></p><h5 id="项目架构"><a href="#项目架构" class="headerlink" title="项目架构"></a>项目架构</h5><p><strong>简介</strong>：这是整个项目的架构图。这里需要用到两个域名，一个用于<code>vercel</code>，一个用于<code>cloudflare</code>重命名。当然你也可以使用<code>vercel</code>原分配的域名，这样你就节省了一个域名的使用。</p><p>我这里的建议是，使用<code>vercel</code>分配的域名进行加速，使用另外一个域名做备用访问接口，因此，你可能需要两个域名来完成这个项目：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240503173616456.png"></p><p>为了完成域名的配置，建议将你的域名商权限分配给<code>cloudflare</code>，这里使用<code>cloudflare</code>做域名配置</p><h5 id="新建Cloudfront分配"><a href="#新建Cloudfront分配" class="headerlink" title="新建Cloudfront分配"></a>新建Cloudfront分配</h5><p>首先进入亚马逊云搜索cloudfront：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240503164648608.png"></p><p>点击进入<code>cloudfront</code>选择创建分配：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240503164820990.png"></p><h5 id="设置分配"><a href="#设置分配" class="headerlink" title="设置分配"></a>设置分配</h5><p>将vercel分配给博客的域名填入Origin domain（源域），设置协议为匹配查看器：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240503175348448.png"></p><p><strong>下面这里的自动压缩对象选择为Yes</strong>：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240503182306177.png"></p><p><strong>缓存策略和源请求策略选择如下</strong>：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240503182523870.png"></p><p>全部设置项的解释如下，也可以查看参考链接获得更详细的介绍：</p><table><thead><tr><th>托管 源请求策略</th><th></th></tr></thead><tbody><tr><td><code>UserAgentRefererHeaders</code></td><td>仅包含User-Agent和Referer标头，可以统计客户来源。</td></tr><tr><td><code>CORS-CustomOrigin</code></td><td>包含Origin标头，适用于自定义源启用跨源资源共享 CORS。</td></tr><tr><td><code>CORS-S3Origin</code></td><td>适用于S3源启用跨源资源共享 CORS。</td></tr><tr><td><code>AllViewer</code></td><td>适用于动态请求的源站，源站可以获取查询字符串和Cookie等信息。</td></tr><tr><td><code>Elemental-MediaTailor-PersonalizedManifests</code></td><td>适用于Amazon Elemental MediaTailor 终端节点的源</td></tr></tbody></table><table><thead><tr><th>托管 响应标头策略</th><th></th></tr></thead><tbody><tr><td><code>SimpleCORS</code></td><td>允许来自任何源的简单 CORS 请求（添加标头：Access-Control-Allow-Origin: *）。</td></tr><tr><td><code>CORS-With-Preflight</code></td><td>支持CORS的预检请求（Http的OPTIONS方法）。</td></tr><tr><td><code>SecurityHeadersPolicy</code></td><td>添加一组安全标头。</td></tr><tr><td><code>CORS-and-SecurityHeadersPolicy</code></td><td>添加CORS标头和安全标头。</td></tr><tr><td><code>CORS-with-preflight-and-SecurityHeadersPolicy</code></td><td>添加CORS，预检和安全标头。</td></tr></tbody></table><p><strong>设置关闭WAF</strong>：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240503183003542.png"></p><p>选择使用所有边缘站点，开启HTTP&#x2F;3：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240503183106303.png"></p><p>申请一个证书：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240503183354481.png"></p><p>选择请求公有证书：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240503183451122.png"></p><p>这里填写<code>*.你的域名</code>，例如<code>*.maxstars.xyz</code>。然后选择DNS验证。填写完毕后点击请求：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240503183723118.png"></p><p><strong>在你的域名下添加一个CNAME认证即可</strong>：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240503183920304.png"></p><p>添加完成后返回<code>cloudfront</code>配置，添加一个给读者访问的域名，添加完成后创建分配，等待分配完成即可访问：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240503184646066.png"></p><p>等待域名生效后用<code>nslookup</code>查看域名是否已经加速，若查找到<code>xxx.cloudfront.net</code>则已经成功：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240503185044469.png"></p><h3 id="将博客设置被收录"><a href="#将博客设置被收录" class="headerlink" title="将博客设置被收录"></a>将博客设置被收录</h3><h4 id="设置必应收录"><a href="#设置必应收录" class="headerlink" title="设置必应收录"></a>设置必应收录</h4><p><strong>简介</strong>：这里我使用matery主题来演示。</p><p><strong>必应收录链接</strong>：<a href="https://search.google.com/search-console/welcome?hl=zh-CN">https://search.google.com/search-console/welcome?hl=zh-CN</a></p><p>这里我们选择添加HTML标签：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240202145135994-1714733558688-43.png"></p><p>复这串HTML标签，来到<code>hexo-theme-matery/layout/_partial/head.ejs</code>中添加HTML标签：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240202103518874-1714733558688-44.png"></p><p>将标签添加到此处即可，使用这条命令重新部署博客：</p><pre class="language-bash" data-language="bash"><code class="language-bash">hexo cl <span class="token operator">&amp;&amp;</span> hexo g <span class="token operator">&amp;&amp;</span> hexo d</code></pre><p>等待1分钟后，点击验证即可完成验证。</p><p>完成后直接可以在后台拿到API：</p><p><img src="/2021/11/05/hexo-da-jian-quan-jie/image-20240202143606362-1714733558688-45.png"></p><p>这里先复制API，保留备用。</p><h4 id="增加收录速度"><a href="#增加收录速度" class="headerlink" title="增加收录速度"></a>增加收录速度</h4><p><strong>简介</strong>：使用<code>hexo-submit-urls-to-search-engine</code>可以增加各个平台搜索引擎的网页收录速度。</p><p><strong>插件地址</strong>：<a href="https://github.com/cjh0613/hexo-submit-urls-to-search-engine?tab=readme-ov-file">https://github.com/cjh0613/hexo-submit-urls-to-search-engine?tab=readme-ov-file</a></p><p><strong>插件中文文档</strong>：<a href="https://cjh0613.com/20200603HexoSubmitUrlsToSearchEngine">https://cjh0613.com/20200603HexoSubmitUrlsToSearchEngine</a></p><p>安装<code>hexo-submit-urls-to-search-engine</code>：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">--save</span> hexo-submit-urls-to-search-engine</code></pre><p>安装完成后，在主<code>config.yml</code>文件内添加插件配置：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">hexo_submit_urls_to_search_engine</span><span class="token punctuation">:</span>  <span class="token key atrule">submit_condition</span><span class="token punctuation">:</span> count <span class="token comment">#链接被提交的条件，可选值：count | period 现仅支持count</span>  <span class="token key atrule">count</span><span class="token punctuation">:</span> <span class="token number">10</span> <span class="token comment"># 提交最新的10个链接</span>  <span class="token key atrule">period</span><span class="token punctuation">:</span> <span class="token number">900</span> <span class="token comment"># 提交修改时间在 900 秒内的链接</span>  <span class="token key atrule">google</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token comment"># 是否向Google提交，可选值：1 | 0（0：否；1：是）</span>  <span class="token key atrule">bing</span><span class="token punctuation">:</span> <span class="token number">1</span> <span class="token comment"># 是否向bing提交，可选值：1 | 0（0：否；1：是）</span>  <span class="token key atrule">baidu</span><span class="token punctuation">:</span> <span class="token number">1</span> <span class="token comment"># 是否向baidu提交，可选值：1 | 0（0：否；1：是）</span>  <span class="token key atrule">txt_path</span><span class="token punctuation">:</span> submit_urls.txt <span class="token comment">## 文本文档名， 需要推送的链接会保存在此文本文档里</span>  <span class="token key atrule">baidu_host</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//cjh0613.github.io <span class="token comment">## 在百度站长平台中注册的域名</span>  <span class="token key atrule">baidu_token</span><span class="token punctuation">:</span> 请按照文档说明获取 <span class="token comment">## 请注意这是您的秘钥， 所以请不要把它直接发布在公众仓库里!</span>  <span class="token key atrule">bing_host</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//cjh0613.github.io <span class="token comment">## 在bing站长平台中注册的域名</span>  <span class="token key atrule">bing_token</span><span class="token punctuation">:</span> 请按照文档说明获取 <span class="token comment">## 请注意这是您的秘钥， 所以请不要把它直接发布在公众仓库里!</span>  <span class="token key atrule">google_host</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//cjh0613.github.io <span class="token comment">## 在google站长平台中注册的域名</span>  <span class="token key atrule">google_key_file</span><span class="token punctuation">:</span> Project.json <span class="token comment">#存放google key的json文件，放于网站根目录（与hexo _config.yml文件位置相同），请不要把json文件内容直接发布在公众仓库里!</span>  <span class="token key atrule">google_proxy</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//127.0.0.1<span class="token punctuation">:</span><span class="token number">8080</span> <span class="token comment"># 向谷歌提交网址所使用的系统 http 代理，填 0 不使用</span>  <span class="token key atrule">replace</span><span class="token punctuation">:</span> <span class="token number">0</span>  <span class="token comment"># 是否替换链接中的部分字符串，可选值：1 | 0（0：否；1：是）</span>  <span class="token key atrule">find_what</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//cjh0613.github.io/blog  <span class="token key atrule">replace_with</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//cjh0613.com</code></pre><p>修改必应推送的开关、token和host即可。</p>]]></content>
      
      
      <categories>
          
          <category> hexo教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML笔记</title>
      <link href="/2021/01/19/html-bi-ji/"/>
      <url>/2021/01/19/html-bi-ji/</url>
      
        <content type="html"><![CDATA[<h2 id="HTML5"><a href="#HTML5" class="headerlink" title="HTML5"></a>HTML5</h2><p><strong>前端学习路线图</strong>：<a href="https://roadmap.sh/frontend">https://roadmap.sh/frontend</a></p><h3 id="HTML的基本概念"><a href="#HTML的基本概念" class="headerlink" title="HTML的基本概念"></a>HTML的基本概念</h3><h4 id="HTML的概念"><a href="#HTML的概念" class="headerlink" title="HTML的概念"></a>HTML的概念</h4><p><strong>HTML</strong>: 超文本标记语言</p><p><strong>作用</strong>: </p><ol><li><p>需要将java在后台根据<strong>用户请求处理</strong>的<strong>请求结果</strong>在浏览器中显示给用户。</p></li><li><p>在浏览器中数据需要使用<strong>友好的格式</strong>展现给用户。</p></li><li><p>HTML是告诉浏览器接收到的数据用<strong>什么样的数据组织形式展示</strong>。</p></li></ol><p><strong>使用</strong>:</p><ol><li>HTML的标准文档规范</li><li>HTML的标签</li></ol><h4 id="互联网的三大基石"><a href="#互联网的三大基石" class="headerlink" title="互联网的三大基石"></a>互联网的三大基石</h4><p>​<strong>URL</strong>: 统一资源定位符(唯一的定位一个网络资源)</p><p>​<strong>HTTP</strong>: 超文本传输协议(规范浏览器和服务器之间的数据交互形式)</p><p>​<strong>HTML</strong>: 超文本标记语言(有效组织数据在浏览器端的显示)</p><p><strong>HTML的文档声明:</strong></p><p>​<code>文件名.html</code> 或者 <code>文件名.htm</code></p><p><strong>HTML的标准文档结构:</strong></p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p><strong>html的标准文档结构学习:</strong></p><p>​<strong>顶层标签</strong>: <code>html</code></p><p>​<strong>头标签</strong>: <code>head</code> </p><p><strong>head作用</strong>：主要是配置浏览器显示数据的配置信息，例如字符编码等一般是给浏览器使用</p><p>​<strong>主体标签</strong>: <code>body</code> </p><p><strong>body作用</strong>：给用户进行数据展示</p><p><strong>注意</strong>：</p><p><strong>html的标签语法为</strong>: </p><p>​<code>&lt;标签名&gt;&lt;/标签名&gt;</code> (双标签) </p><p>​<code>&lt;标签名 /&gt;</code> (单标签)</p><h3 id="头标签"><a href="#头标签" class="headerlink" title="头标签"></a>头标签</h3><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token comment">&lt;!-- 网页编码格式 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token comment">&lt;!-- 告诉IE浏览器以最高级标准模式渲染 --></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span> <span class="token comment">&lt;!-- 网页标题 --></span>                <span class="token comment">&lt;!-- 网站信息(非重要) --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>description<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>本网站是关于html学习的<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token comment">&lt;!-- 网页描述 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>author<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wqa<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token comment">&lt;!-- 网页作者 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content-type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5;url=http://www.baidu.com<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token comment">&lt;!-- 网页自动跳转 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="主体标签"><a href="#主体标签" class="headerlink" title="主体标签"></a>主体标签</h3><h4 id="标题标签"><a href="#标题标签" class="headerlink" title="标题标签"></a>标题标签</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> 标题标签 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span></code></pre><p><strong>功能</strong>：h标签有6个级别，将数据加粗，并且显示依次减弱，标题标签自动换行，是块元素。<br>align是标签属性，可以对标签功能进一步补充。</p><h4 id="水平线标签"><a href="#水平线标签" class="headerlink" title="水平线标签"></a>水平线标签</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>40%<span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20px<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span></code></pre><p><strong>功能</strong>：会在页面中显示一条水平线，默认居中，是块元素。</p><p>width可以设置为绝对长度600px，也可以设置成相对浏览器长度的40%。</p><p>size可以设置水平线的高度。</p><p>color可以设置水平线的颜色。</p><h4 id="段落标签"><a href="#段落标签" class="headerlink" title="段落标签"></a>段落标签</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span> 段落 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre><p><strong>功能</strong>：将一段数据作为整体显示，主要是进行css和js操作时比较方便，是块元素。</p><p>特点：段间距比较大。</p><h4 id="换行符-空格符"><a href="#换行符-空格符" class="headerlink" title="换行符&amp;空格符"></a>换行符&amp;空格符</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>&amp;nbsp</code></pre><p><strong>br功能</strong>：将数据进行换行。</p><p><strong>&amp;nbsp(non-breaking space)功能</strong>：输出空格符。</p><h4 id="权重标签-斜体标签-下划线标签"><a href="#权重标签-斜体标签-下划线标签" class="headerlink" title="权重标签&amp;斜体标签&amp;下划线标签"></a>权重标签&amp;斜体标签&amp;下划线标签</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>加粗内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">></span></span>斜体内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>u</span><span class="token punctuation">></span></span>下划线内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>u</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>del</span><span class="token punctuation">></span></span>删除线内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>del</span><span class="token punctuation">></span></span></code></pre><p><strong>注意</strong>：以上标签不会自动换行，并且可以嵌套使用。</p><h4 id="列表标签"><a href="#列表标签" class="headerlink" title="列表标签"></a>列表标签</h4><h5 id="无序列表："><a href="#无序列表：" class="headerlink" title="无序列表："></a>无序列表：</h5><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span> 中国知名城市 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>北京<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>上海<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>商丘<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span></code></pre><p><strong>功能</strong>：在li里书写内容，一个li标签代表列表中的一行数据。</p><p><strong>特点</strong>：默认数据前有一个黑圆圈符号。</p><h5 id="有序列表："><a href="#有序列表：" class="headerlink" title="有序列表："></a>有序列表：</h5><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>I<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>打游戏<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>打球<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>看电影<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span></code></pre><p><strong>li功能</strong>：在li里书写内容，一个li标签代表列表中的一行数据。</p><p><strong>特点</strong>：会自动的给列表进行顺序编码，格式从小到大并且是连续的。</p><p>type可以改变顺序编码的值，可以是1 a A I，默认使用阿拉伯数字进行顺序编码。</p><h5 id="自定义列表"><a href="#自定义列表" class="headerlink" title="自定义列表"></a>自定义列表</h5><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">></span></span>IT课程:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>java课程<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>python课程<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>大数据课程<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dl</span><span class="token punctuation">></span></span></code></pre><p><strong>dt功能</strong>：数据的标题。</p><p><strong>dd功能</strong>：数据的具体内容。</p><h3 id="图片标签"><a href="#图片标签" class="headerlink" title="图片标签"></a>图片标签</h3><h4 id="本地资源："><a href="#本地资源：" class="headerlink" title="本地资源："></a>本地资源：</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/1.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200px<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200px<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>这是一张图片<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>图片加载失败后的提示语<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span></code></pre><p><strong>src</strong>：图片路径。</p><p>​路径：一般本地图片资源使用相对路径即可。</p><p>​相对路径：从当前文件出发查找另一个文件所经过的路径。</p><p>​绝对路径：从根盘符出发所查找文件的路径。</p><p><strong>title</strong>：图片标题，鼠标放在上面的时候会提示。</p><p><strong>alt</strong>：图片加载失败后的提示语。</p><p><strong>特点</strong>：width设置图片的宽，height设置图片的高，单独设置某个参数来使图片达到不失真缩放。单位可以是px也可以是百分比。img是行内块元素。</p><h4 id="网络资源："><a href="#网络资源：" class="headerlink" title="网络资源："></a>网络资源：</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://url***<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code></pre><p><strong>src</strong>：url路径</p><h3 id="超链接标签"><a href="#超链接标签" class="headerlink" title="超链接标签"></a>超链接标签</h3><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>超链接<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre><p><strong>herf</strong>：要跳转的资源路径</p><p><strong>target</strong>：指名要跳转的网页资源显示位置，<code>_self</code>在当前页面显示，<code>_blank</code>在新页面显示</p><p><strong>注意</strong>：超链接标签一定要写内容，不然无法显示</p><p>url和图片的src使用方式一样</p><h4 id="锚点学习："><a href="#锚点学习：" class="headerlink" title="锚点学习："></a>锚点学习：</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#first<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>第一章<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#second<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>第二章<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#third<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>第三章<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#fourth<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>第四章<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>first<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>second<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>third<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fourth<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>回到顶部<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>使页面刷新</code></pre><p><strong>作用</strong>：在一张网页中进行跳转</p><p><strong>使用</strong>：先使用超链接在指定的网页位置添加锚点，然后再使用a标签指向</p><h3 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h3><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">broder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1px<span class="token punctuation">"</span></span> <span class="token attr-name">cellpadding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10px<span class="token punctuation">"</span></span> <span class="token attr-name">cellspacing</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>科目<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>分数<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>级别<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>说明<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>100<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>面向对象的语言<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>C语言<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>100<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>面向过程的语言<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">colspan</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></code></pre><p><strong>tr作用</strong>：声明一行</p><p><strong>th作用</strong>：声明一个表头单元格</p><p><strong>td作用</strong>：声明一个单元格</p><p><strong>表格特点</strong>：默认根据数据进行表格的大小展示</p><p><strong>属性</strong>：<br>    broder：给表格添加边框<br>    width：设置表格的宽度<br>    height：设置表格的高度<br>    cellpadding：设置内容边框的距离<br>    cellspacing： 设置边框的大小<br>    colspan：行合并单元格，合并以后要删除多余单元格<br>    rowspan：列合并单元格，合并以后要删除多余单元格</p><p>​</p><table><thead><tr><th>科目</th><th>分数</th><th>级别</th><th>说明</th></tr></thead><tbody><tr><td>java</td><td>100</td><td>8</td><td>面向对象的语言</td></tr><tr><td>C语言</td><td>100</td><td>8</td><td>面向过程的语言</td></tr></tbody></table><h3 id="内嵌标签"><a href="#内嵌标签" class="headerlink" title="内嵌标签"></a>内嵌标签</h3><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ifname</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ifname</span><span class="token punctuation">></span></span>a标签可以和ifname一起使用达到动态显示效果<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">herf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.baidu.com<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_if<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>百度<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">herf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.taobao.com<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_tt<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>淘宝<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ifname</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>48%<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>400px<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_if<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ifname</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ifname</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>48%<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>400px<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_tt<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ifname</span><span class="token punctuation">></span></span>可以达到双搜效果</code></pre><p><strong>作用</strong>：在当前页面加载另一个网页的资源，达到不同网页之间不相互干扰，并能在同一个页面中展示给用户的目的</p><p><strong>src</strong>：要显示的网页资源路径</p><p><strong>width</strong>：设置显示区域的宽度</p><p><strong>height</strong>：设置显示区域的高度</p><h3 id="框架标签"><a href="#框架标签" class="headerlink" title="框架标签"></a><del>框架标签</del></h3><p>html5不支持frame标签</p><p><strong>index</strong>：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>东软后院<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>frameset</span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10%,*,10%<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>frame</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top.html<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>frameset</span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10%,*<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>frame</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>left.html<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>frame</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>right.html<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>frameset</span> <span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>frame</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bottom.html<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p><strong>left</strong>：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.baidu.com<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>百度一下<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.taobao.com<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>淘宝网<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.jd.com<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>京东网<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p><strong>right</strong>：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    我是right<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p><strong>buttom</strong>：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    我是buttom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="表单、表单域标签"><a href="#表单、表单域标签" class="headerlink" title="表单、表单域标签"></a>表单、表单域标签</h3><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>get<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    用户名：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>uname<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>    密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>upwd<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>    性别：男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> 女<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>    爱好：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>    吃饭<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fav<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>    睡觉<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fav<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>    打豆豆<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fav<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>    籍贯：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>address<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>北京<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>上海<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>广州<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>    文本域：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>intro<span class="token punctuation">"</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>    普通按钮： <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>普通按钮<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    隐藏标签：    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hidden<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hidden<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>哈哈<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>登录<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code></pre><p><strong>from作用</strong>：收集表单域标签的数据，按照method的方式提交用户数据给指定服务器</p><p><strong>action</strong>：收集的数据提交地址也就是URL<br><strong>method</strong>：收集的数据的提交方式<br>    <strong>get</strong>：适合小量数据，表单数据以问号隔开拼接在url后面，不同的键值对以&amp;隔开，不安全<br>    <strong>post</strong>：适合大量数据，安全，隐式提交</p><p><strong>注意</strong>：表单数据的提交，要提交的表单项<strong>必须有name值</strong>，否则不提交，提交的表单项数据为<strong>键值对</strong>，<strong>键为name的值，值为用户数据</strong></p><p><strong>input</strong>：</p><p><strong>文本框</strong>：<br>    <strong>type</strong><br>        <strong>test</strong>：收集少量的文本数据，用户可见<br>        <strong>password</strong>：收集用户密码数据<br>        <strong>value</strong>：默认值</p><p><strong>单选框</strong>：<br>    <strong>type</strong>：<br>        <strong>radio</strong><br>            <strong>name</strong>：当name属性值相同时为单选<br>            <strong>value</strong>：要提交的数据<br>            <strong>checked</strong>：使用此属性的单选默认是选择状态</p><p><strong>多选框</strong>：<br>    <strong>type</strong>:<br>        <strong>checkobox</strong><br>            <strong>name</strong>：一个多选组需要使用相同的name属性值<br>            <strong>value</strong>：要提交的数据<br>            <strong>checked</strong>：属于此属性的多选框默认是选择状态</p><p><strong>下拉框</strong>：<br>    <strong>select</strong>：<br>        <strong>name</strong>：数据提交的键名，必须声明<br>        <strong>子标签option</strong>：一个option标签表示一个下拉选项<br>        <strong>value</strong>：要提交的数据</p><p><strong>文本域</strong>：<br>    <strong>textarea</strong>：声明一个可以大量书写文本的区域<br>    <strong>name</strong>：数据提交的键名，js和css也会使用<br>    <strong>cols</strong>：声明文本域的列数</p><p><strong>普通按钮</strong>：<br>    <strong>input</strong>：<br>    <strong>type</strong>：button</p><p><strong>隐藏标签</strong>：<br>    <strong>input</strong>：<br>    <strong>type</strong>：hidden</p><p><strong>注意</strong>：表单数据提交的是表单标签的value值</p><h3 id="HTML样例"><a href="#HTML样例" class="headerlink" title="HTML样例"></a>HTML样例</h3><h4 id="模拟百度"><a href="#模拟百度" class="headerlink" title="模拟百度"></a>模拟百度</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>模拟百度<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.baidu.com/s<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>get<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wd<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>百度一下<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><p> <a href="https://www.baidu.com/s">https://www.baidu.com/s</a> ? <strong>tn&#x3D;68018901_2_oem_dg</strong> &amp; <strong>ie&#x3D;utf-8</strong> &amp; <strong>word&#x3D;java</strong></p><p><strong>get请求的典型特征是</strong>：**服务器地址 **+ <strong>?</strong> + <strong>键值对的值</strong></p><p>我们可以查看提交后的<strong>键值对</strong>来获得<strong>提交信息</strong></p><p>例如在百度搜索中搜索java，我们可以发现<strong>服务器url为</strong>：<a href="https://www.baidu.com/s">https://www.baidu.com/s</a> </p><p>word&#x3D;java，说明搜索框提交的<strong>键值</strong>为java，<strong>键</strong>为word</p><h4 id="模拟注册页"><a href="#模拟注册页" class="headerlink" title="模拟注册页"></a>模拟注册页</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>注册页面<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1px<span class="token punctuation">"</span></span> <span class="token attr-name">cellspacing</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">cellpadding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>35px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    用户名:                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>uname<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>uname<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>35px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                    密码:                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pwd<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pwd<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span> <span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>35px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                    邮箱:                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mail<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mail<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>35px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                    手机号:                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>phone<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>phone<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>35px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                    性别:                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                    男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checked<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    女<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>35px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                    爱好:                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fav<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fav<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>唱歌                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fav<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fav<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>打球                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fav<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fav<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>旅游                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>35px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                    籍贯:                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>商丘<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>菏泽<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>信阳<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>北京<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>35px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                    个人介绍:                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>intro<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span> <span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>35px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">colspan</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>agree<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>agree<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> 是否同意本公司的协议                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>35px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">colspan</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>注册<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>file:&#x2F;&#x2F;&#x2F;C:&#x2F;Users&#x2F;11014&#x2F;Desktop&#x2F;working&#x2F;test.html?<br><strong>uname</strong>&#x3D;wqa<br>&amp;<strong>pwd</strong>&#x3D;122<br>&amp;<strong>mail</strong>&#x3D;111<br>&amp;<strong>phone</strong>&#x3D;213<br>&amp;<strong>sex</strong>&#x3D;1<br>&amp;<strong>fav</strong>&#x3D;1<br>&amp;<strong>intro</strong>&#x3D;wdadw12<br>&amp;<strong>agree</strong>&#x3D;1</p><p>&amp;%E6%B3%A8%E5%86%8C&#x3D;%E6%8F%90%E4%BA%A4</p><h3 id="HTML快捷键"><a href="#HTML快捷键" class="headerlink" title="HTML快捷键"></a>HTML快捷键</h3><p>例子：</p><pre class="language-markup" data-language="markup"><code class="language-markup">table>tr*5>td*6form>input*6</code></pre><h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><h3 id="css简介"><a href="#css简介" class="headerlink" title="css简介"></a>css简介</h3><h4 id="为什么需要css"><a href="#为什么需要css" class="headerlink" title="为什么需要css"></a>为什么需要css</h4><p><strong>HTML作用</strong>：负责数据格式化的展示</p><p>如果使用HTML来书写数据的样式，则发现样式书写太过麻烦，不易于维护，不能重复使用<br>HTML可以有效组织数据的展示，但是不同类型数据在浏览器中的分布没有办法实现</p><p>为了解决上面的问题，诞生了css语言，专门用来给网页进行样式开发</p><h4 id="什么是css"><a href="#什么是css" class="headerlink" title="什么是css"></a>什么是css</h4><p>css的概念：<br>    层叠样式表<br>    作用：<br>        给网页进行简单的样式开发<br>        给网页进行布局<br>    特点：<br>        语言特别简单<br>        开发的样式可以进行重复使用</p><h4 id="使用css"><a href="#使用css" class="headerlink" title="使用css"></a>使用css</h4><p>​css的声明<br>​css的选择器<br>​css的常用样式<br>​css的盒子模型<br>​css的定位<br>​css的布局</p><p>css的使用过程：</p><ol><li>声明css代码域</li><li>使用选择器选择要添加样式的标签<ol><li>使用*选择器来给整个页面添加基础样式</li><li>使用类选择器给不同的标签添加基础样式</li><li>使用标签选择器给某类标签添加基础样式</li><li>使用id、属性选择器、style属性声明方式给某个标签添加个性化样式</li></ol></li><li>书写样式单<ol><li>边框设置</li><li>字体设置</li><li>字体颜色设置</li><li>背景颜色设置</li><li>背景图片设置</li><li>高和宽设置</li><li>浮动设置</li><li>行高设置</li></ol></li></ol><h3 id="css的声明"><a href="#css的声明" class="headerlink" title="css的声明"></a>css的声明</h3><h4 id="HTML内声明"><a href="#HTML内声明" class="headerlink" title="HTML内声明"></a>HTML内声明</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">hr</span><span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span> aquamarine<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> aquamarine<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">background-color</span><span class="token punctuation">:</span> aquamarine<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span></code></pre><p>写在head里的style标签声明是公共样式，作用于所有声明的标签；<br>单独写在标签里的style只针对当前标签</p><h4 id="外部声明"><a href="#外部声明" class="headerlink" title="外部声明"></a>外部声明</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>css/my.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></code></pre><p>在外部添加一个<code>my.css</code></p><pre class="language-css" data-language="css"><code class="language-css"><span class="token selector">hr</span><span class="token punctuation">&#123;</span>     <span class="token property">width</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>     <span class="token property">height</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>     <span class="token property">color</span><span class="token punctuation">:</span> aquamarine<span class="token punctuation">;</span>     <span class="token property">background-color</span><span class="token punctuation">:</span> aquamarine<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p>外部声明方式解决了不同网页之间样式重复使用的问题，一次声明，随处使用</p><p><strong>注意</strong>：css不同声明之间是有先后执行顺序的，后面执行的css声明会根据优先级对前面的有所覆盖。执行优先级是：link&#x3D;style&gt;标签内style，同时遵循就进原则</p><h3 id="css选择器"><a href="#css选择器" class="headerlink" title="css选择器"></a>css选择器</h3><h4 id="标签选择器"><a href="#标签选择器" class="headerlink" title="标签选择器"></a>标签选择器</h4><pre class="language-css" data-language="css"><code class="language-css"><span class="token selector">table</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span>300px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span>200px<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> solid 1px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p><strong>格式</strong>：标签名 { 样式名1：样式值1；…… }</p><p><strong>作用</strong>：会将当前网页内的所有标签增加相同的样式</p><h4 id="id选择器"><a href="#id选择器" class="headerlink" title="id选择器"></a>id选择器</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>t1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></code></pre><pre class="language-css" data-language="css"><code class="language-css"><span class="token selector">#t1</span><span class="token punctuation">&#123;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span>gary<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p><strong>格式</strong>：#标签的id属性值{ 样式名1：样式值1；…… }</p><p><strong>作用</strong>：给某个指定的标签添加指定的样式</p><h4 id="类选择器"><a href="#类选择器" class="headerlink" title="类选择器"></a>类选择器</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>common<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>t1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></code></pre><pre class="language-css" data-language="css"><code class="language-css"><span class="token selector">.common</span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p><strong>格式</strong>：.类选择器名{ 样式名1：样式值1；…… }</p><p><strong>作用</strong>：给不同的标签添加相同的样式</p><h4 id="全部选择器"><a href="#全部选择器" class="headerlink" title="全部选择器"></a>全部选择器</h4><pre class="language-css" data-language="css"><code class="language-css"><span class="token selector">*</span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> skyblue<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p><strong>格式</strong>：*{ 样式名1：样式值1；…… }</p><p><strong>作用</strong>：选择所有的HTML标签，并添加样式</p><p><strong>样式显示优先级</strong>：标签&gt;类&gt;全部</p><hr><h4 id="组合选择器"><a href="#组合选择器" class="headerlink" title="组合选择器"></a>组合选择器</h4><pre class="language-css" data-language="css"><code class="language-css"><span class="token selector">.table</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span>300px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span>200px<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> solid 1px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.b</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span>300px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span>200px<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> solid 1px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">以上代码可以写成.table, b</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span>300px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span>200px<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> solid 1px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p><strong>格式</strong>：*选择器1，选择器2{ 样式名1：样式值1；…… }</p><p><strong>作用</strong>：解决不同的选择器之间重复样式的问题</p><h4 id="子标签选择器"><a href="#子标签选择器" class="headerlink" title="子标签选择器"></a>子标签选择器</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>哈哈<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>呵呵<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>嘿嘿<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>嘻嘻<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>p1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre><pre class="language-css" data-language="css"><code class="language-css"><span class="token selector">ul li a</span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span>black<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#p1 a</span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span>yellow<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p><strong>格式</strong>：选择器1 子标签选择{ 样式名1：样式值1；…… }</p><p><strong>作用</strong>：选择标签内的标签，减少代码冗余</p><h4 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre><pre class="language-css" data-language="css"><code class="language-css"><span class="token selector">input[type=text]</span><span class="token punctuation">&#123;</span>    <span class="token property">backgroundcolor</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p><strong>格式</strong>：标签名[属性名&#x3D;属性值]{ 样式名1：样式值1；…… }</p><p><strong>作用</strong>：选择某标签指定具备某属性并且属性值为某属性值的标签</p><h3 id="书写样式单"><a href="#书写样式单" class="headerlink" title="书写样式单"></a>书写样式单</h3><h4 id="边框设置"><a href="#边框设置" class="headerlink" title="边框设置"></a>边框设置</h4><pre class="language-css" data-language="css"><code class="language-css"><span class="token property">border</span><span class="token punctuation">:</span>solid 1px<span class="token punctuation">;</span></code></pre><h4 id="字体设置"><a href="#字体设置" class="headerlink" title="字体设置"></a>字体设置</h4><pre class="language-css" data-language="css"><code class="language-css"><span class="token property">font-size</span><span class="token punctuation">:</span>10px<span class="token punctuation">;</span> 设置字体大小<span class="token property">font-family</span><span class="token punctuation">:</span><span class="token string">"黑体"</span><span class="token punctuation">;</span> 设置字体的样式<span class="token property">font-weight</span><span class="token punctuation">:</span>blod<span class="token punctuation">;</span> 设置字体加粗</code></pre><h4 id="设置字体颜色"><a href="#设置字体颜色" class="headerlink" title="设置字体颜色"></a>设置字体颜色</h4><pre class="language-css" data-language="css"><code class="language-css"><span class="token property">color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span> </code></pre><h4 id="背景颜色设置"><a href="#背景颜色设置" class="headerlink" title="背景颜色设置"></a>背景颜色设置</h4><pre class="language-css" data-language="css"><code class="language-css"><span class="token property">bakcground-img</span><span class="token punctuation">:</span> url<span class="token punctuation">;</span> 图片的相对路径<span class="token property">background-repeate</span><span class="token punctuation">:</span> no-repeate<span class="token punctuation">;</span> 设置图片不重复<span class="token property">bcakground-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span> 图片平铺整个页面</code></pre><h4 id="浮动设置"><a href="#浮动设置" class="headerlink" title="浮动设置"></a>浮动设置</h4><pre class="language-css" data-language="css"><code class="language-css"><span class="token property">float</span><span class="token punctuation">:</span> left/right<span class="token punctuation">;</span></code></pre><h4 id="行高设置"><a href="#行高设置" class="headerlink" title="行高设置"></a>行高设置</h4><pre class="language-css" data-language="css"><code class="language-css"><span class="token property">line-height</span><span class="token punctuation">:</span> 10<span class="token punctuation">;</span></code></pre><h3 id="css的样式使用"><a href="#css的样式使用" class="headerlink" title="css的样式使用"></a>css的样式使用</h3><h4 id="一个标签和导航栏的写法"><a href="#一个标签和导航栏的写法" class="headerlink" title="一个标签和导航栏的写法"></a>一个标签和导航栏的写法</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>css的样式使用<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 声明css代码域 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token comment">/* 添加网页背景图 */</span>        <span class="token selector">body</span><span class="token punctuation">&#123;</span>            <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"img/a1.jpg"</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span><span class="token comment">/* 添加背景图片 */</span>            <span class="token property">background-repeat</span><span class="token punctuation">:</span> no-repeat<span class="token punctuation">;</span><span class="token comment">/* 设置图片不重复 */</span>            <span class="token property">background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span><span class="token comment">/* 设置图片平铺 */</span>            <span class="token property">background-position</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token comment">/* 设置图片居中 */</span>                    <span class="token punctuation">&#125;</span>        <span class="token comment">/* 使用标签选择器 */</span>        <span class="token selector">table</span><span class="token punctuation">&#123;</span>            <span class="token comment">/* border: solid 1px; */</span>            <span class="token property">border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* 设置table的行高 */</span>        <span class="token selector">tr</span><span class="token punctuation">&#123;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* 设置td */</span>        <span class="token selector">td</span><span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span> <span class="token comment">/* 设置宽 */</span>            <span class="token property">border</span><span class="token punctuation">:</span> solid 1px red<span class="token punctuation">;</span> <span class="token comment">/* 添加边框及其颜色和大小 */</span>            <span class="token property">border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token comment">/* 设置表框的角度 */</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> orange<span class="token punctuation">;</span><span class="token comment">/* 设置背景颜色 */</span>            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token comment">/* 设置文本位置 */</span>            <span class="token property">color</span><span class="token punctuation">:</span> purple<span class="token punctuation">;</span><span class="token comment">/* 设置文本颜色 */</span>            <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span><span class="token comment">/* 设置文本加粗 */</span>            <span class="token property">letter-spacing</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token comment">/* 设置字体间距 */</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">ul</span><span class="token punctuation">&#123;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> gray<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">li</span><span class="token punctuation">&#123;</span>            <span class="token property">list-style-type</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token comment">/* 去除li的标识符 */</span>            <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span><span class="token comment">/* 设置左悬浮 */</span>            <span class="token comment">/* float: left; */</span> <span class="token comment">/* 设置左悬浮 */</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">li a</span><span class="token punctuation">&#123;</span>            <span class="token property">color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span>            <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token comment">/* 设置超链接去除下划线 */</span>            <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>            <span class="token property">font-size</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>            <span class="token property">margin-left</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>            <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>            <span class="token property">top</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>css的样式使用<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>姓名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>性别<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>爱好<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>张三<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>唱歌<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>李四<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>跳舞<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>首页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>百战<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>java风情<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>客服<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h4 id="一个照片墙的写法"><a href="#一个照片墙的写法" class="headerlink" title="一个照片墙的写法"></a>一个照片墙的写法</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>照片墙案例<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 声明css代码域 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token comment">/* 设置body样式 */</span>    <span class="token selector">body</span><span class="token punctuation">&#123;</span>        <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> gray<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">img</span><span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 12%<span class="token punctuation">;</span> <span class="token comment">/* 设置图片高度 */</span>        <span class="token comment">/* border: solid 1px; */</span>        <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token comment">/* 设置内边距 */</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span><span class="token comment">/* 设置背景颜色 */</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>-10deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/* 设置倾斜角度 */</span>        <span class="token property">margin</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token comment">/* 设置外边距 */</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/* 使用伪类给标签添加样式 */</span>    <span class="token selector">img:hover</span><span class="token punctuation">&#123;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>0deg<span class="token punctuation">)</span> <span class="token function">scale</span><span class="token punctuation">(</span>1.5<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/* 设置旋转角度和缩放比例 */</span>        <span class="token property">z-index</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span><span class="token comment">/* 设置显示优先级别 */</span>        <span class="token property">transition</span><span class="token punctuation">:</span> 1.5s<span class="token punctuation">;</span><span class="token comment">/* 设置显示时间 */</span>    <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/a1.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/a2.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/a3.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/a4.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/a5.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/a6.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/a7.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/a8.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="div标签"><a href="#div标签" class="headerlink" title="div标签"></a>div标签</h3><pre class="language-markup" data-language="markup"><code class="language-markup">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">img</span><span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 49.53%<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">#showdiv</span><span class="token punctuation">&#123;</span>            <span class="token property">border</span><span class="token punctuation">:</span> solid 3px<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 40%<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showiv<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/a1.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/a1.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><p><strong>div标签作用</strong>：块级标签，主要是用来进行网页布局的，会将其中的子元素内容作为一个独立的整体存在。</p><p><strong>特点</strong>：默认宽度是页面的宽度，可以设置；高度默认是没有的，可以设置（可以顶开）；如果子元素设置了百分比的高或宽，占据的是div的百分比，不是页面的。</p><h3 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h3><pre class="language-markup" data-language="markup"><code class="language-markup">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">img</span><span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 49.53%<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">#showdiv</span><span class="token punctuation">&#123;</span>            <span class="token property">border</span><span class="token punctuation">:</span> solid 3px<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 40%<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>            <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>            <span class="token property">margin-left</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">#div01</span><span class="token punctuation">&#123;</span>            <span class="token property">border</span><span class="token punctuation">:</span> dashed 3px orange<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 40%<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>            <span class="token property">margin-left</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showdiv<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/a1.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/a1.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>div01<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><p><strong>外边距</strong>：<code>margin</code><br><strong>作用</strong>：用来设置元素和元素之间的间隔<br><strong>居中设置</strong>：margin：0px auto;上下间隔0px，水平居中<br><strong>注意</strong>：可以根据需求单独设置上下左右的外边距</p><p><strong>边框</strong>：<code>border</code><br><strong>作用</strong>：用来设置元素边框的大小<br><strong>注意</strong>：可以单独设置上下左右的大小</p><p><strong>内边距</strong>：<code>padding</code><br><strong>作用</strong>：设置内容和边框之间的距离<br><strong>注意</strong>：内边距不会改变内容区域的大小，可以单独设置上下左右的内边距</p><p><strong>内容区域</strong>：<br><strong>作用</strong>：改变内容区域的大小<br><strong>注意</strong>：设置div的宽和高即会改变内容区域的大小</p><h4 id="盒子模型的简单使用"><a href="#盒子模型的简单使用" class="headerlink" title="盒子模型的简单使用"></a>盒子模型的简单使用</h4><p>基于上述内容对盒子模型的使用</p><pre class="language-markup" data-language="markup"><code class="language-markup">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token comment">/* 设置div的基础样式 */</span>        <span class="token selector">div</span><span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* 设置header和footer的样式 */</span>        <span class="token selector">#header,#footer</span><span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 650px<span class="token punctuation">;</span>            <span class="token property">margin-top</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">#div01</span><span class="token punctuation">&#123;</span>            <span class="token property">border</span><span class="token punctuation">:</span> solid 1px orange<span class="token punctuation">;</span>            <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>            <span class="token property">margin-right</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">#div02</span><span class="token punctuation">&#123;</span>            <span class="token property">border</span><span class="token punctuation">:</span> solid 1px blueviolet<span class="token punctuation">;</span>            <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">#div03</span><span class="token punctuation">&#123;</span>            <span class="token property">border</span><span class="token punctuation">:</span> solid 1px springgreen<span class="token punctuation">;</span>            <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>            <span class="token property">margin-right</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">#div04</span><span class="token punctuation">&#123;</span>            <span class="token property">border</span><span class="token punctuation">:</span> solid 1px coral<span class="token punctuation">;</span>            <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>div01<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            我是div01          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>div02<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            我是div02          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>div03<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            我是div03        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>div04<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            我是div04        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><h3 id="css的定位学习"><a href="#css的定位学习" class="headerlink" title="css的定位学习"></a>css的定位学习</h3><pre class="language-markup" data-language="markup"><code class="language-markup"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token comment">/* 给div01添加样式 */</span>        <span class="token selector">#div01</span><span class="token punctuation">&#123;</span>            <span class="token property">border</span><span class="token punctuation">:</span> solid 2px orange<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 800px<span class="token punctuation">;</span>            <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>            <span class="token property">margin-top</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>            <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span><span class="token comment">/* 给div01添加相对定位成为其子元素绝对定位的参照元素 */</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* 给showdiv添加样式 */</span>        <span class="token selector">#showdiv</span><span class="token punctuation">&#123;</span>            <span class="token property">border</span><span class="token punctuation">:</span> solid 3px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>            <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>            <span class="token property">top</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* 给div02添加样式 */</span>        <span class="token selector">#div02</span><span class="token punctuation">&#123;</span>            <span class="token property">border</span><span class="token punctuation">:</span> dashed 2px coral<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 800px<span class="token punctuation">;</span>            <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>            <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span><span class="token comment">/* 使用相对定位 */</span>            <span class="token property">left</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>            <span class="token property">top</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> coral<span class="token punctuation">;</span>            <span class="token property">z-index</span><span class="token punctuation">:</span> 3<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* 给div03添加样式 */</span>        <span class="token selector">#div03</span><span class="token punctuation">&#123;</span>            <span class="token property">border</span><span class="token punctuation">:</span> solid 2px blueviolet<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 800px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> blueviolet<span class="token punctuation">;</span>            <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>            <span class="token property">z-index</span><span class="token punctuation">:</span> 4<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* 给div04添加样式 */</span>        <span class="token selector">#div04</span><span class="token punctuation">&#123;</span>            <span class="token property">border</span><span class="token punctuation">:</span> solid 3px blue<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>            <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>            <span class="token property">top</span><span class="token punctuation">:</span> 270px<span class="token punctuation">;</span>            <span class="token property">right</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>div01<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showdiv<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>div02<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>我是div02<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>div03<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>div04<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p><code>position</code>：</p><p><strong>相对定位</strong>：<code>relative</code></p><p><strong>作用</strong>：相对元素原有位置移动指定的距离(<strong>相对自己原有位置</strong>)</p><p>可以是top，left，right，bottom来进行设置</p><p><strong>注意</strong>：其他元素位置是不动的</p><p><strong>绝对定位</strong>：<code>absolute</code></p><p><strong>作用</strong>：可以使元素参照界面或相对父元素来进行移动</p><p><strong>注意</strong>：使用相对定位属性使父级元素成为参照元素，默认以浏览器界面为基准</p><p><strong>固定定位</strong>：<code>fixed</code></p><p><strong>作用</strong>：将元素固定在页面的指定位置，不会随着滚动条的移动而改变位置</p><p><strong>注意</strong>：以上定位都可以使用top，left，right，bottom来进行移动</p><p><strong>z-index</strong>：此属性是用来声明元素的显示级别的</p><h3 id="模拟百度首页"><a href="#模拟百度首页" class="headerlink" title="模拟百度首页"></a>模拟百度首页</h3><p>模拟百度首页：</p><ol><li><p>使用css+div进行页面的布局</p><p>css代码一般使用外联的方式进行开发</p></li><li><p>使用html进行每一个块中的内容填充</p></li></ol><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zh-CN<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>百度首页模拟<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 引入外部声明的css文件 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>baidu01.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 引入网页标题图片 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>shortcut icon<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/favicon.ico<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 声明头部分 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 声明导航栏 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>header_nav<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>新闻<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>hao123<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>地图<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>视频<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>贴吧<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>学术<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>设置<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 声明主体 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>main<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 引入百度logo --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img_logo<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/bd_logo.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>270px<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>129px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 声明搜索框和按钮 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.baidu.com/s<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wd<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>百度一下<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 声明底部 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><pre class="language-css" data-language="css"><code class="language-css"><span class="token comment">/* 设置页面的基础样式 */</span>    <span class="token selector">*</span><span class="token punctuation">&#123;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token comment">/* 设置header头部分的大小 */</span>    <span class="token selector">#header</span><span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 45px<span class="token punctuation">;</span>        <span class="token comment">/* background-color: orange; */</span>    <span class="token punctuation">&#125;</span><span class="token comment">/* 设置导航栏样式 */</span>    <span class="token selector">#header_nav</span><span class="token punctuation">&#123;</span>        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>        <span class="token property">right</span><span class="token punctuation">:</span> 92px<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> 26px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#header_nav li</span><span class="token punctuation">&#123;</span>        <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>        <span class="token property">list-style-type</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span>        <span class="token property">margin-left</span><span class="token punctuation">:</span> 24px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#header_nav li a</span><span class="token punctuation">&#123;</span>        <span class="token property">color</span><span class="token punctuation">:</span> #333<span class="token punctuation">;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 13px<span class="token punctuation">;</span>        <span class="token property">font-weight</span><span class="token punctuation">:</span> 700<span class="token punctuation">;</span>        <span class="token property">line-height</span><span class="token punctuation">:</span> 24px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token comment">/* 设置main主体部分的大小 */</span>    <span class="token selector">#main</span><span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 384px<span class="token punctuation">;</span>        <span class="token comment">/* background-color: blueviolet; */</span>        <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#img_logo</span><span class="token punctuation">&#123;</span>        <span class="token property">margin-top</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>        <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 21px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/* 设置搜索框样式 */</span>    <span class="token selector">input[type=text]</span><span class="token punctuation">&#123;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 31px<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 539px<span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span> solid 1px #4992FF<span class="token punctuation">;</span>        <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>./img/inp.png<span class="token punctuation">)</span></span><span class="token punctuation">;</span>        <span class="token property">background-repeat</span><span class="token punctuation">:</span> no-repeat<span class="token punctuation">;</span>        <span class="token property">background-position-x</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>        <span class="token property">background-position-y</span><span class="token punctuation">:</span>-2px <span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">input[type=submit]</span><span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 34px<span class="token punctuation">;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> #2d78f4<span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span> solid #2d78f4<span class="token punctuation">;</span>        <span class="token property">letter-spacing</span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span>        <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>        <span class="token property">right</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span><span class="token comment">/* 设置footer底部部分的大小 */</span>    <span class="token selector">#footer</span><span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 206px<span class="token punctuation">;</span>        <span class="token comment">/* background-color: #4791FF; */</span>    <span class="token punctuation">&#125;</span><span class="token comment">/* 使用伪类给标签添加样式 */</span><span class="token selector">#header_nav li a:hover</span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><h2 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h2><h3 id="js的声明方式"><a href="#js的声明方式" class="headerlink" title="js的声明方式"></a>js的声明方式</h3><ol><li><p><strong>在head标签中使用script标签进行js代码域的声明</strong></p><p><strong>作用</strong>：声明js代码域</p><p><strong>特点</strong>：js的代码只会作用于当前网页</p></li><li><p><strong>在head标签中使用script标签引入外部声明好的js文件</strong></p><p><strong>作用</strong>：引入外部声明好的js文件</p><p><strong>特点</strong>：实现js的重复使用，避免代码的冗余</p></li></ol><p><strong>注意</strong>：因为js在HTML文档中是一门单独的语言，可以声明在文档中的任意位置，一般情况下声明在head中。</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>js的声明和引入<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 声明js代码域 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"这是我的第一个js"</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 引入外部声明好的js文件 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>my.js<span class="token punctuation">"</span></span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="js的变量"><a href="#js的变量" class="headerlink" title="js的变量"></a>js的变量</h3><h4 id="变量声明"><a href="#变量声明" class="headerlink" title="变量声明"></a>变量声明</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// js变量学习</span>    <span class="token keyword">var</span> a<span class="token operator">=</span><span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> a1<span class="token operator">=</span><span class="token number">3.1415</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> a2<span class="token operator">=</span><span class="token string">"js"</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> a3<span class="token operator">=</span><span class="token string">'k'</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> a4<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> a5<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> a<span class="token operator">=</span><span class="token string">"js学习"</span>    <span class="token function">alert</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p><strong>注意</strong>：</p><ol><li>js中的所有<strong>变量声明</strong>只有<code>var</code>关键字</li><li>js的<strong>变量名</strong>是严格区分大小写的</li><li>js的<strong>字符串</strong>可以使用<strong>双引号</strong>或<strong>单引号</strong>，没有字符和字符串的区分</li><li>js中可以声明同名变量，不会报错，后面的会将前面的声明覆盖</li></ol><h4 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h4><p>使用关键字<code>typeof</code>判断数据类型</p><p><strong>数据类型</strong>：</p><pre class="language-markup" data-language="markup"><code class="language-markup">var b=456;var b1=1.23;alert(typeof b1);</code></pre><p><code>number</code>：数字类型</p><pre class="language-markup" data-language="markup"><code class="language-markup">var b="今天天气真好，适合学习";var b1='l';alert(typeof b1);</code></pre><p><code>string</code>：字符串类型</p><pre class="language-markup" data-language="markup"><code class="language-markup">var b=true;var b1=false;alert(typeof b1);</code></pre><p><code>boolean</code>：布尔类型</p><pre class="language-markup" data-language="markup"><code class="language-markup">var b=new Date();alert(typeof b);</code></pre><p><code>object</code>：项目类型</p><pre class="language-markup" data-language="markup"><code class="language-markup">var balert(b);alert(c);</code></pre><p><code>null</code>：空对象值</p><pre class="language-markup" data-language="markup"><code class="language-markup">var b;alert(typeof b);</code></pre><p><code>undefined</code>：未定义类型</p><p><strong>注意</strong>：声明变量时要尽可能的赋值，否则可能会产生错误。</p><h3 id="js的运算符"><a href="#js的运算符" class="headerlink" title="js的运算符"></a>js的运算符</h3><h4 id="算术运算"><a href="#算术运算" class="headerlink" title="算术运算"></a>算术运算</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">var</span> a<span class="token operator">=</span><span class="token string">"123a"</span><span class="token punctuation">;</span><span class="token keyword">var</span> b<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token keyword">var</span> c<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span><span class="token keyword">var</span> d<span class="token operator">=</span><span class="token string">"1"</span><span class="token function">alert</span><span class="token punctuation">(</span>c<span class="token operator">+</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">alert</span><span class="token punctuation">(</span>a<span class="token operator">-</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p><strong>算术运算符</strong>：<code>+</code>，<code>-</code>，<code>*</code>，<code>/</code>，<code>%</code></p><p>number类型和number类型的</p><p>number类型和boolean类型(true–1，false–0)</p><p>number类型和string类型( <code>*</code>，<code>/</code>，<code>%</code>，<code>-</code> )</p><p>string类型数字和boolean类型( <code>*</code>，<code>/</code>，<code>%</code>，<code>-</code> )</p><p><strong>注意</strong>：</p><ol><li><p>在字符串中，<code>+</code>符合代表的是字符串的连接符，不会参与运算，也就是出现了string变量，<code>+</code>就变成了连接符</p></li><li><p>在算术运算中如果两边的数据类型不是<code>number</code>的话，会使用<code>Number()</code>强转换后再进行运算</p></li></ol><h4 id="逻辑运算"><a href="#逻辑运算" class="headerlink" title="逻辑运算"></a>逻辑运算</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">var</span> a<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span><span class="token keyword">var</span> b<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span><span class="token function">alert</span><span class="token punctuation">(</span>a<span class="token operator">&amp;</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token operator">&amp;</span>b<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"haha"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token operator">!</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p><strong>逻辑运算符</strong>：<code>!</code>，<code>&amp;</code>，<code>&amp;&amp;</code>，<code>|</code>，<code>||</code>(与java中一致)</p><p><code>&amp; |</code>返回的是0或1，<code>&amp;&amp; ||</code>返回的是<code>true</code>或<code>false</code>，不会影响正常逻辑判断</p><h4 id="关系运算"><a href="#关系运算" class="headerlink" title="关系运算"></a>关系运算</h4><p><strong>关系运算符</strong>：<code>!=</code>，<code>&gt;=</code>，<code>&lt;=</code>，<code>&gt;</code>，<code>&lt;</code></p><p>返回值都为<code>true</code>或<code>false</code></p><h4 id="自增运算"><a href="#自增运算" class="headerlink" title="自增运算"></a>自增运算</h4><p><strong>自增运算符</strong>：<code>++</code>，<code>--</code>，<code>+=</code>，<code>-=</code></p><p><code>++a</code>和<code>a++</code>的区别是先赋值与后赋值。</p><h4 id="js的-和-判断"><a href="#js的-和-判断" class="headerlink" title="js的&#x3D;&#x3D;和&#x3D;&#x3D;&#x3D;判断"></a>js的&#x3D;&#x3D;和&#x3D;&#x3D;&#x3D;判断</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 声明变量</span>    <span class="token keyword">var</span> a<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> a1<span class="token operator">=</span><span class="token string">"1"</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> a2<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> a3<span class="token operator">=</span><span class="token string">"true"</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> a4<span class="token operator">=</span><span class="token string">"a"</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> a5<span class="token operator">=</span><span class="token string">"a"</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> str<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">"123"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> str2<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">"123"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">alert</span><span class="token punctuation">(</span>a<span class="token operator">==</span>a1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span>    <span class="token function">alert</span><span class="token punctuation">(</span>a<span class="token operator">==</span>a2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span>    <span class="token function">alert</span><span class="token punctuation">(</span>a<span class="token operator">==</span>a3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//false</span>    <span class="token function">alert</span><span class="token punctuation">(</span>a1<span class="token operator">==</span>a2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span>    <span class="token function">alert</span><span class="token punctuation">(</span>a1<span class="token operator">==</span>a3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//false</span>    <span class="token function">alert</span><span class="token punctuation">(</span>a2<span class="token operator">==</span>a3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//false</span>    <span class="token function">alert</span><span class="token punctuation">(</span>a4<span class="token operator">==</span>a5<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span>    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token operator">==</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//true</span>    <span class="token function">alert</span><span class="token punctuation">(</span>str2<span class="token operator">==</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//false</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p><strong>等值运算符</strong>：<code>==</code></p><p><strong>判断逻辑</strong>：先判断类型，类型一致，则直接比较，类型不一致，则先使用<code>number()</code>进行强转再比较内容，内容相等为<code>true</code></p><p><strong>注意</strong>：</p><p><code>object</code>t和<code>object</code>比的是内存地址，内存地址相同才为<code>true</code></p><p><code>null == undefined</code>返回<code>true</code></p><p><code>null === undefined</code>返回<code>false</code></p><p><strong>等同运算符</strong>：<code>===</code></p><p><strong>判断逻辑</strong>：先判断类型，类型一致则比较内容，内容一致才为<code>true</code></p><h3 id="js的逻辑结构"><a href="#js的逻辑结构" class="headerlink" title="js的逻辑结构"></a>js的逻辑结构</h3><h4 id="判断结构"><a href="#判断结构" class="headerlink" title="判断结构"></a>判断结构</h4><h5 id="if结构"><a href="#if结构" class="headerlink" title="if结构"></a>if结构</h5><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">var</span> a<span class="token operator">=</span><span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> b<span class="token operator">=</span><span class="token number">45</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token operator">></span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">alert</span><span class="token punctuation">(</span>a<span class="token operator">+</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p><strong>单分支结构</strong>：<br><code>if(判断条件)&#123;执行体&#125;</code></p><p><strong>双分支结构</strong>：<br><code>if(判断条件)&#123;执行体&#125;else&#123;执行体&#125;</code></p><p><strong>多分支结构</strong>：<br><code>if(判断条件)&#123;执行体&#125;else if&#123;执行体&#125;</code></p><h5 id="switch结构"><a href="#switch结构" class="headerlink" title="switch结构"></a>switch结构</h5><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">var</span> a<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">case</span> <span class="token string">"1"</span><span class="token operator">:</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"第一项选择"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">"2"</span><span class="token operator">:</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"第二项选择"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">default</span><span class="token operator">:</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"没有对应选择"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>注意：判断的变量可以是number类型也可以是switch类型，switch默认的判断运算为等同<code>===</code></p><h4 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h4><h5 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h5><pre class="language-markup" data-language="markup"><code class="language-markup">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">3</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"好热:"</span><span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>//js九九乘法表    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span><span class="token number">9</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>i<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token string">"*"</span><span class="token operator">+</span>j<span class="token operator">+</span><span class="token string">"="</span><span class="token operator">+</span>i<span class="token operator">*</span>j<span class="token operator">+</span><span class="token string">"&amp;nbsp&amp;nbsp&amp;nbsp&amp;nbsp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"&lt;br />"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>for(变量；条件；迭代条件){循环体}</p><h5 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h5><pre class="language-markup" data-language="markup"><code class="language-markup"></code></pre><p>while(循环条件){循环体}</p><h5 id="do-while循环"><a href="#do-while循环" class="headerlink" title="do while循环"></a>do while循环</h5><pre class="language-markup" data-language="markup"><code class="language-markup"></code></pre><p>do{循环体}while{循环条件}</p><h3 id="js数组"><a href="#js数组" class="headerlink" title="js数组"></a>js数组</h3><h4 id="js数组的声明"><a href="#js数组的声明" class="headerlink" title="js数组的声明"></a>js数组的声明</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">var</span> arr1<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//第一种声明方式</span>    arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"abc"</span>    <span class="token function">alert</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> arr2<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//第二种声明方式</span>    <span class="token function">alert</span><span class="token punctuation">(</span>arr2<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> arr3<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//第三种声明方式</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>var arr&#x3D;new Array();  声明一个空数组对象</p><p>var arr&#x3D;new Array(); 声明一个指定长度的数组</p><p>var arr&#x3D;[元素]; 声明数组（最常用）</p><p><strong>注意</strong>：js的数组声明不用指定长度，js的数组长度是不固定的，会随着元素的数量改变而改变</p><h4 id="数组的赋值和取值"><a href="#数组的赋值和取值" class="headerlink" title="数组的赋值和取值"></a>数组的赋值和取值</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">var</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>    arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"abc"</span><span class="token punctuation">;</span>    arr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>    arr<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    arr<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"哈哈"</span>    <span class="token function">alert</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">alert</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p><strong>格式</strong>：数组名[角标]&#x3D;值，角标可以是任意的正整数或者是0</p><p><strong>注意</strong>：js数组可以存储任意类型的数据</p><p><strong>数组的取出</strong>：数组名[角标]，返回当前角标对应存储的值</p><p><strong>注意</strong>：如果角标不存在，返回<code>undefine</code></p><h4 id="数组的length属性"><a href="#数组的length属性" class="headerlink" title="数组的length属性"></a>数组的length属性</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">var</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token function">alert</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>    arr<span class="token punctuation">.</span>length<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">;</span>    <span class="token function">alert</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>    arr<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"abc"</span><span class="token punctuation">;</span>    <span class="token function">alert</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p><strong>作用</strong>：</p><ol><li>数组名.length 返回当前数组的长度</li><li>数组名.length&#x3D;新的值 动态改变数组长度</li></ol><p><strong>注意</strong>：如果length大于原有长度，则使用逗号填充，length小于原有长度则删除后面的数据</p><h4 id="数组的遍历"><a href="#数组的遍历" class="headerlink" title="数组的遍历"></a>数组的遍历</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">var</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"bnj"</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">"a"</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token function">alert</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//普通for循环：</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">alert</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//for-in：</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token keyword">in</span> arr<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">alert</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取角标</span>    <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h4 id="一个计算器"><a href="#一个计算器" class="headerlink" title="一个计算器"></a>一个计算器</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>计算器<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token comment">/* 设置div样式 */</span>        <span class="token selector">#showdiv</span><span class="token punctuation">&#123;</span>            <span class="token property">border</span><span class="token punctuation">:</span> solid 1px<span class="token punctuation">;</span>            <span class="token property">border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token comment">/* 设置边框角度 */</span>            <span class="token property">width</span><span class="token punctuation">:</span> 320px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>            <span class="token property">margin-top</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> floralwhite<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* 设置输入样式 */</span>        <span class="token selector">input[type=text]</span><span class="token punctuation">&#123;</span>            <span class="token property">margin-top</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 290px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>            <span class="token property">font-size</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* 设置按钮样式 */</span>        <span class="token selector">input[type=button]</span><span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span>            <span class="token property">margin-top</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>            <span class="token property">margin-left</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>            <span class="token property">margin-right</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>            <span class="token property">font-size</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>            <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>            <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"萝莉体第二版"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 声明js代码域 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">// 声明函数</span>        <span class="token keyword">function</span> <span class="token function">text</span><span class="token punctuation">(</span><span class="token parameter">btn</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">//获取button按钮对象value里的值</span>            <span class="token keyword">var</span> num<span class="token operator">=</span>btn<span class="token punctuation">.</span>value<span class="token punctuation">;</span>            <span class="token comment">// 将按钮的值赋值给input输入框</span>                        <span class="token keyword">switch</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">case</span> <span class="token string">"="</span> <span class="token operator">:</span>                document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"inp"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token operator">=</span><span class="token function">eval</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"inp"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token keyword">case</span> <span class="token string">"c"</span> <span class="token operator">:</span>                document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"inp"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token keyword">default</span><span class="token operator">:</span>                document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"inp"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"inp"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token operator">+</span>num<span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showdiv<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>inp<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">text</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- onclink使button单击时执行js代码 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">text</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">text</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">text</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">text</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>6<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">text</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>7<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">text</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>8<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">text</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>9<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">text</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>+<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">text</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">text</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>*<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">text</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">text</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">text</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>c<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">text</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>=<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">text</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="js数组的常用操作"><a href="#js数组的常用操作" class="headerlink" title="js数组的常用操作"></a>js数组的常用操作</h3><h4 id="concat"><a href="#concat" class="headerlink" title="concat()"></a>concat()</h4><pre class="language-markup" data-language="markup"><code class="language-markup"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 声明数组</span>    <span class="token keyword">var</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"abc"</span><span class="token punctuation">,</span><span class="token string">"张三"</span><span class="token punctuation">,</span><span class="token string">"12"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment">// 数组的操作</span>    <span class="token keyword">var</span> b<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"今天天气不错"</span><span class="token punctuation">,</span><span class="token string">"适合学习"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> c<span class="token operator">=</span><span class="token string">"js"</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> d<span class="token operator">=</span>arr<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span>c<span class="token punctuation">,</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//arr数组和b,c,c合并</span>    <span class="token function">alert</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">alert</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p><strong>作用</strong>：数组的合并</p><h4 id="join"><a href="#join" class="headerlink" title="join()"></a>join()</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">var</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"abc"</span><span class="token punctuation">,</span><span class="token string">"张三"</span><span class="token punctuation">,</span><span class="token string">"12"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> b<span class="token operator">=</span>arr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">alert</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">alert</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p><strong>作用</strong>：数组指定间隔符</p><h4 id="pop"><a href="#pop" class="headerlink" title="pop()"></a>pop()</h4><pre class="language-markup" data-language="markup"><code class="language-markup">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">      <span class="token keyword">var</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"abc"</span><span class="token punctuation">,</span><span class="token string">"张三"</span><span class="token punctuation">,</span><span class="token string">"12"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">var</span> ele<span class="token operator">=</span>arr<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">alert</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">alert</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p><strong>作用</strong>：数组移除最后一个元素并返回</p><h4 id="push"><a href="#push" class="headerlink" title="push()"></a>push()</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">var</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"abc"</span><span class="token punctuation">,</span><span class="token string">"张三"</span><span class="token punctuation">,</span><span class="token string">"12"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> ln<span class="token operator">=</span>arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">"lol"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> ln2<span class="token operator">=</span>arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"66"</span><span class="token punctuation">,</span><span class="token number">77</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">alert</span><span class="token punctuation">(</span>ln2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">alert</span><span class="token punctuation">(</span>ln<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">alert</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>作用：数组的追加，返回数组的长度</p><p><strong>注意</strong>：追加的元素可以是一个数组，但是会作为一个新的角标值存在。</p><h4 id="arr-shift"><a href="#arr-shift" class="headerlink" title="arr.shift()"></a>arr.shift()</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">var</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"abc"</span><span class="token punctuation">,</span><span class="token string">"张三"</span><span class="token punctuation">,</span><span class="token string">"12"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> ele<span class="token operator">=</span>arr<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">alert</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">alert</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p><strong>作用</strong>：移除数组第一个元素，并返回值</p><h4 id="arr-unshift"><a href="#arr-unshift" class="headerlink" title="arr.unshift()"></a>arr.unshift()</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">var</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"abc"</span><span class="token punctuation">,</span><span class="token string">"张三"</span><span class="token punctuation">,</span><span class="token string">"12"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> a<span class="token operator">=</span>arr<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token string">"又是周五了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">alert</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">alert</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p><strong>作用</strong>：数组在开始位置插入元素</p><h4 id="splice"><a href="#splice" class="headerlink" title="splice()"></a>splice()</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">var</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"abc"</span><span class="token punctuation">,</span><span class="token string">"张三"</span><span class="token punctuation">,</span><span class="token string">"12"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> arr2<span class="token operator">=</span>arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//从第一个开始删，删三个，删掉后加a</span>    <span class="token function">alert</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">alert</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p><strong>作用</strong>：从一个数组中移除一个或多个元素，如果必要，在所移除的元素的位置上插入新元素，返回所移除的元素。</p><h3 id="js的函数学习"><a href="#js的函数学习" class="headerlink" title="js的函数学习"></a>js的函数学习</h3><p><strong>函数的作用</strong>：代码块的封装，减少代码的冗余</p><h4 id="函数的声明"><a href="#函数的声明" class="headerlink" title="函数的声明"></a>函数的声明</h4><p><strong>方式一</strong>：<code>function 函数名(形参名1，形参名2……)&#123;执行体&#125;</code></p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 声明函数</span>    <span class="token keyword">function</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token parameter">a1<span class="token punctuation">,</span>a2</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"函数的声明一"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 调用声明的函数</span>    <span class="token function">test1</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p><strong>作用</strong>：声明了一个带有两个形参的test1函数</p><p><strong>方式二</strong>：<code>var 函数名= new Function(&quot;形参1&quot;,&quot;形参2&quot;……，&quot;函数执行体&quot;);</code></p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">var</span> test2<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token punctuation">(</span><span class="token string">"a1"</span><span class="token punctuation">,</span><span class="token string">"a2"</span><span class="token punctuation">,</span><span class="token string">"alert('函数声明二')"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">test2</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">alert</span><span class="token punctuation">(</span>test2<span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p><strong>注意</strong>：该声明方法使用的思想是万事万物皆对象，test2只是一个变量名，但是指向了function函数。</p><p>变量名加上小括号就是执行函数的标志。</p><p>a1加<code>&quot;&quot;</code>是作为new function的实参传进去</p><p><strong>去掉双引号</strong>是把a1变量的值传进去</p><p><strong>方式三</strong>：var 变量名&#x3D;function(形参名1，形参名2……){函数执行体}</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">var</span> <span class="token function-variable function">text3</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">a1<span class="token punctuation">,</span>a2</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"我是函数声明三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h4 id="函数的参数"><a href="#函数的参数" class="headerlink" title="函数的参数"></a>函数的参数</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">function</span> <span class="token function">testParam</span><span class="token punctuation">(</span><span class="token parameter">a1<span class="token punctuation">,</span>a2</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">alert</span><span class="token punctuation">(</span>a1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"函数的形参学习"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">testParam</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p><strong>注意</strong>：</p><p>js中的函数在调用时，形参可以不赋值，不会报错</p><p>js中的函数在调用时，形参可以不全部赋值，不会报错，但是实参会依次进行赋值</p><h4 id="函数的返回值"><a href="#函数的返回值" class="headerlink" title="函数的返回值"></a>函数的返回值</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">var</span> <span class="token function-variable function">testReturn</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"函数的返回值学习"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"js"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token function">testReturn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p><strong>注意</strong>：在js中如果函数有返回值，执行<code>alert(函数名())</code>就会打印函数和函数返回值，没有返回值则调用undefined</p><p>直接调用函数不会打印返回值</p><h4 id="函数的执行符"><a href="#函数的执行符" class="headerlink" title="函数的执行符"></a>函数的执行符</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">var</span> <span class="token function-variable function">text1</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"函数的执行符学习"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"js"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token function">text1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>注意：在js中函数的执行符是<code>()</code></p><p>没有小括号则函数名其实就是一个变量，加上小括号函数则会被执行</p><h4 id="函数作为实参传递"><a href="#函数作为实参传递" class="headerlink" title="函数作为实参传递"></a>函数作为实参传递</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">function</span> <span class="token function">testobj</span><span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">var</span> <span class="token function-variable function">testParam</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"我是函数参数"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">testobj</span><span class="token punctuation">(</span>testParam<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">testobj</span><span class="token punctuation">(</span>testParam<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//报错代码</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>在js中，函数是可以作为实参传递的</p><p><strong>在开发中经常用的传递方式</strong>：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">function</span> <span class="token function">textobj2</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//testobj2函数在被调用的时候，实参必须是个函数对象</span>        <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">textobj2</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"开发"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>此处的<code>fn()</code>是执行了<code>function()&#123;alert(&quot;开发&quot;);&#125;</code>这个函数</p><h3 id="js中的类和对象"><a href="#js中的类和对象" class="headerlink" title="js中的类和对象"></a>js中的类和对象</h3><h4 id="自定义类"><a href="#自定义类" class="headerlink" title="自定义类"></a>自定义类</h4><p><strong>作用</strong>：用于存储代码中公共的部分</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">function</span> <span class="token function">person</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span>age</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">=</span>name<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token operator">=</span>age<span class="token punctuation">;</span>        <span class="token comment">// this.test=function(a)&#123;</span>        <span class="token comment">//     alert(a);</span>        <span class="token comment">// &#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">User</span><span class="token punctuation">(</span><span class="token parameter">uname<span class="token punctuation">,</span>pwd</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>uname<span class="token operator">=</span>uname<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>pwd<span class="token operator">=</span>pwd<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 使用prototype</span>    person<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">test</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"嘿嘿"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    person<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>user<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">User</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">testU</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"我是user"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token comment">// 使用类</span>    <span class="token keyword">var</span> p1<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">person</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> p2<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">person</span><span class="token punctuation">(</span><span class="token string">"李四"</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token function">alert</span><span class="token punctuation">(</span>p1<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">alert</span><span class="token punctuation">(</span>p1<span class="token punctuation">.</span>test<span class="token operator">===</span>p2<span class="token punctuation">.</span>test<span class="token punctuation">)</span><span class="token punctuation">;</span>    p1<span class="token punctuation">.</span>user<span class="token punctuation">.</span><span class="token function">testU</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//一个prototype链条</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p><strong>类的声明</strong>：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">类名</span><span class="token punctuation">(</span><span class="token parameter">形参<span class="token number">1</span>，形参<span class="token number">2</span>……</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>属性名<span class="token number">1</span><span class="token operator">=</span>形参<span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>属性名<span class="token number">2</span><span class="token operator">=</span>形参<span class="token number">2</span><span class="token punctuation">;</span>……<span class="token keyword">this</span><span class="token punctuation">.</span>属性名<span class="token operator">=</span>fn<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p><strong>类的使用</strong>：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> 对象名<span class="token operator">=</span><span class="token keyword">new</span> <span class="token function">类名</span><span class="token punctuation">(</span>实参<span class="token number">1</span><span class="token punctuation">,</span>实参<span class="token number">2</span>……<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><strong>注意</strong>：js中类的内容只是对象的公共部分，每个对象还可以自定义的进行扩充</p><p><strong>类的继承</strong>：<code>prototype</code>关键字</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">person<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">test</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"嘿嘿"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code></pre><p>通过<code>prototype</code>关键字实现了不同对象之间的数据共享</p><p><strong>作用1</strong>：实现某个类所有子对象的方法区对象的共享，节省内存</p><h4 id="自定义对象"><a href="#自定义对象" class="headerlink" title="自定义对象"></a>自定义对象</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 创建自定义对象</span>    <span class="token keyword">var</span> obj<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    obj<span class="token punctuation">.</span>name<span class="token operator">=</span><span class="token string">"张三"</span><span class="token punctuation">;</span>    obj<span class="token punctuation">.</span>age<span class="token operator">=</span><span class="token number">23</span><span class="token punctuation">;</span>    obj<span class="token punctuation">.</span><span class="token function-variable function">test</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"我是obj"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p><strong>作用</strong>：用来存储整体数据</p><p><strong>原因</strong>：很多时候我们没有办法预先知道一个对象有哪些属性，所以只能临时的创建一个对象来自定义属性存储数据，来保证数据的完整性</p><p><strong>应用</strong>：Ajax会使用</p><p><strong>使用</strong>：</p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> 对象名<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">OBject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>对象名<span class="token punctuation">,</span>属性名<span class="token number">1</span><span class="token operator">=</span>属性值<span class="token number">1</span><span class="token punctuation">;</span>对象名<span class="token punctuation">,</span>属性名<span class="token number">2</span><span class="token operator">=</span>属性值<span class="token number">2</span><span class="token punctuation">;</span>对象名<span class="token punctuation">,</span>属性名<span class="token number">3</span><span class="token operator">=</span>属性值<span class="token number">3</span><span class="token punctuation">;</span>……    <span class="token keyword">var</span> 对象名<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>对象名<span class="token punctuation">,</span>属性名<span class="token number">1</span><span class="token operator">=</span>属性值<span class="token number">1</span><span class="token punctuation">;</span>对象名<span class="token punctuation">,</span>属性名<span class="token number">2</span><span class="token operator">=</span>属性值<span class="token number">2</span><span class="token punctuation">;</span>对象名<span class="token punctuation">,</span>属性名<span class="token number">3</span><span class="token operator">=</span>属性值<span class="token number">3</span><span class="token punctuation">;</span>……</code></pre><p>一般用来存储数据，不会在自定义对象中存储函数对象</p><p>js中的对象属性和内容是可以自定义地扩充的，不是依赖于类的声明的，类只是对象公共部分的一种声明，是为了节省代码的冗余的。</p><h3 id="js的事件机制"><a href="#js的事件机制" class="headerlink" title="js的事件机制"></a>js的事件机制</h3><p><strong>什么是事件</strong>：当我们的行为动作触发了某一类事物引起另外一类事物的执行，叫事件</p><p><strong>js事件机制</strong>：</p><p>​<strong>解释</strong>：当我们的行为动作满足了一定的条件后，会触发某类事件的执行。</p><p>​<strong>作用</strong>：主要是结合js的函数来使用</p><p>​<strong>内容</strong>：</p><pre><code>      1. 单双击事件     1. 单击：onclick     2. 双击：ondblclick      2. 鼠标事件     1. 鼠标悬停：onmouseover     2. 鼠标移动：onmousemove     3. 鼠标移出：onmouseout      3. 键盘事件     1. 键盘下压：onkeydown     2. 键盘下压：onkeyup      4. 焦点事件     1. 获取焦点：onfocus     2. 失去焦点：onblur      5. 页面加载事件     1. 页面加载：onload</code></pre><p><strong>注意</strong>：同一个html元素可以添加多个不同的事件，一个事件可以监听多个函数的执行，事件之间用<code>;</code>间隔</p><p><strong>第一种方式</strong>：在HTML上直接使用事件属性进行添加，属性值为所监听执行的函数（js事件只在当前页面有效）</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">// 单击事件</span>        <span class="token keyword">function</span> <span class="token function">testOnclick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"我是单击"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 双击事件</span>        <span class="token keyword">function</span> <span class="token function">testOndblclick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"我是双击"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 鼠标事件</span>        <span class="token keyword">function</span> <span class="token function">testOnmouseover</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"我是鼠标悬停事件"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">function</span> <span class="token function">testOnmousemove</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"我被移动了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">function</span> <span class="token function">testOnmouseout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"我被移出了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 键盘事件</span>        <span class="token keyword">function</span> <span class="token function">testOnkeyup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"我是键盘弹起事件"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">function</span> <span class="token function">testOnkeydp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"我是键盘下压事件"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 焦点事件</span>        <span class="token keyword">function</span> <span class="token function">testOnfocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"我是获取焦点事件"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">function</span> <span class="token function">testOnblur</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"我是失去焦点事件"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 页面加载</span>        <span class="token keyword">function</span> <span class="token function">testOnload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"我是页面加载事件"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 测试</span>        <span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"测试一个事件的多个函数执行"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>            </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">#showdiv</span> <span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span> solid 1px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>测试单击<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testOnclick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>测试双击<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">ondblclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testOndblclick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 同一个html可以添加多个事件 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showdiv<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onmouseover</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testOnmouseover</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span> <span class="token special-attr"><span class="token attr-name">onmousemove</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testOnmousemove</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span> <span class="token special-attr"><span class="token attr-name">onmouseout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testOnmouseout</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    键盘事件学习: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    键盘弹起事件: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onkeyup</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testOnkeyup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    键盘下压事件: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onkeydown</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testOnkeydp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>    焦点事件学习: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    获取焦点: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onfocus</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testOnfocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    失去焦点: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onblur</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testOnblur</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token function">testOnload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h4 id="事件进阶学习"><a href="#事件进阶学习" class="headerlink" title="事件进阶学习"></a>事件进阶学习</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">// 值改变事件</span>        <span class="token keyword">function</span> <span class="token function">testOnchange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"我被改变了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 单击事件</span>        <span class="token keyword">function</span> <span class="token function">testOnclick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"今天天气真好,不冷不热,贼适合学习"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 双击事件</span>        <span class="token keyword">function</span> <span class="token function">testOndblclick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"老师说的对"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 事件的阻断</span>        <span class="token keyword">function</span> <span class="token function">testA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"事件的阻断"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">//false则不提交</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 超链接调用js函数</span>        <span class="token keyword">function</span> <span class="token function">testHerf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"我是js函数"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    值改变事件: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onchange</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testOnchange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>北京<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>上海<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>广州<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    事件的冲突: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>事件的冲突<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testOnclick</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span> <span class="token special-attr"><span class="token attr-name">ondblclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testOndblclick</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>    事件的阻断: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.baidu.com<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token keyword">return</span> <span class="token function">testA</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>百度一下<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    超链接调用js函数: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:testHerf()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>调用js函数<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><ol><li><p>给时候的HTML标签天加事件</p><p>onchange – select下拉框</p><p>onload – body标签</p><p>单双击 – 用户会进行点击动作的HTML元素</p><p>鼠标事件 – 用户会进行鼠标移动操作的</p><p>键盘事件 – 用户会进行键盘操作的HTML元素</p></li><li><p>给HTML元素添加多个事件时，注意事件之间的冲突</p><p>例子：单击和双击</p><p>当事件的触发条件包含相同部分的时候，会产生事件之间的冲突 </p></li><li><p>事件的阻断</p><p>当世界所监听的函数将返回值返回给事件时：</p><p>​false：则会阻断当前事件所在的HTML标签功能</p><p>​true：则继续执行当前事件所在的HTML标签功能</p></li><li><p>超链接调用js函数</p><p><code>&lt;a href=&quot;javascript:函数名()&quot;&gt;调用js函数&lt;/a&gt;</code></p></li></ol><h3 id="window对象"><a href="#window对象" class="headerlink" title="window对象"></a>window对象</h3><p><strong>BOM浏览器对象模型</strong>：是规范浏览器对js语言的支持(js调用浏览器本身的功能)</p><p>BOM的具体实现是window对象</p><h4 id="window对象使用学习："><a href="#window对象使用学习：" class="headerlink" title="window对象使用学习："></a>window对象使用学习：</h4><ol><li><p>window对象不用new，直接进行使用即可，类似Math的使用方式，window关键字可以省略不写，以下关键字全是window方法</p></li><li><p>框体方法</p><p>​<code>alert</code>：警告框，提示一个警告信息，没有返回值</p><p>​<code>comfirm</code>：确认框 ，提示用户选择一项操作(确定&#x2F;取消)</p><p>​点击确定返回true，点击取消返回false</p><p>​<code>prompt</code>：提示框，提示用户某个信息的输入</p><p>​点击确定返回当前用户输入数据，默认值为空</p><p>​点击取消返回null</p></li><li><p>定时和间隔执行方法</p></li></ol><p>​<code>setTimeout</code>：指定的时间后执行指定的函数</p><p>​参数1：函数对象</p><p>​参数2：时间，单位毫秒</p><p>​返回值：返回当前定时器的id</p><p>​<code>setInterval</code>：每间隔指定时间执行指定的函数</p><p>​参数1：函数对象</p><p>​参数2：时间，单位毫秒</p><p>​返回值：返回当前间隔器的id</p><p>​<code>clearTimeout</code>：用来停止指定的定时器</p><p>​参数：定时器的id</p><p>​<code>clearInterval</code>：用来停止指定的间隔器</p><p>​参数：间隔器的id</p><ol start="4"><li>子窗口方法</li></ol><p>​<code>window.open(&#39;子页面的资源(相对路径)&#39;,&#39;打开方式&#39;,&#39;配置&#39;)</code></p><p>​注意：关闭子页面的方法window.close(),但是此方法只能关闭open方法关闭的页面</p><ol start="5"><li><p>地址栏属性</p><p><code>location.href=&quot;新的资源路径(相对路径/URL)&quot;</code>：跳转页面</p><p><code>location.reload()</code>：重新加载页面资源</p></li><li><p>历史记录属性</p><p><code>history.forward()</code>： 页面资源前进，历史记录的前进</p><p><code>history.back()</code>： 页面资源后退，历史记录后退</p><p><code>history.go(index(0,1,2,3……))</code> ：跳转指定的历史记录资源</p></li><li><p>屏幕属性</p></li></ol><p>​<code>screen.width</code>：获取屏幕的宽度分辨率</p><p>​<code>screen.height</code>：获取屏幕的高度分辨率</p><ol start="8"><li><p>浏览器配置属性</p><p><code>navigator.userAgent</code>：获取浏览器配置属性</p></li></ol><p><strong>父页面</strong>：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">var</span> idi<span class="token punctuation">;</span>        <span class="token keyword">var</span> ids<span class="token punctuation">;</span>        <span class="token comment">// 框体方法学习</span>        <span class="token comment">// 警告框</span>        <span class="token keyword">function</span> <span class="token function">testAlert</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            window<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"我是警告框"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 确认框</span>        <span class="token keyword">function</span> <span class="token function">testConfirm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            window<span class="token punctuation">.</span><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">"你确定要删除嘛?"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 提示框</span>        <span class="token keyword">function</span> <span class="token function">testPrompt</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            window<span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token string">"请输入昵称:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 定时执行</span>        <span class="token keyword">function</span> <span class="token function">testSetTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            idi <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"我是定时执行"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 间隔执行</span>        <span class="token keyword">function</span> <span class="token function">testSetInterval</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            ids<span class="token operator">=</span>window<span class="token punctuation">.</span><span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"我是间隔执行"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 停止当前的定时方法</span>        <span class="token keyword">function</span> <span class="token function">testClearTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            window<span class="token punctuation">.</span><span class="token function">clearTimeout</span><span class="token punctuation">(</span>idi<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">function</span> <span class="token function">testClearInterval</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            window<span class="token punctuation">.</span><span class="token function">clearInterval</span><span class="token punctuation">(</span>ids<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 子页面方法</span>        <span class="token keyword">function</span> <span class="token function">testOpen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'son.html'</span><span class="token punctuation">,</span><span class="token string">'newwindow'</span><span class="token punctuation">,</span><span class="token string">'height=400,width=600'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 子页面调用父页面函数</span>        <span class="token keyword">function</span> <span class="token function">testFather</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"父页面"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>测试警告框<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testAlert</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>测试确认框<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testConfirm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>测试提示框<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testPrompt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>测试定时执行<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testSetTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>测试间隔执行<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testSetInterval</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>测试停止指定的定时器<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testClearTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>测试停止指定的间隔器<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testClearInterval</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>测试子页面<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testOpen</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p><strong>子页面</strong>：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>son页面<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">// 倒计时功能</span>        <span class="token keyword">function</span> <span class="token function">testTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            window<span class="token punctuation">.</span><span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> span<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"timeSpan"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                span<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span>span<span class="token punctuation">.</span>innerHTML<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>                <span class="token comment">// 关闭子页面</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>span<span class="token punctuation">.</span>innerHTML<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    window<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 子页面调用父页面函数</span>        <span class="token keyword">function</span> <span class="token function">testFa</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            window<span class="token punctuation">.</span>opener<span class="token punctuation">.</span><span class="token function">testFather</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token special-attr"><span class="token attr-name">onload</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>son页面<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>欢迎访问,<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>timeSpan<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span> <span class="token property">font-size</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>秒后页面关闭<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>调用父页面函数<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testFa</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p><strong>注意</strong>：新版本已经不能使用<code>window.opener</code>传递js了，因为这种方法不安全，会产生<code>Blocked a frame with origin</code>的错误</p><h3 id="document对象"><a href="#document对象" class="headerlink" title="document对象"></a>document对象</h3><p><strong>官方概念</strong>：每个载入浏览器的 HTML 文档都会成为 Document 对象。Document 对象使我们可以从脚本中对 HTML 页面中的所有元素进行访问。</p><p><strong>个人概念</strong>：浏览器对外提供的支持js的用来操作HTML文档的一个对象，此对象封存HTML文档的所有信息，供js解析执行</p><h4 id="使用document"><a href="#使用document" class="headerlink" title="使用document"></a>使用document</h4><h5 id="获取HTML元素对象"><a href="#获取HTML元素对象" class="headerlink" title="获取HTML元素对象"></a>获取HTML元素对象</h5><ol><li>直接获取方式</li></ol><p>​通过id</p><p>​通过name</p><p>​通过标签名</p><p>​通过class属性值</p><ol start="2"><li>间接获取方式</li></ol><p>​父子关系</p><p>​子父关系</p><p>​兄弟关系</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zh-CN<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>document对象学习<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">// document获取元素对象</span>        <span class="token comment">// 直接方式</span>        <span class="token comment">// id方式</span>        <span class="token keyword">function</span> <span class="token function">testGetEleById</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> inp<span class="token operator">=</span>window<span class="token punctuation">.</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"uname"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">alert</span><span class="token punctuation">(</span>inp<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// name方式</span>        <span class="token keyword">function</span> <span class="token function">testGetEleByName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> favs<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementsByName</span><span class="token punctuation">(</span><span class="token string">"fav"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">alert</span><span class="token punctuation">(</span>favs<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 标签名</span>        <span class="token keyword">function</span> <span class="token function">testGetEleByTagName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> inps<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">"input"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">alert</span><span class="token punctuation">(</span>inps<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// class属性</span>        <span class="token keyword">function</span> <span class="token function">testGetEleByclassName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> inps<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">"common"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">alert</span><span class="token punctuation">(</span>inps<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 间接获取方式</span>        <span class="token comment">// 父子关系学习</span>        <span class="token keyword">function</span> <span class="token function">testParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">// 获取父级元素</span>            <span class="token keyword">var</span> showdiv<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"showdiv"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 获取所有子元素对象数组</span>            <span class="token keyword">var</span> childs<span class="token operator">=</span>showdiv<span class="token punctuation">.</span>childNodes<span class="token punctuation">;</span>            <span class="token function">alert</span><span class="token punctuation">(</span>childs<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 子父关系学习</span>        <span class="token keyword">function</span> <span class="token function">testChild</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">// 获取子元素对象</span>            <span class="token keyword">var</span> inp<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"inp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> div<span class="token operator">=</span>inp<span class="token punctuation">.</span>parentNode<span class="token punctuation">;</span>            <span class="token function">alert</span><span class="token punctuation">(</span>div<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 兄弟关系</span>        <span class="token keyword">function</span> <span class="token function">testBrother</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> inp<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"inp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> preEle<span class="token operator">=</span> inp<span class="token punctuation">.</span>previousSibling<span class="token punctuation">;</span><span class="token comment">//弟获取兄</span>        <span class="token keyword">var</span> nextEle<span class="token operator">=</span>inp<span class="token punctuation">.</span>nextSibling<span class="token punctuation">;</span><span class="token comment">//兄获取弟</span>        <span class="token function">alert</span><span class="token punctuation">(</span>preEle<span class="token operator">+</span><span class="token string">":::"</span><span class="token operator">+</span>nextEle<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>            </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">.common</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>        <span class="token selector">#showdiv</span><span class="token punctuation">&#123;</span>            <span class="token property">border</span><span class="token punctuation">:</span> solid 2px orange<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>document对象的概念和获取元素对象学习<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>    直接获取方式学习: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>测试获取HTML元素id<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testGetEleById</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>测试获取HTML元素names<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testGetEleByName</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>测试获取HTML元素TagName<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testGetEleByTagName</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>测试获取HTML元素ClassName<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testGetEleByclassName</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>    用户名:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>uname<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>uname<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fav<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fav<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>common<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>唱歌    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fav<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fav<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>common<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>跳舞    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fav<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fav<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>睡觉    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fav<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fav<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>打游戏    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>    间接获取方式学习: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>测试父子关系<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>测试子父关系<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testChild</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>测试兄弟关系<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testBrother</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showdiv<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>inp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h4 id="js操作HTML元素的属性"><a href="#js操作HTML元素的属性" class="headerlink" title="js操作HTML元素的属性"></a>js操作HTML元素的属性</h4><p><strong>获取</strong>：</p><p><code>元素对象名，属性名</code>    返回当前属性的属性值—-固有</p><p><code>元素对象名，getArreibute(&quot;属性名&quot;);</code>返回自定义属性值—-自定义</p><p><strong>修改</strong>：</p><p><code>元素对象名，属性名=属性值</code>修改当前属性的属性值—-固有</p><p><code>元素对象名，getArreibute(&quot;属性名&quot;,&quot;属性值&quot;);</code> 修改自定义属性值—-自定义</p><p><strong>注意</strong>：</p><ol><li><p>尽量不要去修改元素的id值和name属性值</p></li><li><p>使用自定义方式获取固有属性内容，value的值获取的是默认值，不能够获取到实时的用户数据</p></li></ol><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zh-CN<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">function</span> <span class="token function">testField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">// 获取元素对象</span>           <span class="token keyword">var</span> inp<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"uname"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">//    获取元素属性值</span>        <span class="token function">alert</span><span class="token punctuation">(</span>inp<span class="token punctuation">.</span>type<span class="token operator">+</span><span class="token string">":"</span><span class="token operator">+</span>inp<span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">":"</span><span class="token operator">+</span>inp<span class="token punctuation">.</span>id<span class="token operator">+</span><span class="token string">":"</span><span class="token operator">+</span>inp<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 修改元素属性值</span>        <span class="token keyword">function</span> <span class="token function">testField2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">// 获取元素对象</span>            <span class="token keyword">var</span> inp<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"uname"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 修改元素属性</span>            inp<span class="token punctuation">.</span>value<span class="token operator">=</span><span class="token string">"哈哈"</span><span class="token punctuation">;</span>            inp<span class="token punctuation">.</span>type<span class="token operator">=</span><span class="token string">"button"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 声明函数--自定义属性</span>        <span class="token comment">// 获取</span>        <span class="token keyword">function</span> <span class="token function">testOwnField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">// 获取元素对象</span>            <span class="token keyword">var</span> inp<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"uname"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 获取自定义属性值</span>            <span class="token function">alert</span><span class="token punctuation">(</span>inp<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"abc"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 修改</span>        <span class="token keyword">function</span> <span class="token function">testOwnField2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">// 获取元素对象</span>            <span class="token keyword">var</span> inp<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"uname"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 修改自定义属性值</span>            inp<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"abc"</span><span class="token punctuation">,</span><span class="token string">"呵呵"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 使用自定义方式操作固有属性值</span>        <span class="token keyword">function</span> <span class="token function">testOper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">// 获取元素对象</span>            <span class="token keyword">var</span> inp<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"uname"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">alert</span><span class="token punctuation">(</span>inp<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"type"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 通过getAttribute()只能获取到html写死的内容</span>            <span class="token function">alert</span><span class="token punctuation">(</span>inp<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"value"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>js操作HTML的元素属性<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>测试获取元素属性--固有<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testField</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>测试修改元素属性--固有<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testField2</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>测试修改元素属性--自定义<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testOwnField</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>测试修改元素属性--自定义<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">tsestOwnField2</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>测试元素自定义操作固有属性<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testOper</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>    用户名: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>uname<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>uname<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">abc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>嘿嘿<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h4 id="js操作元素的内容"><a href="#js操作元素的内容" class="headerlink" title="js操作元素的内容"></a>js操作元素的内容</h4><p>获取：</p><p>元素对象名.innerHTML：返回当前元素对象的所有内容，包括HTML标签</p><p>元素对象名.innerText：返回当前元素对象的文本内容，不包括HTML标签</p><p>修改：</p><p>元素对象名.innerHTML&#x3D;”新的值”：会将原有内容覆盖，并且HTML标签会被解析</p><p>元素对象名.innerHTML&#x3D;元素对象名.innerHTML+”新的值”：追加效果</p><p>元素对象名.innerText&#x3D;”新的值”：会将原有内容覆盖，但HTML标签不会解析，会作为普通文本显示</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zh-CN<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">#div01</span><span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span> solid 1px orange<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">// 获取元素内容</span>        <span class="token keyword">function</span> <span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">// 获取元素对象</span>            <span class="token keyword">var</span> div<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"div01"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 获取元素内容</span>            <span class="token function">alert</span><span class="token punctuation">(</span>div<span class="token punctuation">.</span>innerHTML<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">alert</span><span class="token punctuation">(</span>div<span class="token punctuation">.</span>innerText<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 修改元素内容</span>        <span class="token keyword">function</span> <span class="token function">updateContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">// 获取元素对象</span>            <span class="token keyword">var</span> div<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"div01"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 修改元素对象内容</span>            div<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">"&lt;b>你先上，皇军给你殿后，八嘎&lt;/b>"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">function</span> <span class="token function">updateContext2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">// 获取元素对象</span>            <span class="token keyword">var</span> div<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"div01"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 修改元素对象内容</span>            div<span class="token punctuation">.</span>innerText<span class="token operator">=</span><span class="token string">"&lt;b>你先上，皇军给你殿后，八嘎&lt;/b>"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>js操作元素内容学习<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>测试获取元素内容--innerHTML&amp;innerText<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>测试获取元素内容--innerHTML<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">updateContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>测试获取元素内容--innerText<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">updateContext2</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>div01<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>皇军，前面有八路的干活<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>皇军，前面有八路的干活<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h4 id="js操作元素的样式"><a href="#js操作元素的样式" class="headerlink" title="js操作元素的样式"></a>js操作元素的样式</h4><p>通过style属性：</p><p>元素对象名.style.样式名&#x3D;”样式值”：添加或修改</p><p>元素对象名.style.样式名&#x3D;””：删除样式</p><p>注意：以上操作，操作的是HTML的style属性声明中的样式，而不是其他css代码域中的样式</p><p>通过class属性：</p><p>元素对象名.className&#x3D;”新的值”：添加类选择器样式或者修改类选择器样式</p><p>元素对象名.className&#x3D;””：删除类样式</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zh-CN<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">#showdiv</span><span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span> solid 1px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.common</span><span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span> solid 1px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.common2</span><span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> aqua<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">// js操作元素样式</span>        <span class="token comment">// js给元素操作样式--style</span>        <span class="token keyword">function</span> <span class="token function">testOperCss</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">// 获取元素对象</span>            <span class="token keyword">var</span> showdiv<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"showdiv"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 添加元素样式</span>            showdiv<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor<span class="token operator">=</span><span class="token string">"#FFA500"</span><span class="token punctuation">;</span>            <span class="token comment">// js获取元素样式</span>            showdiv<span class="token punctuation">.</span>style<span class="token punctuation">.</span>border<span class="token operator">=</span><span class="token string">"solid 2px red"</span><span class="token punctuation">;</span>            <span class="token comment">// js删除style属性样式</span>            showdiv<span class="token punctuation">.</span>style<span class="token punctuation">.</span>border<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// js操作样式--className</span>        <span class="token keyword">function</span> <span class="token function">testOperCss2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">// 获取元素对象</span>            <span class="token keyword">var</span> div01<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"div01"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 获取</span>            <span class="token function">alert</span><span class="token punctuation">(</span>div01<span class="token punctuation">.</span>className<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 添加或修改</span>            div01<span class="token punctuation">.</span>className<span class="token operator">=</span><span class="token string">"common2"</span><span class="token punctuation">;</span>            <span class="token comment">// 删除</span>            div01<span class="token punctuation">.</span>className<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>js操作元素的样式<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>测试添加元素样式--style<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testOperCss</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>测试添加元素样式--className<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testOperCss2</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showdiv<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">border</span><span class="token punctuation">:</span> solid 2px blue<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>div01<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>common<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h4 id="js操作文档结构"><a href="#js操作文档结构" class="headerlink" title="js操作文档结构"></a>js操作文档结构</h4><p>添加节点</p><p>删除节点</p><ol><li>使用innerHTML<ol><li>div.innerHTML&#x3D;div.innerHTML+”内容”：增加节点</li><li>div.innerHTML&#x3D;””：删除所有节点</li><li>父节点.removeChild(子节点对象)：删除指定的子节点</li></ol></li></ol><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">function</span> <span class="token function">testAdd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">// 获取元素对象</span>            <span class="token keyword">var</span> showdiv<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"showdiv"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 给div追加上传按钮</span>            showdiv<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span>showdiv<span class="token punctuation">.</span>innerHTML<span class="token operator">+</span><span class="token string">"&lt;div>&lt;input type='file'>&lt;input type='button' value='删除' onclick='delInp(this)'>&lt;br>&lt;/div>"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">function</span> <span class="token function">delInp</span><span class="token punctuation">(</span><span class="token parameter">btn</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> showdiv<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"showdiv"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 获取要删除的子div</span>            <span class="token keyword">var</span> cdiv<span class="token operator">=</span>btn<span class="token punctuation">.</span>parentNode<span class="token punctuation">;</span>            <span class="token comment">// 父div删除子div</span>            showdiv<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>cdiv<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>js操作元素的文档路径<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span><span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>继续上传<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testAdd</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showdiv<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><ol start="2"><li>使用动态追加<ol><li>获取元素对象<ol><li>var obj&#x3D;document.createElement(“标签名”);</li><li>元素对象名.appendChild(obj);</li></ol></li></ol></li></ol><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">// 创建元素对象</span>        <span class="token keyword">function</span> <span class="token function">testOper2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">// 获取元素对象</span>            <span class="token keyword">var</span> showdiv<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"showdiv"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 创建input对象</span>            <span class="token keyword">var</span> inp<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"input"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            inp<span class="token punctuation">.</span>type<span class="token operator">=</span><span class="token string">"file"</span><span class="token punctuation">;</span>            <span class="token comment">// 创建button按钮</span>            <span class="token keyword">var</span> btn<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"input"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            btn<span class="token punctuation">.</span>type<span class="token operator">=</span><span class="token string">"button"</span><span class="token punctuation">;</span>            btn<span class="token punctuation">.</span>value<span class="token operator">=</span><span class="token string">"删除"</span><span class="token punctuation">;</span>                        btn<span class="token punctuation">.</span><span class="token function-variable function">onclick</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                showdiv<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>inp<span class="token punctuation">)</span><span class="token punctuation">;</span>                showdiv<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>btn<span class="token punctuation">)</span><span class="token punctuation">;</span>                showdiv<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>br<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token comment">// 创建换行符</span>            <span class="token keyword">var</span> br<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"br"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 将创建的元素对象存放到div中</span>            showdiv<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>inp<span class="token punctuation">)</span><span class="token punctuation">;</span>            showdiv<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>btn<span class="token punctuation">)</span><span class="token punctuation">;</span>            showdiv<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>br<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>js操作文档结构2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>继续上传<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testOper2</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showdiv<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h4 id="js操作form表单"><a href="#js操作form表单" class="headerlink" title="js操作form表单"></a>js操作form表单</h4><ol><li><p>获取form表单对象</p><ol><li>使用id：<code>var fm=document.getElementById(&quot;fm&quot;);</code></li><li>使用name属性：<code>var frm=document.frm;</code></li></ol></li><li><p>获取form表单对象</p><ol><li><code>fm.elements</code></li></ol></li><li><p>form表单常用功能</p><ol><li>js提交表单：<code>fm.submit();</code></li><li>js重置表单：<code>fm.reset();</code></li></ol></li><li><p>form的属性操作：</p><ol><li>表单对象名.action&#x3D;”新的值”：动态的改变数据的提交路径</li><li>表单对象名.method&#x3D;”新的值”：动态的改变提交的方式</li></ol></li><li><p>js表单元素的通用属性</p><ol><li><p>只读模式：</p><p><code>readonly=&quot;readonly&quot;</code>：不可以更改，但是数据可以提交</p></li><li><p>关闭模式：</p><p><code>disabled=&quot;disabled&quot;</code>：不可以进行任何操作，数据不会提交</p></li></ol></li></ol><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">function</span> <span class="token function">testForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">// 获取form表单</span>            <span class="token keyword">var</span> fm<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"fm"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">alert</span><span class="token punctuation">(</span>fm<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 使用form表单的name属性来获取</span>            <span class="token keyword">var</span> frm<span class="token operator">=</span>document<span class="token punctuation">.</span>frm<span class="token punctuation">;</span>            <span class="token function">alert</span><span class="token punctuation">(</span>frm<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// form表单常用方法</span>            fm<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            fm<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>js操作form表单<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>测试操作form<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>get<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fm<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>frm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        用户名: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>uname<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>uname<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">readonly</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>readonly<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>        密码: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>possword<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pwd<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pwd<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>disabled<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>登录<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h4 id="js-document操作表单元素"><a href="#js-document操作表单元素" class="headerlink" title="js-document操作表单元素"></a>js-document操作表单元素</h4><ol><li>js多选框，单选框<ol><li>被选中状态下在js中checked属性值为true，未选中状态为false；</li></ol></li><li>js下拉框<ol><li>被选择的option对象在js中selected属性值为true，未选中为false</li></ol></li></ol><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">// 获取选项</span>        <span class="token keyword">function</span> <span class="token function">testCheckBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">// 获取所有多选框对象数组</span>            <span class="token keyword">var</span> favs<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementsByName</span><span class="token punctuation">(</span><span class="token string">"fav"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 遍历数组</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>favs<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>favs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>checked<span class="token punctuation">)</span>                <span class="token function">alert</span><span class="token punctuation">(</span>favs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>value<span class="token operator">+</span><span class="token string">":"</span><span class="token operator">+</span>favs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>checked<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 全选</span>        <span class="token keyword">function</span> <span class="token function">testCheckBox2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> favs<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementsByName</span><span class="token punctuation">(</span><span class="token string">"fav"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>favs<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                favs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>checked<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 反选</span>        <span class="token keyword">function</span> <span class="token function">testCheckBox3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> favs<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementsByName</span><span class="token punctuation">(</span><span class="token string">"fav"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>favs<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                favs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>checked<span class="token operator">=</span><span class="token operator">!</span>favs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>checked<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 操作下拉框</span>        <span class="token keyword">function</span> <span class="token function">testSel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">// 获取下拉框对象</span>            <span class="token keyword">var</span> sel<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"address"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// alert(sel.value);</span>            <span class="token comment">// 获取option对象集合</span>            <span class="token keyword">var</span> os<span class="token operator">=</span>sel<span class="token punctuation">.</span>options<span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>os<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>os<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>selected<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token function">alert</span><span class="token punctuation">(</span>os<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>value<span class="token operator">+</span><span class="token string">":"</span><span class="token operator">+</span>os<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>操作表单元素<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>操作多选框<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fav<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fav<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>远走高飞<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fav<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fav<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>当<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fav<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fav<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>李白<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fav<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fav<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>杜甫<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fav<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fav<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>see you again<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fav<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fav<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>6<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>fade<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>播放<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testCheckBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>全选<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testCheckBox2</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>反选<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testCheckBox3</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>address<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onchange</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">testSel</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>--请选择--<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>北京<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>上海<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>广州<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h4 id="js校验from表单"><a href="#js校验from表单" class="headerlink" title="js校验from表单"></a>js校验from表单</h4><p>注意：写项目时可以注释先行后写代码，可以保证思路清晰</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">// 常见验证码</span>        <span class="token keyword">function</span> <span class="token function">createCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 创建随机四位数字</span>            <span class="token keyword">var</span> code <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">9000</span> <span class="token operator">+</span> <span class="token number">1000</span><span class="token punctuation">)</span>            <span class="token comment">// 获取元素对象</span>            <span class="token keyword">var</span> span <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"codeSpan"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 将数字存放到span中</span>            span<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> code<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 验证用户名</span>        <span class="token keyword">function</span> <span class="token function">checkUname</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 获取用户的用户信息</span>            <span class="token keyword">var</span> uname <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"uname"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>            <span class="token comment">// 创建校验规则</span>            <span class="token keyword">var</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[\u4e00-\u9fa5]&#123;2,4&#125;$</span><span class="token regex-delimiter">/</span></span>            <span class="token comment">// 获取span对象</span>            <span class="token keyword">var</span> span <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"unameSpan"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 开始校验</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>uname <span class="token operator">==</span> <span class="token string">""</span> <span class="token operator">||</span> uname <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">// 输出结果</span>                span<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">"*用户名不能为空"</span>                span<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token string">"red"</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>uname<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">// 输出结果</span>                span<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">"*用户名可以使用"</span>                span<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token string">"green"</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token comment">// 输出结果</span>                span<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">"*用户名不符合规则"</span>                span<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token string">"red"</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 校验确认密码</span>        <span class="token keyword">function</span> <span class="token function">checkPwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">// 获取第一次密码</span>            <span class="token keyword">var</span> pwd<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"pwd"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>            <span class="token comment">// 创建校验规则</span>            <span class="token keyword">var</span> reg<span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-z]\w&#123;5,7&#125;$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>            <span class="token comment">// 获取span对象</span>            <span class="token keyword">var</span> span<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"pwdSpan"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 开始校验</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>pwd<span class="token operator">==</span><span class="token string">""</span><span class="token operator">||</span> pwd<span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token comment">// 输出校验结果</span>                span<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">"密码不能为空"</span><span class="token punctuation">;</span>                span<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color<span class="token operator">=</span><span class="token string">"red"</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>pwd<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token comment">// 输出校验结果</span>                span<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">"密码格式正确"</span><span class="token punctuation">;</span>                span<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color<span class="token operator">=</span><span class="token string">"green"</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                <span class="token comment">// 输出校验结果</span>                span<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">"密码格式不正确"</span><span class="token punctuation">;</span>                span<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color<span class="token operator">=</span><span class="token string">"red"</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token function">checkPwd2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 校验确认密码</span>        <span class="token keyword">function</span> <span class="token function">checkPwd2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">// 获取第一次密码</span>            <span class="token keyword">var</span> pwd<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"pwd"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>            <span class="token comment">// 获取确认密码</span>            <span class="token keyword">var</span> pwd2<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"pwd2"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>            <span class="token comment">// 获取span对象</span>            <span class="token keyword">var</span> span<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"pwd2Span"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 比较两次密码是否相同</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>pwd2<span class="token operator">==</span><span class="token string">""</span><span class="token operator">||</span>pwd2<span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                span<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">"确认密码不能为空"</span><span class="token punctuation">;</span>                span<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color<span class="token operator">=</span><span class="token string">"red"</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>pwd<span class="token operator">==</span>pwd2<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                span<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">"密码一致"</span><span class="token punctuation">;</span>                span<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color<span class="token operator">=</span><span class="token string">"green"</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                span<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">"两次密码输入不一致"</span><span class="token punctuation">;</span>                span<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color<span class="token operator">=</span><span class="token string">"red"</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 校验手机号</span>        <span class="token keyword">function</span> <span class="token function">checkPhone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token function">checkField</span><span class="token punctuation">(</span><span class="token string">"phone"</span><span class="token punctuation">,</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^1[3,4,5,7,8]\d&#123;9&#125;$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 检验邮箱</span>        <span class="token keyword">function</span> <span class="token function">cheeckMail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token function">checkField</span><span class="token punctuation">(</span><span class="token string">"mail"</span><span class="token punctuation">,</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\w+@[a-z0-9]+.[a-z]&#123;2,4&#125;$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 校验籍贯</span>        <span class="token keyword">function</span> <span class="token function">checkAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">// 获取用户数据</span>            <span class="token keyword">var</span> sel<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"address"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>            <span class="token comment">// 获取span</span>            <span class="token keyword">var</span> span<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"addressSpan"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 校验</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>sel<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                span<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">"籍贯选择成功"</span><span class="token punctuation">;</span>                span<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color<span class="token operator">=</span><span class="token string">"green"</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                span<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">"籍贯不能为请选择"</span>                span<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color<span class="token operator">=</span><span class="token string">"red"</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 检验爱好</span>        <span class="token keyword">function</span> <span class="token function">checkFav</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">// 获取所有的爱好</span>            <span class="token keyword">var</span> favs<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementsByName</span><span class="token punctuation">(</span><span class="token string">"fav"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 获取span</span>            <span class="token keyword">var</span> span<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"favSpan"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 遍历</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>favs<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>favs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>checked<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    span<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">"爱好选择成功"</span><span class="token punctuation">;</span>                    span<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color<span class="token operator">=</span><span class="token string">"green"</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            span<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">"爱好至少选择一项"</span><span class="token punctuation">;</span>            span<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color<span class="token operator">=</span><span class="token string">"red"</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 封装校验:相同的保留,不同的传参</span>        <span class="token keyword">function</span> <span class="token function">checkField</span><span class="token punctuation">(</span><span class="token parameter">id<span class="token punctuation">,</span> reg</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 获取用户数据</span>            <span class="token keyword">var</span> inp <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> va <span class="token operator">=</span> inp<span class="token punctuation">.</span>value<span class="token punctuation">;</span>            <span class="token keyword">var</span> alt <span class="token operator">=</span> inp<span class="token punctuation">.</span>alt<span class="token punctuation">;</span>            <span class="token comment">// 创建校验规则</span>            <span class="token comment">// 获取span对象</span>            <span class="token keyword">var</span> span <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>id<span class="token operator">+</span><span class="token string">"Span"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 开始校验</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>va <span class="token operator">===</span> <span class="token string">""</span> <span class="token operator">||</span> va <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">// 输出结果</span>                span<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> alt <span class="token operator">+</span> <span class="token string">"不能为空"</span><span class="token punctuation">;</span>                span<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token string">"red"</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>va<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">// 输出结果</span>                span<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> alt <span class="token operator">+</span> <span class="token string">"可以使用"</span><span class="token punctuation">;</span>                span<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token string">"green"</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                span<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> alt <span class="token operator">+</span> <span class="token string">"不符合规则"</span><span class="token punctuation">;</span>                span<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token string">"red"</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 校验是否同意本公司协议</span>        <span class="token keyword">function</span> <span class="token function">checkAgree</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"sub"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>disabled<span class="token operator">=</span><span class="token operator">!</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"agree"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>checked<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 提交判断</span>        <span class="token keyword">function</span> <span class="token function">checkSub</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token function">checkUname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">checkPwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">checkPwd2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">checkPhone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">cheeckMail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">checkAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">checkFav</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token function">checkUname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token function">checkPwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token function">checkPwd2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token function">checkPhone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token function">cheeckMail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token function">checkAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token function">checkFav</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token special-attr"><span class="token attr-name">onload</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">createCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>get<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onsubmit</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token keyword">return</span> <span class="token function">checkSub</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>        验证码: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>codeSpan<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">createCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span> <span class="token property">background-color</span><span class="token punctuation">:</span> palevioletred<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>        用户名: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>uname<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>uname<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onblur</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">checkUname</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>unameSpan<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>*2-4位汉字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>        手机号: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>phone<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>phone<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onblur</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">checkPhone</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>手机号<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>phoneSpan<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>        邮箱: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mail<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mail<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onblur</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">cheeckMail</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>邮箱<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mailSpan<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>        密码: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pwd<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pwd<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onblur</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">checkPwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pwdSpan<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>        密码: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pwd2<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pwd2<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onblur</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">checkPwd2</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pwd2Span<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>        籍贯: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>address<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>address<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onchange</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">checkAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>--请选择--<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>北京<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>上海<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>广州<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>addressSpan<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>        爱好: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fav<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onblur</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">checkFav</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>LOL        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fav<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onblur</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">checkFav</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>睡觉        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fav<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onblur</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">checkFav</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>吃饭 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fav<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onblur</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">checkFav</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>打豆豆        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fav<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onblur</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">checkFav</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>看电影        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fav<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onblur</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">checkFav</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>听歌        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>favSpan<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>        是否同意本公司协议:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>agree<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">checkAgree</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sub<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>立即注册<span class="token punctuation">"</span></span> <span class="token attr-name">disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>disabled<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="原生AJAX"><a href="#原生AJAX" class="headerlink" title="原生AJAX"></a>原生AJAX</h3><h4 id="AJAX简介"><a href="#AJAX简介" class="headerlink" title="AJAX简介"></a>AJAX简介</h4><p>AJAX全称Asynchronous JavaScript And XML，就是异步的js和XML</p><p>通过ajax可以在浏览器中向服务器发送异步请求，最大优势：<strong>无刷新获取数据</strong></p><p>AJAX不是新的编程语言，而是一种将现有的标准组合在一起使用的新方式</p><h4 id="XML简介"><a href="#XML简介" class="headerlink" title="XML简介"></a>XML简介</h4><p>XML：可扩展标记语言</p><p>XML用途：曾被设计用来传输和存储ajax数据</p><p>注意：XML和HTML类似，不同的是HTML中都是预定义标签，而XML中没有预定义标签</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>student</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>孙悟空<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>age</span><span class="token punctuation">></span></span>18<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>age</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>gender</span><span class="token punctuation">></span></span>男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>gender</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>student</span><span class="token punctuation">></span></span></code></pre><h4 id="AJAX的特点"><a href="#AJAX的特点" class="headerlink" title="AJAX的特点"></a>AJAX的特点</h4><h5 id="AJAX的优点"><a href="#AJAX的优点" class="headerlink" title="AJAX的优点"></a>AJAX的优点</h5><ol><li>可以无需刷新页面而与服务器端进行通信</li><li>允许根据用户事件来更新部分页面内容</li></ol><h5 id="AJAX的缺点"><a href="#AJAX的缺点" class="headerlink" title="AJAX的缺点"></a>AJAX的缺点</h5><ol><li>没有浏览历史，不能回退</li><li>存在跨域问题(同源)</li><li>SEO不好</li></ol><h3 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a>HTTP协议</h3><p><strong>介绍</strong>：超文本传输协议（Hyper Text Transfer Protocol，HTTP）是一个简单的请求-响应协议，它通常运行在<a href="https://baike.baidu.com/item/TCP/33012">TCP</a>之上。它指定了客户端可能发送给服务器什么样的消息以及得到什么样的响应。</p><h4 id="请求报文"><a href="#请求报文" class="headerlink" title="请求报文"></a>请求报文</h4><p><strong>重点是格式和参数</strong></p><p>行：GET,POST（请求方式） + &#x2F;s?ie&#x3D;utf-8（请求内容） + HTTP&#x2F;1.1（协议版本）</p><p>头：Host（域名）: atguigu.com</p><p>​Cookie: name&#x3D;guigu</p><p>​Content-type（内容类型）: application&#x2F;x-www-form-urlencoded</p><p>​User-Agent（用户浏览器）: Chrome 83</p><p>空行：</p><p>体：username&#x3D;admin&amp;password&#x3D;admin</p><h4 id="响应报文"><a href="#响应报文" class="headerlink" title="响应报文"></a>响应报文</h4><p>行：HTTP&#x2F;1.1（协议版本）200，403，404（响应状态码）OK（响应状态字符串）</p><p>头：Content-Type（内容类型）：text&#x2F;html;charset&#x3D;utf-8</p><p>​Content-length（内容长度）：2048</p><p>​Content-encoding（压缩媒体类型）：gzip</p><p>空行：</p><p>体：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>学习ajax<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="express使用"><a href="#express使用" class="headerlink" title="express使用"></a>express使用</h3><h4 id="下载安装express"><a href="#下载安装express" class="headerlink" title="下载安装express"></a>下载安装express</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i <span class="token parameter variable">--yes</span><span class="token function">npm</span> <span class="token function">install</span> express <span class="token comment">#将express安装在node_modules(全局目录)下</span></code></pre><h4 id="使用express"><a href="#使用express" class="headerlink" title="使用express"></a>使用express</h4><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//1. 引入express</span><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//2. 引入应用对象</span><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//3. 创建路由规则</span><span class="token comment">// request是对请求报文的封装</span><span class="token comment">// response是对响应报文的封装</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span>response</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    <span class="token comment">//设置响应  设置允许跨域</span>    response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">'Access-Control-Allow-Origin'</span><span class="token punctuation">,</span><span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置响应头</span>    response<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'HELLO EXPRESS'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置响应体</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//4. 监听端口启动服务</span>app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"服务已经启动, 8000 端口监听中...."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><h3 id="AJAX请求"><a href="#AJAX请求" class="headerlink" title="AJAX请求"></a>AJAX请求</h3><h4 id="GET请求"><a href="#GET请求" class="headerlink" title="GET请求"></a>GET请求</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>AJAX GET 请求<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">#result</span> <span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span> solid 1px #90b<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>点击发送请求<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>result<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">// 获取button元素</span>        <span class="token keyword">const</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment">// 绑定事件</span>        btn<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 1.创建对象（ajax操作,xhr）</span>            <span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 2.设置请求方法和 url</span>            xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'http://127.0.0.1:8000/server'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 将http://127.0.0.1:8000/server加上?a=100&amp;b=200&amp;c=300即可传递a:100,b:200,c:300的参数</span>            <span class="token comment">// 3.发送</span>            xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 4.事件绑定 处理服务端返回的结果</span>            <span class="token comment">// on when 当.....时候</span>            <span class="token comment">// readystate 是xhr 对象中的属性，表示状态,有五个值： 0 1 2 3 4</span>            <span class="token comment">// 0表示未初始化</span>            <span class="token comment">// 1表示open方法调用完毕</span>            <span class="token comment">// 2表示send调用完毕</span>            <span class="token comment">// 3表示服务端返回部分结果</span>            <span class="token comment">// 4表示服务端返回全部结果</span>            <span class="token comment">// change 改变</span>            xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">// 判断（服务端返回了所有结果）</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token comment">// 判断响应状态码 200 40x 500</span>                    <span class="token comment">// 2xx 成功</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">>=</span> <span class="token number">200</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>status <span class="token operator">&lt;</span> <span class="token number">300</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token comment">// 处理结果 行 头 空行 体</span>                        <span class="token comment">// 1.响应行</span>                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 状态码</span>                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>statusText<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 状态字符串</span>                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span><span class="token function">getAllResponseHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 所有响应头</span>                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 响应体</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//1. 引入express</span><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//2. 引入应用对象</span><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//3. 创建路由规则</span><span class="token comment">// request是对请求报文的封装</span><span class="token comment">// response是对响应报文的封装</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/server'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span>response</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    <span class="token comment">//设置响应  设置允许跨域</span>    response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">'Access-Control-Allow-Origin'</span><span class="token punctuation">,</span><span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置响应头</span>    response<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'HELLO AJAX GET'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置响应体</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/server'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span>response</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    <span class="token comment">//设置响应  设置允许跨域</span>    response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">'Access-Control-Allow-Origin'</span><span class="token punctuation">,</span><span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置响应头</span>    response<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'HELLO AJAX POST'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置响应体</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//4. 监听端口启动服务</span>app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"服务已经启动, 8000 端口监听中...."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><h4 id="POST请求"><a href="#POST请求" class="headerlink" title="POST请求"></a>POST请求</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>AJAX POST请求<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">#result</span> <span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span> solid 1px #903<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>result<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">// 获取元素对象</span>        <span class="token keyword">const</span> result <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"result"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 绑定事件</span>        result<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"mouseover"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 1. 创建对象</span>            <span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 2. 初始化 设置类型与URL</span>            xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'POST'</span><span class="token punctuation">,</span> <span class="token string">'http://127.0.0.1:8000/server'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 设置请求头</span>            xhr<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token string">'Content-Type'</span><span class="token punctuation">,</span><span class="token string">'application/x-www-form-urlencoded'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            xhr<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">,</span><span class="token string">'atguigu'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 3. 发送</span>            <span class="token comment">// post可以在send中设置请求体内容</span>            xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'a=100&amp;&amp;b=200&amp;c=300'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// xhr.send('a:100&amp;&amp;b:200&amp;c:300');</span>            <span class="token comment">// 可以随意发送请求内容但是要有与之相匹配的响应结果</span>            xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'1233211234567'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 4. 事件绑定</span>            xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">// 判断</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">>=</span> <span class="token number">200</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>status <span class="token operator">&lt;</span> <span class="token number">300</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token comment">// 处理服务器返回的结果</span>                        result<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> xhr<span class="token punctuation">.</span>response<span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//1. 引入express</span><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//2. 引入应用对象</span><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//3. 创建路由规则</span><span class="token comment">// request是对请求报文的封装</span><span class="token comment">// response是对响应报文的封装</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/server'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span>response</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    <span class="token comment">//设置响应  设置允许跨域</span>    response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">'Access-Control-Allow-Origin'</span><span class="token punctuation">,</span><span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置响应头</span>    response<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'HELLO AJAX GET'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置响应体</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token string">'/server'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span>response</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    <span class="token comment">//设置响应头</span>    <span class="token comment">//设置响应  设置允许跨域</span>    response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">'Access-Control-Allow-Origin'</span><span class="token punctuation">,</span><span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 设置允许所有响应头</span>    response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">'Access-Control-Allow-Headers'</span><span class="token punctuation">,</span><span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//设置响应体</span>    response<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'HELLO AJAX POST'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//4. 监听端口启动服务</span>app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"服务已经启动, 8000 端口监听中...."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><h4 id="JSON请求"><a href="#JSON请求" class="headerlink" title="JSON请求"></a>JSON请求</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>JSON响应<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">#result</span><span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span> solid 1px #89b<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>result<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">const</span> result <span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'result'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 绑定键盘按下事件</span>        window<span class="token punctuation">.</span><span class="token function-variable function">onkeydown</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">// 发送请求</span>        <span class="token keyword">const</span> xhr<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 设置响应体数据的类型(自动转换)</span>        xhr<span class="token punctuation">.</span>responseType<span class="token operator">=</span><span class="token string">'json'</span><span class="token punctuation">;</span>        <span class="token comment">// 初始化</span>        xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'get'</span><span class="token punctuation">,</span><span class="token string">'http://127.0.0.1:8000/json-server'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 发送</span>        xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 事件绑定</span>        xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState<span class="token operator">===</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status<span class="token operator">>=</span><span class="token number">200</span> <span class="token operator">&amp;&amp;</span>xhr<span class="token punctuation">.</span>status<span class="token operator">&lt;</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token comment">// console.log(xhr.response);</span>                    <span class="token comment">// result.innerHTML=xhr.response;</span>                    <span class="token comment">// 1.手动对数据转化</span>                    <span class="token comment">// let data=JSON.parse(xhr.response);</span>                    <span class="token comment">// console.log(data);</span>                    <span class="token comment">// result.innerHTML=data.name;</span>                                        <span class="token comment">// 2.自动转换</span>                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>                    result<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span>xhr<span class="token punctuation">.</span>response<span class="token punctuation">.</span>name<span class="token punctuation">;</span>                                    <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>            </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//1. 引入express</span><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//2. 引入应用对象</span><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//3. 创建路由规则</span><span class="token comment">// request是对请求报文的封装</span><span class="token comment">// response是对响应报文的封装</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/server'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span>response</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    <span class="token comment">//设置响应  设置允许跨域</span>    response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">'Access-Control-Allow-Origin'</span><span class="token punctuation">,</span><span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置响应头</span>    response<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'HELLO AJAX GET'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置响应体</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 可以接受任意类型的请求</span>app<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token string">'/server'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span>response</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    <span class="token comment">//设置响应头</span>    <span class="token comment">//设置响应  设置允许跨域</span>    response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">'Access-Control-Allow-Origin'</span><span class="token punctuation">,</span><span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 设置允许所有响应头</span>    response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">'Access-Control-Allow-Headers'</span><span class="token punctuation">,</span><span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//设置响应体</span>    response<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'HELLO AJAX POST'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token string">'/json-server'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span>response</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    <span class="token comment">//设置响应头</span>    <span class="token comment">//设置响应  设置允许跨域</span>    response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">'Access-Control-Allow-Origin'</span><span class="token punctuation">,</span><span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 设置允许所有响应头</span>    response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">'Access-Control-Allow-Headers'</span><span class="token punctuation">,</span><span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 响应一个数据</span>    <span class="token keyword">const</span> data<span class="token operator">=</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'atguigu'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token comment">// 设置响应体</span>    <span class="token keyword">let</span> str<span class="token operator">=</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 设置响应体</span>    response<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//4. 监听端口启动服务</span>app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"服务已经启动, 8000 端口监听中...."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><h4 id="安装nodemon"><a href="#安装nodemon" class="headerlink" title="安装nodemon"></a>安装nodemon</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> nodemon</code></pre><p><strong>使用</strong>：在运行js时输入<code>nodemon sever.js</code>即可在保存时自动刷新js服务。</p><h4 id="IE缓存问题"><a href="#IE缓存问题" class="headerlink" title="IE缓存问题"></a>IE缓存问题</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>IE缓存问题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">#result</span><span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span> solid 1px #258<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>点击发送请求<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>result<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">const</span> btn<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> result<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#result'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        btn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">const</span> xhr<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">,</span><span class="token string">'http://127.0.0.1:8000/ie?t='</span><span class="token operator">+</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState<span class="token operator">===</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status<span class="token operator">>=</span><span class="token number">200</span><span class="token operator">&amp;&amp;</span>xhr<span class="token punctuation">.</span>status<span class="token operator">&lt;</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        result<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span>xhr<span class="token punctuation">.</span>response<span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//1. 引入express</span><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//2. 引入应用对象</span><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//3. 创建路由规则</span><span class="token comment">// request是对请求报文的封装</span><span class="token comment">// response是对响应报文的封装</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/server'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span>response</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    <span class="token comment">//设置响应  设置允许跨域</span>    response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">'Access-Control-Allow-Origin'</span><span class="token punctuation">,</span><span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置响应头</span>    <span class="token comment">//设置响应体</span>    response<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'HELLO AJAX GET'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 可以接受任意类型的请求</span>app<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token string">'/server'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span>response</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    <span class="token comment">//设置响应头</span>    <span class="token comment">//设置响应  设置允许跨域</span>    response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">'Access-Control-Allow-Origin'</span><span class="token punctuation">,</span><span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 设置允许所有响应头</span>    response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">'Access-Control-Allow-Headers'</span><span class="token punctuation">,</span><span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//设置响应体</span>    response<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'HELLO AJAX POST'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token string">'/json-server'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span>response</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    <span class="token comment">//设置响应头</span>    <span class="token comment">//设置响应  设置允许跨域</span>    response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">'Access-Control-Allow-Origin'</span><span class="token punctuation">,</span><span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 设置允许所有响应头</span>    response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">'Access-Control-Allow-Headers'</span><span class="token punctuation">,</span><span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 响应一个数据</span>    <span class="token keyword">const</span> data<span class="token operator">=</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'atguigu'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token comment">// 设置响应体</span>    <span class="token keyword">let</span> str<span class="token operator">=</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 设置响应体</span>    response<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 针对IE缓存</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/ie'</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span>response</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    <span class="token comment">//设置响应  设置允许跨域</span>    response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">'Access-Control-Allow-Origin'</span><span class="token punctuation">,</span><span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置响应头</span>    <span class="token comment">//设置响应体</span>    response<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'HELLO IE - 3'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">//4. 监听端口启动服务</span>app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"服务已经启动, 8000 端口监听中...."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">//调用nodemon，在sever文件修改时自动重启服务</span><span class="token comment">//nodemon sever.js</span><span class="token comment">//npm install -g nodemon(安装nodemon)</span></code></pre><h4 id="请求超时与网络异常"><a href="#请求超时与网络异常" class="headerlink" title="请求超时与网络异常"></a>请求超时与网络异常</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>请求超时与网络异常<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">#result</span> <span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span> solid 1px #90b<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>点击发送请求<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>result<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">const</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> result <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#result'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        btn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 超时设置2s</span>            xhr<span class="token punctuation">.</span>timeout <span class="token operator">=</span> <span class="token number">2000</span><span class="token punctuation">;</span>            <span class="token comment">// 超时回调</span>            xhr<span class="token punctuation">.</span><span class="token function-variable function">ontimeout</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'网络异常，请稍后重试!!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token comment">// 网络异常回调</span>            xhr<span class="token punctuation">.</span><span class="token function-variable function">onerror</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'你的网络似乎出了一些问题!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">,</span> <span class="token string">'http://127.0.0.1:8000/delay?t='</span> <span class="token operator">+</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">>=</span> <span class="token number">200</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>status <span class="token operator">&lt;</span> <span class="token number">300</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        result<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> xhr<span class="token punctuation">.</span>response<span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//1. 引入express</span><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//2. 引入应用对象</span><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//3. 创建路由规则</span><span class="token comment">// request是对请求报文的封装</span><span class="token comment">// response是对响应报文的封装</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/server'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span>response</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    <span class="token comment">//设置响应  设置允许跨域</span>    response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">'Access-Control-Allow-Origin'</span><span class="token punctuation">,</span><span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置响应头</span>    <span class="token comment">//设置响应体</span>    response<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'HELLO AJAX GET'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 可以接受任意类型的请求</span>app<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token string">'/server'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span>response</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    <span class="token comment">//设置响应头</span>    <span class="token comment">//设置响应  设置允许跨域</span>    response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">'Access-Control-Allow-Origin'</span><span class="token punctuation">,</span><span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 设置允许所有响应头</span>    response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">'Access-Control-Allow-Headers'</span><span class="token punctuation">,</span><span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//设置响应体</span>    response<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'HELLO AJAX POST'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token string">'/json-server'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span>response</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    <span class="token comment">//设置响应头</span>    <span class="token comment">//设置响应  设置允许跨域</span>    response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">'Access-Control-Allow-Origin'</span><span class="token punctuation">,</span><span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 设置允许所有响应头</span>    response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">'Access-Control-Allow-Headers'</span><span class="token punctuation">,</span><span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 响应一个数据</span>    <span class="token keyword">const</span> data<span class="token operator">=</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'atguigu'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token comment">// 设置响应体</span>    <span class="token keyword">let</span> str<span class="token operator">=</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 设置响应体</span>    response<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 针对IE缓存</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/ie'</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span>response</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    <span class="token comment">//设置响应头</span>    <span class="token comment">//设置允许跨域</span>    response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">'Access-Control-Allow-Origin'</span><span class="token punctuation">,</span><span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//设置响应体</span>    response<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'HELLO IE - 3'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 延时响应</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/delay'</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span>response</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    <span class="token comment">//设置响应头</span>    <span class="token comment">//设置允许跨域</span>    response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">'Access-Control-Allow-Origin'</span><span class="token punctuation">,</span><span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token comment">//设置响应体</span>        response<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'延时响应'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">//4. 监听端口启动服务</span>app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"服务已经启动, 8000 端口监听中...."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><h4 id="取消请求"><a href="#取消请求" class="headerlink" title="取消请求"></a>取消请求</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>取消请求<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>点击发送<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>点击取消<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">// 获取元素对象</span>        <span class="token keyword">const</span> btns <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        btns<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            x <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            x<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">,</span> <span class="token string">'http://127.0.0.1:8000/delay'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            x<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>                <span class="token comment">// abort </span>        btns<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            x<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h4 id="取消用户重复请求"><a href="#取消用户重复请求" class="headerlink" title="取消用户重复请求"></a>取消用户重复请求</h4><p><strong>目的</strong>：减缓服务器压力，防止用户发送多个请求</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>重复请求问题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>点击发送<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">// 获取元素对象</span>        <span class="token keyword">const</span> btns <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token comment">// 标识变量(是否正在发送ajax请求)</span>        <span class="token keyword">let</span> isSending <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        btns<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 判断标识变量</span>            <span class="token comment">// 如果正在发送，则取消发送，创建一个新的请求</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>isSending<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                x<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            x <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 修改标识变量值</span>            isSending <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            x<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">,</span> <span class="token string">'http://127.0.0.1:8000/delay'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            x<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            x<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>x<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token comment">// 修改标识变量</span>                    isSending <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="同源策略"><a href="#同源策略" class="headerlink" title="同源策略"></a>同源策略</h3><p><strong>性值</strong>：<strong>同源策略</strong>是一个重要的安全策略，它用于限制一个<a href="https://developer.mozilla.org/zh-CN/docs/Glossary/Origin">origin</a>的文档或者它加载的脚本如何能与另一个源的资源进行交互。</p><p><strong>作用</strong>：它能帮助阻隔恶意文档，减少可能被攻击的媒介。</p><p><strong>同源</strong>：协议、域名、端口号、必须完全相同</p><p><strong>注意</strong>：违背同源策略就是<strong>跨域</strong>，ajax默认遵循同源策略</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>首页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>wqa<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>点击获取用户数据<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">const</span> btn<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        btn<span class="token punctuation">.</span><span class="token function-variable function">onclick</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">const</span> x<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 这里因为是满足同源策略的,所以url可以简写</span>            x<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">,</span><span class="token string">'/data'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 发送</span>            x<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            x<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>readyState<span class="token operator">===</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>status<span class="token operator">>=</span><span class="token number">200</span><span class="token operator">&amp;&amp;</span>x<span class="token punctuation">.</span>status<span class="token operator">&lt;</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> express<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> app<span class="token operator">=</span><span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/home'</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span>response</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    <span class="token comment">// 响应一个页面</span>    response<span class="token punctuation">.</span><span class="token function">sendFile</span><span class="token punctuation">(</span>__dirname<span class="token operator">+</span><span class="token string">'/index.html'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/data'</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span>response</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    response<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'用户数据'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">9000</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"服务已经启动..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><h3 id="如何解决跨域"><a href="#如何解决跨域" class="headerlink" title="如何解决跨域"></a>如何解决跨域</h3><h4 id="CORS"><a href="#CORS" class="headerlink" title="CORS"></a>CORS</h4><p><strong>性值</strong>：CORS，跨域资源共享，官方的跨域解决方案</p><p><strong>特点</strong>：</p><ol><li>不需要再客户端做任何特殊操作，完全在服务器中进行处理，支持get和post请求</li><li>跨域资源共享标准新增了一组HTTP首部字段，允许服务器声明哪些资源站通过浏览器有权访问哪些资源</li></ol><p><strong>工作原理</strong>：通过设置响应头告诉浏览器，该请求允许跨域，浏览器收到该响应以后就会对响应放行</p><p><strong>使用</strong>：</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>CORS<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">#result</span><span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span> solid 1px #90b<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>发送请求<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>result<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">const</span> btn<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        btn<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">// 1.创建对象</span>            <span class="token keyword">const</span> x<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 2.初始化设置</span>            x<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">,</span><span class="token string">"http://127.0.0.1:8000/cors-server"</span><span class="token punctuation">)</span>            <span class="token comment">// 发送</span>            x<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 绑定事件</span>            x<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>readyState<span class="token operator">===</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>status<span class="token operator">>=</span><span class="token number">200</span><span class="token operator">&amp;&amp;</span>x<span class="token punctuation">.</span>status<span class="token operator">&lt;</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        <span class="token comment">// 输出响应体</span>                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><pre class="language-javascript" data-language="javascript"><code class="language-javascript">app<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token string">'/cors-server'</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span>response</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    <span class="token comment">// 设置响应头</span>    response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Access-Control-Allow-Origin"</span><span class="token punctuation">,</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Access-Control-Allow-Headers"</span><span class="token punctuation">,</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Access-Control-Allow-Method"</span><span class="token punctuation">,</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    response<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'hello CORS'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><h4 id="JSONP"><a href="#JSONP" class="headerlink" title="JSONP"></a>JSONP</h4><p><strong>性质</strong>：JSONP是一个非官方的跨域解决方案，只支持get请求</p><p><strong>工作原理</strong>：在网页有一些标签天生具有跨域能力，比如：img link iframe script，JSONP就是利用script标签的跨域能力来发送请求的</p><p><strong>使用</strong>：</p><ol><li>原理</li></ol><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>原理<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">#result</span> <span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span> solid 1px #78a<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>result<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">// 处理数据</span>        <span class="token keyword">function</span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 获取result元素</span>            <span class="token keyword">const</span> result <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'result'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            result<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> data<span class="token punctuation">.</span>name<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- &lt;script src="http://127.0.0.1:5500/express%E6%A1%86%E6%9E%B6/%E8%B7%A8%E5%9F%9F/JSONP/app.js">&lt;/script> --></span>        <span class="token comment">&lt;!-- jsonp跨域请求，请求内容只能是js代码 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://127.0.0.1:8000/jsonp-server<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> data<span class="token operator">=</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'尚硅谷atguigu'</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token function">handle</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// console.log(data);</span></code></pre><ol start="2"><li>案例</li></ol><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>案例<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    用户名: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">// 获取input元素</span>        <span class="token keyword">const</span> input <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> p <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'p'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 声明handle函数</span>        <span class="token keyword">function</span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            input<span class="token punctuation">.</span>style<span class="token punctuation">.</span>border<span class="token operator">=</span><span class="token string">"solid 1px #f00"</span><span class="token punctuation">;</span>            <span class="token comment">// 修改p标签提示文本</span>            p<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span>data<span class="token punctuation">.</span>msg<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 绑定事件</span>        input<span class="token punctuation">.</span><span class="token function-variable function">onblur</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">// 获取用户输入值</span>            <span class="token keyword">let</span> username<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>            <span class="token comment">// 向服务器发送请求 检测用户名是否存在</span>            <span class="token comment">// 1. 创建 script标签</span>            <span class="token keyword">const</span> script <span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'script'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 2. 设置标签的src属性</span>            script<span class="token punctuation">.</span>src<span class="token operator">=</span><span class="token string">'http://127.0.0.1:8000/check-username'</span><span class="token punctuation">;</span>            <span class="token comment">// 3. 将script插入到文档中</span>            document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>script<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 用户名是否存在</span>app<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token string">'/check-username'</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span>response</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    <span class="token comment">// response.send('console.log("hello jsonp")');</span>    <span class="token keyword">const</span> data<span class="token operator">=</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">exist</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>        <span class="token literal-property property">msg</span><span class="token operator">:</span><span class="token string">'用户名已存在'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token comment">// 将数据转换为字符串</span>    <span class="token keyword">let</span> str<span class="token operator">=</span><span class="token constant">JSON</span><span class="token punctuation">.</span> <span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 返回结果   </span>    response<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">handle(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>str<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
